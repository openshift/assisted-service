registry: quay.io
build-container-image: assisted-service-build

# The host network is unsupported for "Docker for desktop" (which is used in macOS) but it partially works.
# For example: creating a new Nginx container with the "host" network using the command "docker run --net host nginx"
# doesn't open the 80 port on the host and you won't be able to access the service on the host using localhost:80.
# From the container, it's possible to access the host ports,
# For example create an nginx container using the command: "docker run -p 80:80 nginx"
# Now create a new container using the command: "docker run -it --net host centos curl http://localhost:80/"
# The centos container can access the Nginx page although it is published to the host.

# The unit-test makefile target starts a new Postgres container and publishes its port to the host.
# There is three options to access the Postgres DB:
# 1. Create a new container on the "host" network and access it at localhost:5432
# 2. Create a new container and access it at host.docker.internal:5432
# 3. Access the container directly container:5432
# We choose the first option since using the other options required a lot of changes
build-container-net: host

containers:
    assisted-service-build: Dockerfile.assisted-service-build
volumes:
    - $HOME/.cache/go-build:/go/pkg/mod
    - $HOME/.cache/golangci-lint:$HOME/.cache/golangci-lint
    - $HOME/.minikube:$HOME/.minikube
    - $HOME/.docker/:$HOME/.docker
env:
    BUILD_TYPE: $BUILD_TYPE
    SERVICE: $SERVICE
    ISO_CREATION: $ISO_CREATION
    KUBECONFIG: $KUBECONFIG
    NAMESPACE: $NAMESPACE
    PROFILE: $PROFILE
    APPLY_NAMESPACE: $APPLY_NAMESPACE
    TARGET: $TARGET
    INGRESS_DOMAIN: $INGRESS_DOMAIN
    TEST_FLAGS: $TEST_FLAGS
    FOCUS: $FOCUS
    GOCACHE: "/go/pkg/mod"
    OCM_CLIENT_ID: $OCM_CLIENT_ID
    OCM_CLIENT_SECRET: $OCM_CLIENT_SECRET
    SERVICE_REPLICAS_COUNT: $SERVICE_REPLICAS_COUNT
    ASSISTED_TAG: $ASSISTED_TAG
    ASSISTED_ORG: $ASSISTED_ORG
    E2E_TESTS_CONFIG: $E2E_TESTS_CONFIG
    CHECK_CLUSTER_VERSION: $CHECK_CLUSTER_VERSION
    ENABLE_KUBE_API: $ENABLE_KUBE_API
    DOCKER_CONFIG: $DOCKER_CONFIG
    WITH_AMS_SUBSCRIPTIONS: $WITH_AMS_SUBSCRIPTIONS
    CRD_OPTIONS: $CRD_OPTIONS
    AUTH_TYPE: $AUTH_TYPE
