// Code generated by MockGen. DO NOT EDIT.
// Source: local_cluster_import_operations.go

// Package localclusterimport is a generated GoMock package.
package localclusterimport

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/openshift/api/config/v1"
	v1beta1 "github.com/openshift/assisted-service/api/hiveextension/v1beta1"
	v1beta10 "github.com/openshift/assisted-service/api/v1beta1"
	v10 "github.com/openshift/hive/apis/hive/v1"
	v11 "k8s.io/api/core/v1"
)

// MockClusterImportOperations is a mock of ClusterImportOperations interface.
type MockClusterImportOperations struct {
	ctrl     *gomock.Controller
	recorder *MockClusterImportOperationsMockRecorder
}

// MockClusterImportOperationsMockRecorder is the mock recorder for MockClusterImportOperations.
type MockClusterImportOperationsMockRecorder struct {
	mock *MockClusterImportOperations
}

// NewMockClusterImportOperations creates a new mock instance.
func NewMockClusterImportOperations(ctrl *gomock.Controller) *MockClusterImportOperations {
	mock := &MockClusterImportOperations{ctrl: ctrl}
	mock.recorder = &MockClusterImportOperationsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterImportOperations) EXPECT() *MockClusterImportOperationsMockRecorder {
	return m.recorder
}

// CreateAgentClusterInstall mocks base method.
func (m *MockClusterImportOperations) CreateAgentClusterInstall(agentClusterInstall *v1beta1.AgentClusterInstall) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgentClusterInstall", agentClusterInstall)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAgentClusterInstall indicates an expected call of CreateAgentClusterInstall.
func (mr *MockClusterImportOperationsMockRecorder) CreateAgentClusterInstall(agentClusterInstall interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgentClusterInstall", reflect.TypeOf((*MockClusterImportOperations)(nil).CreateAgentClusterInstall), agentClusterInstall)
}

// CreateClusterDeployment mocks base method.
func (m *MockClusterImportOperations) CreateClusterDeployment(clusterDeployment *v10.ClusterDeployment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClusterDeployment", clusterDeployment)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateClusterDeployment indicates an expected call of CreateClusterDeployment.
func (mr *MockClusterImportOperationsMockRecorder) CreateClusterDeployment(clusterDeployment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClusterDeployment", reflect.TypeOf((*MockClusterImportOperations)(nil).CreateClusterDeployment), clusterDeployment)
}

// CreateClusterImageSet mocks base method.
func (m *MockClusterImportOperations) CreateClusterImageSet(clusterImageSet *v10.ClusterImageSet) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClusterImageSet", clusterImageSet)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateClusterImageSet indicates an expected call of CreateClusterImageSet.
func (mr *MockClusterImportOperationsMockRecorder) CreateClusterImageSet(clusterImageSet interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClusterImageSet", reflect.TypeOf((*MockClusterImportOperations)(nil).CreateClusterImageSet), clusterImageSet)
}

// CreateNamespace mocks base method.
func (m *MockClusterImportOperations) CreateNamespace(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNamespace", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNamespace indicates an expected call of CreateNamespace.
func (mr *MockClusterImportOperationsMockRecorder) CreateNamespace(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNamespace", reflect.TypeOf((*MockClusterImportOperations)(nil).CreateNamespace), name)
}

// CreateSecret mocks base method.
func (m *MockClusterImportOperations) CreateSecret(namespace string, secret *v11.Secret) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSecret", namespace, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSecret indicates an expected call of CreateSecret.
func (mr *MockClusterImportOperationsMockRecorder) CreateSecret(namespace, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSecret", reflect.TypeOf((*MockClusterImportOperations)(nil).CreateSecret), namespace, secret)
}

// GetAgentServiceConfig mocks base method.
func (m *MockClusterImportOperations) GetAgentServiceConfig() (*v1beta10.AgentServiceConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentServiceConfig")
	ret0, _ := ret[0].(*v1beta10.AgentServiceConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentServiceConfig indicates an expected call of GetAgentServiceConfig.
func (mr *MockClusterImportOperationsMockRecorder) GetAgentServiceConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentServiceConfig", reflect.TypeOf((*MockClusterImportOperations)(nil).GetAgentServiceConfig))
}

// GetClusterDNS mocks base method.
func (m *MockClusterImportOperations) GetClusterDNS() (*v1.DNS, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterDNS")
	ret0, _ := ret[0].(*v1.DNS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterDNS indicates an expected call of GetClusterDNS.
func (mr *MockClusterImportOperationsMockRecorder) GetClusterDNS() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterDNS", reflect.TypeOf((*MockClusterImportOperations)(nil).GetClusterDNS))
}

// GetClusterImageSet mocks base method.
func (m *MockClusterImportOperations) GetClusterImageSet(name string) (*v10.ClusterImageSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterImageSet", name)
	ret0, _ := ret[0].(*v10.ClusterImageSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterImageSet indicates an expected call of GetClusterImageSet.
func (mr *MockClusterImportOperationsMockRecorder) GetClusterImageSet(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterImageSet", reflect.TypeOf((*MockClusterImportOperations)(nil).GetClusterImageSet), name)
}

// GetClusterVersion mocks base method.
func (m *MockClusterImportOperations) GetClusterVersion(name string) (*v1.ClusterVersion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterVersion", name)
	ret0, _ := ret[0].(*v1.ClusterVersion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterVersion indicates an expected call of GetClusterVersion.
func (mr *MockClusterImportOperationsMockRecorder) GetClusterVersion(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterVersion", reflect.TypeOf((*MockClusterImportOperations)(nil).GetClusterVersion), name)
}

// GetNamespace mocks base method.
func (m *MockClusterImportOperations) GetNamespace(name string) (*v11.Namespace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNamespace", name)
	ret0, _ := ret[0].(*v11.Namespace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNamespace indicates an expected call of GetNamespace.
func (mr *MockClusterImportOperationsMockRecorder) GetNamespace(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNamespace", reflect.TypeOf((*MockClusterImportOperations)(nil).GetNamespace), name)
}

// GetNodes mocks base method.
func (m *MockClusterImportOperations) GetNodes() (*v11.NodeList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodes")
	ret0, _ := ret[0].(*v11.NodeList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodes indicates an expected call of GetNodes.
func (mr *MockClusterImportOperationsMockRecorder) GetNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodes", reflect.TypeOf((*MockClusterImportOperations)(nil).GetNodes))
}

// GetNumberOfControlPlaneNodes mocks base method.
func (m *MockClusterImportOperations) GetNumberOfControlPlaneNodes() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNumberOfControlPlaneNodes")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNumberOfControlPlaneNodes indicates an expected call of GetNumberOfControlPlaneNodes.
func (mr *MockClusterImportOperationsMockRecorder) GetNumberOfControlPlaneNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNumberOfControlPlaneNodes", reflect.TypeOf((*MockClusterImportOperations)(nil).GetNumberOfControlPlaneNodes))
}

// GetSecret mocks base method.
func (m *MockClusterImportOperations) GetSecret(namespace, name string) (*v11.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", namespace, name)
	ret0, _ := ret[0].(*v11.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockClusterImportOperationsMockRecorder) GetSecret(namespace, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockClusterImportOperations)(nil).GetSecret), namespace, name)
}
