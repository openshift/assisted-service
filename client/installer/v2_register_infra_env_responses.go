// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// V2RegisterInfraEnvReader is a Reader for the V2RegisterInfraEnv structure.
type V2RegisterInfraEnvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2RegisterInfraEnvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewV2RegisterInfraEnvCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV2RegisterInfraEnvBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewV2RegisterInfraEnvUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV2RegisterInfraEnvForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV2RegisterInfraEnvNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewV2RegisterInfraEnvMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV2RegisterInfraEnvConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV2RegisterInfraEnvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewV2RegisterInfraEnvNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewV2RegisterInfraEnvCreated creates a V2RegisterInfraEnvCreated with default headers values
func NewV2RegisterInfraEnvCreated() *V2RegisterInfraEnvCreated {
	return &V2RegisterInfraEnvCreated{}
}

/*V2RegisterInfraEnvCreated handles this case with default header values.

Success.
*/
type V2RegisterInfraEnvCreated struct {
	Payload *models.InfraEnv
}

func (o *V2RegisterInfraEnvCreated) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvCreated  %+v", 201, o.Payload)
}

func (o *V2RegisterInfraEnvCreated) GetPayload() *models.InfraEnv {
	return o.Payload
}

func (o *V2RegisterInfraEnvCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraEnv)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2RegisterInfraEnvBadRequest creates a V2RegisterInfraEnvBadRequest with default headers values
func NewV2RegisterInfraEnvBadRequest() *V2RegisterInfraEnvBadRequest {
	return &V2RegisterInfraEnvBadRequest{}
}

/*V2RegisterInfraEnvBadRequest handles this case with default header values.

Error.
*/
type V2RegisterInfraEnvBadRequest struct {
	Payload *models.Error
}

func (o *V2RegisterInfraEnvBadRequest) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvBadRequest  %+v", 400, o.Payload)
}

func (o *V2RegisterInfraEnvBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2RegisterInfraEnvBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2RegisterInfraEnvUnauthorized creates a V2RegisterInfraEnvUnauthorized with default headers values
func NewV2RegisterInfraEnvUnauthorized() *V2RegisterInfraEnvUnauthorized {
	return &V2RegisterInfraEnvUnauthorized{}
}

/*V2RegisterInfraEnvUnauthorized handles this case with default header values.

Unauthorized.
*/
type V2RegisterInfraEnvUnauthorized struct {
	Payload *models.InfraError
}

func (o *V2RegisterInfraEnvUnauthorized) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvUnauthorized  %+v", 401, o.Payload)
}

func (o *V2RegisterInfraEnvUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2RegisterInfraEnvUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2RegisterInfraEnvForbidden creates a V2RegisterInfraEnvForbidden with default headers values
func NewV2RegisterInfraEnvForbidden() *V2RegisterInfraEnvForbidden {
	return &V2RegisterInfraEnvForbidden{}
}

/*V2RegisterInfraEnvForbidden handles this case with default header values.

Forbidden.
*/
type V2RegisterInfraEnvForbidden struct {
	Payload *models.InfraError
}

func (o *V2RegisterInfraEnvForbidden) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvForbidden  %+v", 403, o.Payload)
}

func (o *V2RegisterInfraEnvForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2RegisterInfraEnvForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2RegisterInfraEnvNotFound creates a V2RegisterInfraEnvNotFound with default headers values
func NewV2RegisterInfraEnvNotFound() *V2RegisterInfraEnvNotFound {
	return &V2RegisterInfraEnvNotFound{}
}

/*V2RegisterInfraEnvNotFound handles this case with default header values.

Error.
*/
type V2RegisterInfraEnvNotFound struct {
	Payload *models.Error
}

func (o *V2RegisterInfraEnvNotFound) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvNotFound  %+v", 404, o.Payload)
}

func (o *V2RegisterInfraEnvNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2RegisterInfraEnvNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2RegisterInfraEnvMethodNotAllowed creates a V2RegisterInfraEnvMethodNotAllowed with default headers values
func NewV2RegisterInfraEnvMethodNotAllowed() *V2RegisterInfraEnvMethodNotAllowed {
	return &V2RegisterInfraEnvMethodNotAllowed{}
}

/*V2RegisterInfraEnvMethodNotAllowed handles this case with default header values.

Method Not Allowed.
*/
type V2RegisterInfraEnvMethodNotAllowed struct {
	Payload *models.Error
}

func (o *V2RegisterInfraEnvMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *V2RegisterInfraEnvMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2RegisterInfraEnvMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2RegisterInfraEnvConflict creates a V2RegisterInfraEnvConflict with default headers values
func NewV2RegisterInfraEnvConflict() *V2RegisterInfraEnvConflict {
	return &V2RegisterInfraEnvConflict{}
}

/*V2RegisterInfraEnvConflict handles this case with default header values.

Error.
*/
type V2RegisterInfraEnvConflict struct {
	Payload *models.Error
}

func (o *V2RegisterInfraEnvConflict) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvConflict  %+v", 409, o.Payload)
}

func (o *V2RegisterInfraEnvConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2RegisterInfraEnvConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2RegisterInfraEnvInternalServerError creates a V2RegisterInfraEnvInternalServerError with default headers values
func NewV2RegisterInfraEnvInternalServerError() *V2RegisterInfraEnvInternalServerError {
	return &V2RegisterInfraEnvInternalServerError{}
}

/*V2RegisterInfraEnvInternalServerError handles this case with default header values.

Error.
*/
type V2RegisterInfraEnvInternalServerError struct {
	Payload *models.Error
}

func (o *V2RegisterInfraEnvInternalServerError) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvInternalServerError  %+v", 500, o.Payload)
}

func (o *V2RegisterInfraEnvInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2RegisterInfraEnvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2RegisterInfraEnvNotImplemented creates a V2RegisterInfraEnvNotImplemented with default headers values
func NewV2RegisterInfraEnvNotImplemented() *V2RegisterInfraEnvNotImplemented {
	return &V2RegisterInfraEnvNotImplemented{}
}

/*V2RegisterInfraEnvNotImplemented handles this case with default header values.

Not implemented.
*/
type V2RegisterInfraEnvNotImplemented struct {
	Payload *models.Error
}

func (o *V2RegisterInfraEnvNotImplemented) Error() string {
	return fmt.Sprintf("[POST /infra-envs][%d] v2RegisterInfraEnvNotImplemented  %+v", 501, o.Payload)
}

func (o *V2RegisterInfraEnvNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2RegisterInfraEnvNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
