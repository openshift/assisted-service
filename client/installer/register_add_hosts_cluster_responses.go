// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// RegisterAddHostsClusterReader is a Reader for the RegisterAddHostsCluster structure.
type RegisterAddHostsClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterAddHostsClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewRegisterAddHostsClusterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterAddHostsClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterAddHostsClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRegisterAddHostsClusterCreated creates a RegisterAddHostsClusterCreated with default headers values
func NewRegisterAddHostsClusterCreated() *RegisterAddHostsClusterCreated {
	return &RegisterAddHostsClusterCreated{}
}

/*RegisterAddHostsClusterCreated handles this case with default header values.

Success.
*/
type RegisterAddHostsClusterCreated struct {
	Payload *models.Cluster
}

func (o *RegisterAddHostsClusterCreated) Error() string {
	return fmt.Sprintf("[POST /add_hosts_clusters][%d] registerAddHostsClusterCreated  %+v", 201, o.Payload)
}

func (o *RegisterAddHostsClusterCreated) GetPayload() *models.Cluster {
	return o.Payload
}

func (o *RegisterAddHostsClusterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Cluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterAddHostsClusterBadRequest creates a RegisterAddHostsClusterBadRequest with default headers values
func NewRegisterAddHostsClusterBadRequest() *RegisterAddHostsClusterBadRequest {
	return &RegisterAddHostsClusterBadRequest{}
}

/*RegisterAddHostsClusterBadRequest handles this case with default header values.

Error.
*/
type RegisterAddHostsClusterBadRequest struct {
	Payload *models.Error
}

func (o *RegisterAddHostsClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /add_hosts_clusters][%d] registerAddHostsClusterBadRequest  %+v", 400, o.Payload)
}

func (o *RegisterAddHostsClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterAddHostsClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterAddHostsClusterInternalServerError creates a RegisterAddHostsClusterInternalServerError with default headers values
func NewRegisterAddHostsClusterInternalServerError() *RegisterAddHostsClusterInternalServerError {
	return &RegisterAddHostsClusterInternalServerError{}
}

/*RegisterAddHostsClusterInternalServerError handles this case with default header values.

Error.
*/
type RegisterAddHostsClusterInternalServerError struct {
	Payload *models.Error
}

func (o *RegisterAddHostsClusterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /add_hosts_clusters][%d] registerAddHostsClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *RegisterAddHostsClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterAddHostsClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
