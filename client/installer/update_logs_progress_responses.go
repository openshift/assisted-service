// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// UpdateLogsProgressReader is a Reader for the UpdateLogsProgress structure.
type UpdateLogsProgressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLogsProgressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateLogsProgressNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateLogsProgressUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLogsProgressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLogsProgressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateLogsProgressMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateLogsProgressConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateLogsProgressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewUpdateLogsProgressServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateLogsProgressNoContent creates a UpdateLogsProgressNoContent with default headers values
func NewUpdateLogsProgressNoContent() *UpdateLogsProgressNoContent {
	return &UpdateLogsProgressNoContent{}
}

/*UpdateLogsProgressNoContent handles this case with default header values.

Update cluster install progress.
*/
type UpdateLogsProgressNoContent struct {
}

func (o *UpdateLogsProgressNoContent) Error() string {
	return fmt.Sprintf("[PUT /clusters/{cluster_id}/logs_progress][%d] updateLogsProgressNoContent ", 204)
}

func (o *UpdateLogsProgressNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLogsProgressUnauthorized creates a UpdateLogsProgressUnauthorized with default headers values
func NewUpdateLogsProgressUnauthorized() *UpdateLogsProgressUnauthorized {
	return &UpdateLogsProgressUnauthorized{}
}

/*UpdateLogsProgressUnauthorized handles this case with default header values.

Unauthorized.
*/
type UpdateLogsProgressUnauthorized struct {
	Payload *models.InfraError
}

func (o *UpdateLogsProgressUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /clusters/{cluster_id}/logs_progress][%d] updateLogsProgressUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateLogsProgressUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *UpdateLogsProgressUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogsProgressForbidden creates a UpdateLogsProgressForbidden with default headers values
func NewUpdateLogsProgressForbidden() *UpdateLogsProgressForbidden {
	return &UpdateLogsProgressForbidden{}
}

/*UpdateLogsProgressForbidden handles this case with default header values.

Forbidden.
*/
type UpdateLogsProgressForbidden struct {
	Payload *models.InfraError
}

func (o *UpdateLogsProgressForbidden) Error() string {
	return fmt.Sprintf("[PUT /clusters/{cluster_id}/logs_progress][%d] updateLogsProgressForbidden  %+v", 403, o.Payload)
}

func (o *UpdateLogsProgressForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *UpdateLogsProgressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogsProgressNotFound creates a UpdateLogsProgressNotFound with default headers values
func NewUpdateLogsProgressNotFound() *UpdateLogsProgressNotFound {
	return &UpdateLogsProgressNotFound{}
}

/*UpdateLogsProgressNotFound handles this case with default header values.

Error.
*/
type UpdateLogsProgressNotFound struct {
	Payload *models.Error
}

func (o *UpdateLogsProgressNotFound) Error() string {
	return fmt.Sprintf("[PUT /clusters/{cluster_id}/logs_progress][%d] updateLogsProgressNotFound  %+v", 404, o.Payload)
}

func (o *UpdateLogsProgressNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateLogsProgressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogsProgressMethodNotAllowed creates a UpdateLogsProgressMethodNotAllowed with default headers values
func NewUpdateLogsProgressMethodNotAllowed() *UpdateLogsProgressMethodNotAllowed {
	return &UpdateLogsProgressMethodNotAllowed{}
}

/*UpdateLogsProgressMethodNotAllowed handles this case with default header values.

Method Not Allowed.
*/
type UpdateLogsProgressMethodNotAllowed struct {
	Payload *models.Error
}

func (o *UpdateLogsProgressMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /clusters/{cluster_id}/logs_progress][%d] updateLogsProgressMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *UpdateLogsProgressMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateLogsProgressMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogsProgressConflict creates a UpdateLogsProgressConflict with default headers values
func NewUpdateLogsProgressConflict() *UpdateLogsProgressConflict {
	return &UpdateLogsProgressConflict{}
}

/*UpdateLogsProgressConflict handles this case with default header values.

Error.
*/
type UpdateLogsProgressConflict struct {
	Payload *models.Error
}

func (o *UpdateLogsProgressConflict) Error() string {
	return fmt.Sprintf("[PUT /clusters/{cluster_id}/logs_progress][%d] updateLogsProgressConflict  %+v", 409, o.Payload)
}

func (o *UpdateLogsProgressConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateLogsProgressConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogsProgressInternalServerError creates a UpdateLogsProgressInternalServerError with default headers values
func NewUpdateLogsProgressInternalServerError() *UpdateLogsProgressInternalServerError {
	return &UpdateLogsProgressInternalServerError{}
}

/*UpdateLogsProgressInternalServerError handles this case with default header values.

Error.
*/
type UpdateLogsProgressInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateLogsProgressInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /clusters/{cluster_id}/logs_progress][%d] updateLogsProgressInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateLogsProgressInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateLogsProgressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLogsProgressServiceUnavailable creates a UpdateLogsProgressServiceUnavailable with default headers values
func NewUpdateLogsProgressServiceUnavailable() *UpdateLogsProgressServiceUnavailable {
	return &UpdateLogsProgressServiceUnavailable{}
}

/*UpdateLogsProgressServiceUnavailable handles this case with default header values.

Unavailable.
*/
type UpdateLogsProgressServiceUnavailable struct {
	Payload *models.Error
}

func (o *UpdateLogsProgressServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /clusters/{cluster_id}/logs_progress][%d] updateLogsProgressServiceUnavailable  %+v", 503, o.Payload)
}

func (o *UpdateLogsProgressServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateLogsProgressServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
