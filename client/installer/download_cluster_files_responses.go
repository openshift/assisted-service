// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// DownloadClusterFilesReader is a Reader for the DownloadClusterFiles structure.
type DownloadClusterFilesReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *DownloadClusterFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadClusterFilesOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDownloadClusterFilesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDownloadClusterFilesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDownloadClusterFilesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDownloadClusterFilesOK creates a DownloadClusterFilesOK with default headers values
func NewDownloadClusterFilesOK(writer io.Writer) *DownloadClusterFilesOK {
	return &DownloadClusterFilesOK{
		Payload: writer,
	}
}

/*DownloadClusterFilesOK handles this case with default header values.

Success.
*/
type DownloadClusterFilesOK struct {
	Payload io.Writer
}

func (o *DownloadClusterFilesOK) Error() string {
	return fmt.Sprintf("[GET /clusters/{cluster_id}/downloads/files][%d] downloadClusterFilesOK  %+v", 200, o.Payload)
}

func (o *DownloadClusterFilesOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *DownloadClusterFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterFilesNotFound creates a DownloadClusterFilesNotFound with default headers values
func NewDownloadClusterFilesNotFound() *DownloadClusterFilesNotFound {
	return &DownloadClusterFilesNotFound{}
}

/*DownloadClusterFilesNotFound handles this case with default header values.

Error.
*/
type DownloadClusterFilesNotFound struct {
	Payload *models.Error
}

func (o *DownloadClusterFilesNotFound) Error() string {
	return fmt.Sprintf("[GET /clusters/{cluster_id}/downloads/files][%d] downloadClusterFilesNotFound  %+v", 404, o.Payload)
}

func (o *DownloadClusterFilesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadClusterFilesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterFilesConflict creates a DownloadClusterFilesConflict with default headers values
func NewDownloadClusterFilesConflict() *DownloadClusterFilesConflict {
	return &DownloadClusterFilesConflict{}
}

/*DownloadClusterFilesConflict handles this case with default header values.

Error.
*/
type DownloadClusterFilesConflict struct {
	Payload *models.Error
}

func (o *DownloadClusterFilesConflict) Error() string {
	return fmt.Sprintf("[GET /clusters/{cluster_id}/downloads/files][%d] downloadClusterFilesConflict  %+v", 409, o.Payload)
}

func (o *DownloadClusterFilesConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadClusterFilesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterFilesInternalServerError creates a DownloadClusterFilesInternalServerError with default headers values
func NewDownloadClusterFilesInternalServerError() *DownloadClusterFilesInternalServerError {
	return &DownloadClusterFilesInternalServerError{}
}

/*DownloadClusterFilesInternalServerError handles this case with default header values.

Error.
*/
type DownloadClusterFilesInternalServerError struct {
	Payload *models.Error
}

func (o *DownloadClusterFilesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /clusters/{cluster_id}/downloads/files][%d] downloadClusterFilesInternalServerError  %+v", 500, o.Payload)
}

func (o *DownloadClusterFilesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadClusterFilesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
