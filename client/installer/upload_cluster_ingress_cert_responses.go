// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// UploadClusterIngressCertReader is a Reader for the UploadClusterIngressCert structure.
type UploadClusterIngressCertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadClusterIngressCertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUploadClusterIngressCertCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadClusterIngressCertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadClusterIngressCertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadClusterIngressCertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUploadClusterIngressCertCreated creates a UploadClusterIngressCertCreated with default headers values
func NewUploadClusterIngressCertCreated() *UploadClusterIngressCertCreated {
	return &UploadClusterIngressCertCreated{}
}

/*UploadClusterIngressCertCreated handles this case with default header values.

Success.
*/
type UploadClusterIngressCertCreated struct {
}

func (o *UploadClusterIngressCertCreated) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/uploads/ingress-cert][%d] uploadClusterIngressCertCreated ", 201)
}

func (o *UploadClusterIngressCertCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadClusterIngressCertBadRequest creates a UploadClusterIngressCertBadRequest with default headers values
func NewUploadClusterIngressCertBadRequest() *UploadClusterIngressCertBadRequest {
	return &UploadClusterIngressCertBadRequest{}
}

/*UploadClusterIngressCertBadRequest handles this case with default header values.

Error.
*/
type UploadClusterIngressCertBadRequest struct {
	Payload *models.Error
}

func (o *UploadClusterIngressCertBadRequest) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/uploads/ingress-cert][%d] uploadClusterIngressCertBadRequest  %+v", 400, o.Payload)
}

func (o *UploadClusterIngressCertBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadClusterIngressCertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadClusterIngressCertNotFound creates a UploadClusterIngressCertNotFound with default headers values
func NewUploadClusterIngressCertNotFound() *UploadClusterIngressCertNotFound {
	return &UploadClusterIngressCertNotFound{}
}

/*UploadClusterIngressCertNotFound handles this case with default header values.

Error.
*/
type UploadClusterIngressCertNotFound struct {
	Payload *models.Error
}

func (o *UploadClusterIngressCertNotFound) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/uploads/ingress-cert][%d] uploadClusterIngressCertNotFound  %+v", 404, o.Payload)
}

func (o *UploadClusterIngressCertNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadClusterIngressCertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadClusterIngressCertInternalServerError creates a UploadClusterIngressCertInternalServerError with default headers values
func NewUploadClusterIngressCertInternalServerError() *UploadClusterIngressCertInternalServerError {
	return &UploadClusterIngressCertInternalServerError{}
}

/*UploadClusterIngressCertInternalServerError handles this case with default header values.

Error.
*/
type UploadClusterIngressCertInternalServerError struct {
	Payload *models.Error
}

func (o *UploadClusterIngressCertInternalServerError) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/uploads/ingress-cert][%d] uploadClusterIngressCertInternalServerError  %+v", 500, o.Payload)
}

func (o *UploadClusterIngressCertInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadClusterIngressCertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
