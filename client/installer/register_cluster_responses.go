// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// RegisterClusterReader is a Reader for the RegisterCluster structure.
type RegisterClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewRegisterClusterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRegisterClusterCreated creates a RegisterClusterCreated with default headers values
func NewRegisterClusterCreated() *RegisterClusterCreated {
	return &RegisterClusterCreated{}
}

/*RegisterClusterCreated handles this case with default header values.

Success.
*/
type RegisterClusterCreated struct {
	Payload *models.Cluster
}

func (o *RegisterClusterCreated) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] registerClusterCreated  %+v", 201, o.Payload)
}

func (o *RegisterClusterCreated) GetPayload() *models.Cluster {
	return o.Payload
}

func (o *RegisterClusterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Cluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterClusterBadRequest creates a RegisterClusterBadRequest with default headers values
func NewRegisterClusterBadRequest() *RegisterClusterBadRequest {
	return &RegisterClusterBadRequest{}
}

/*RegisterClusterBadRequest handles this case with default header values.

Error.
*/
type RegisterClusterBadRequest struct {
	Payload *models.Error
}

func (o *RegisterClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] registerClusterBadRequest  %+v", 400, o.Payload)
}

func (o *RegisterClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterClusterInternalServerError creates a RegisterClusterInternalServerError with default headers values
func NewRegisterClusterInternalServerError() *RegisterClusterInternalServerError {
	return &RegisterClusterInternalServerError{}
}

/*RegisterClusterInternalServerError handles this case with default header values.

Error.
*/
type RegisterClusterInternalServerError struct {
	Payload *models.Error
}

func (o *RegisterClusterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] registerClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *RegisterClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
