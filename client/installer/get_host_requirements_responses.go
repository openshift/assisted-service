// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// GetHostRequirementsReader is a Reader for the GetHostRequirements structure.
type GetHostRequirementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostRequirementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostRequirementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetHostRequirementsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetHostRequirementsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetHostRequirementsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHostRequirementsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHostRequirementsOK creates a GetHostRequirementsOK with default headers values
func NewGetHostRequirementsOK() *GetHostRequirementsOK {
	return &GetHostRequirementsOK{}
}

/*GetHostRequirementsOK handles this case with default header values.

Success.
*/
type GetHostRequirementsOK struct {
	Payload *models.HostRequirements
}

func (o *GetHostRequirementsOK) Error() string {
	return fmt.Sprintf("[GET /host_requirements][%d] getHostRequirementsOK  %+v", 200, o.Payload)
}

func (o *GetHostRequirementsOK) GetPayload() *models.HostRequirements {
	return o.Payload
}

func (o *GetHostRequirementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HostRequirements)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostRequirementsUnauthorized creates a GetHostRequirementsUnauthorized with default headers values
func NewGetHostRequirementsUnauthorized() *GetHostRequirementsUnauthorized {
	return &GetHostRequirementsUnauthorized{}
}

/*GetHostRequirementsUnauthorized handles this case with default header values.

Unauthorized.
*/
type GetHostRequirementsUnauthorized struct {
	Payload *models.InfraError
}

func (o *GetHostRequirementsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /host_requirements][%d] getHostRequirementsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetHostRequirementsUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetHostRequirementsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostRequirementsForbidden creates a GetHostRequirementsForbidden with default headers values
func NewGetHostRequirementsForbidden() *GetHostRequirementsForbidden {
	return &GetHostRequirementsForbidden{}
}

/*GetHostRequirementsForbidden handles this case with default header values.

Forbidden.
*/
type GetHostRequirementsForbidden struct {
	Payload *models.InfraError
}

func (o *GetHostRequirementsForbidden) Error() string {
	return fmt.Sprintf("[GET /host_requirements][%d] getHostRequirementsForbidden  %+v", 403, o.Payload)
}

func (o *GetHostRequirementsForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetHostRequirementsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostRequirementsMethodNotAllowed creates a GetHostRequirementsMethodNotAllowed with default headers values
func NewGetHostRequirementsMethodNotAllowed() *GetHostRequirementsMethodNotAllowed {
	return &GetHostRequirementsMethodNotAllowed{}
}

/*GetHostRequirementsMethodNotAllowed handles this case with default header values.

Method Not Allowed.
*/
type GetHostRequirementsMethodNotAllowed struct {
	Payload *models.Error
}

func (o *GetHostRequirementsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /host_requirements][%d] getHostRequirementsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetHostRequirementsMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostRequirementsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostRequirementsInternalServerError creates a GetHostRequirementsInternalServerError with default headers values
func NewGetHostRequirementsInternalServerError() *GetHostRequirementsInternalServerError {
	return &GetHostRequirementsInternalServerError{}
}

/*GetHostRequirementsInternalServerError handles this case with default header values.

Error.
*/
type GetHostRequirementsInternalServerError struct {
	Payload *models.Error
}

func (o *GetHostRequirementsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /host_requirements][%d] getHostRequirementsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHostRequirementsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostRequirementsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
