// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// ListInfraEnvEventsReader is a Reader for the ListInfraEnvEvents structure.
type ListInfraEnvEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListInfraEnvEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListInfraEnvEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListInfraEnvEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListInfraEnvEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListInfraEnvEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListInfraEnvEventsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListInfraEnvEventsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListInfraEnvEventsOK creates a ListInfraEnvEventsOK with default headers values
func NewListInfraEnvEventsOK() *ListInfraEnvEventsOK {
	return &ListInfraEnvEventsOK{}
}

/*ListInfraEnvEventsOK handles this case with default header values.

Success.
*/
type ListInfraEnvEventsOK struct {
	Payload models.EventList
}

func (o *ListInfraEnvEventsOK) Error() string {
	return fmt.Sprintf("[GET /v2/infra-envs/{infra_env_id}/events][%d] listInfraEnvEventsOK  %+v", 200, o.Payload)
}

func (o *ListInfraEnvEventsOK) GetPayload() models.EventList {
	return o.Payload
}

func (o *ListInfraEnvEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInfraEnvEventsUnauthorized creates a ListInfraEnvEventsUnauthorized with default headers values
func NewListInfraEnvEventsUnauthorized() *ListInfraEnvEventsUnauthorized {
	return &ListInfraEnvEventsUnauthorized{}
}

/*ListInfraEnvEventsUnauthorized handles this case with default header values.

Unauthorized.
*/
type ListInfraEnvEventsUnauthorized struct {
	Payload *models.InfraError
}

func (o *ListInfraEnvEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/infra-envs/{infra_env_id}/events][%d] listInfraEnvEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListInfraEnvEventsUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *ListInfraEnvEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInfraEnvEventsForbidden creates a ListInfraEnvEventsForbidden with default headers values
func NewListInfraEnvEventsForbidden() *ListInfraEnvEventsForbidden {
	return &ListInfraEnvEventsForbidden{}
}

/*ListInfraEnvEventsForbidden handles this case with default header values.

Forbidden.
*/
type ListInfraEnvEventsForbidden struct {
	Payload *models.InfraError
}

func (o *ListInfraEnvEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/infra-envs/{infra_env_id}/events][%d] listInfraEnvEventsForbidden  %+v", 403, o.Payload)
}

func (o *ListInfraEnvEventsForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *ListInfraEnvEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInfraEnvEventsNotFound creates a ListInfraEnvEventsNotFound with default headers values
func NewListInfraEnvEventsNotFound() *ListInfraEnvEventsNotFound {
	return &ListInfraEnvEventsNotFound{}
}

/*ListInfraEnvEventsNotFound handles this case with default header values.

Error.
*/
type ListInfraEnvEventsNotFound struct {
	Payload *models.Error
}

func (o *ListInfraEnvEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/infra-envs/{infra_env_id}/events][%d] listInfraEnvEventsNotFound  %+v", 404, o.Payload)
}

func (o *ListInfraEnvEventsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListInfraEnvEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInfraEnvEventsMethodNotAllowed creates a ListInfraEnvEventsMethodNotAllowed with default headers values
func NewListInfraEnvEventsMethodNotAllowed() *ListInfraEnvEventsMethodNotAllowed {
	return &ListInfraEnvEventsMethodNotAllowed{}
}

/*ListInfraEnvEventsMethodNotAllowed handles this case with default header values.

Method Not Allowed.
*/
type ListInfraEnvEventsMethodNotAllowed struct {
	Payload *models.Error
}

func (o *ListInfraEnvEventsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /v2/infra-envs/{infra_env_id}/events][%d] listInfraEnvEventsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListInfraEnvEventsMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListInfraEnvEventsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInfraEnvEventsInternalServerError creates a ListInfraEnvEventsInternalServerError with default headers values
func NewListInfraEnvEventsInternalServerError() *ListInfraEnvEventsInternalServerError {
	return &ListInfraEnvEventsInternalServerError{}
}

/*ListInfraEnvEventsInternalServerError handles this case with default header values.

Error.
*/
type ListInfraEnvEventsInternalServerError struct {
	Payload *models.Error
}

func (o *ListInfraEnvEventsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/infra-envs/{infra_env_id}/events][%d] listInfraEnvEventsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListInfraEnvEventsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListInfraEnvEventsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
