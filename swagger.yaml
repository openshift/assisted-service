swagger: '2.0'
info:
  description: 'Assisted installation'
  version: 1.0.0
  title: AssistedInstall
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api.openshift.com
basePath: /api/assisted-install/v1
tags:
  - name: Assisted installation
    description: Agent-driven installation
  - name: assisted-service-iso
    description: ISO that contains the Assisted Service.
  - name: bootfiles
    description: Non-customized files used to boot hosts.
  - name: events
    description: Events related to a cluster installation.
  - name: installer
    description: General OpenShift cluster installation APIs.
  - name: managed_domains
    description: Managed dns domains for a cluster installation.
  - name: manifests
    description: Manifests for customizing a cluster installation.
  - name: operators
    description: Information regarding supported operators.
  - name: versions
    description: Information regarding versions.

schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  agentAuth:
    type: apiKey
    in: header
    name: X-Secret-Key
  userAuth:
    type: apiKey
    in: header
    name: Authorization
  urlAuth:
    type: apiKey
    in: query
    name: api_key

security:
  - userAuth: [admin, user]

paths:
  /clusters:
    post:
      tags:
        - installer
      description: Creates a new OpenShift cluster definition.
      operationId: RegisterCluster
      parameters:
        - in: body
          name: new-cluster-params
          description: The properties describing the new cluster.
          required: true
          schema:
            $ref: '#/definitions/cluster-create-params'
      responses:
        "201":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Retrieves the list of OpenShift clusters.
      operationId: ListClusters
      parameters:
        - in: header
          name: get_unregistered_clusters
          description: Whether to return clusters that have been unregistered.
          type: boolean
          required: false
          default: false
        - in: query
          name: openshift_cluster_id
          description: A specific cluster to retrieve.
          type: string
          format: uuid
          required: false
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/cluster-list'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
        - agentAuth: []
      description: Retrieves the details of the OpenShift cluster.
      operationId: GetCluster
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to be retrieved.
          type: string
          format: uuid
          required: true
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is retrieving the cluster details.
          type: string
          required: false
        - in: header
          name: get_unregistered_clusters
          description: Whether to return clusters that have been unregistered.
          type: boolean
          required: false
          default: false
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

    patch:
      tags:
        - installer
      description: Updates an OpenShift cluster definition.
      operationId: UpdateCluster
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to be updated.
          type: string
          format: uuid
          required: true
        - in: body
          name: cluster-update-params
          description: The properties to update.
          required: true
          schema:
            $ref: '#/definitions/cluster-update-params'
      responses:
        "201":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    delete:
      tags:
        - installer
      description: Deletes an OpenShift cluster definition.
      operationId: DeregisterCluster
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to be deregistered.
          format: uuid
          type: string
          required: true
      responses:
        "204":
          description: Success.
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/downloads/image:
    post:
      tags:
        - installer
      description: Creates a new OpenShift per-cluster Discovery ISO.
      operationId: GenerateClusterISO
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose ISO should be generated.
          type: string
          format: uuid
          required: true
        - in: body
          name: image-create-params
          description: The parameters for the generated ISO.
          required: true
          schema:
            $ref: '#/definitions/image-create-params'
      responses:
        "201":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    get:
      tags:
        - installer
      description: Downloads the OpenShift per-cluster Discovery ISO.
      security:
        - userAuth: [admin, read-only-admin, user]
        - urlAuth: []
      operationId: DownloadClusterISO
      produces:
        # application/vnd.efi.iso is not supported
        - application/octet-stream
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose ISO should be downloaded.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            type: string
            format: binary
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    head:
      tags:
        - installer
      description: Downloads the OpenShift per-cluster Discovery ISO Headers only.
      security:
        - userAuth: [admin, read-only-admin, user]
        - urlAuth: []
      operationId: DownloadClusterISOHeaders
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose ISO headers should be downloaded.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          headers:
            Content-Length:
              type: integer
              description: Size of the ISO in bytes
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/downloads/files:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
        - agentAuth: []
        - urlAuth: []
      description: Downloads files relating to the installed/installing cluster.
      operationId: DownloadClusterFiles
      produces:
        - application/octet-stream
      parameters:
        - in: path
          name: cluster_id
          description: The cluster that owns the file that should be downloaded.
          type: string
          format: uuid
          required: true
        - in: query
          name: file_name
          description: The file to be downloaded.
          type: string
          enum: [bootstrap.ign, master.ign, metadata.json, worker.ign, kubeadmin-password, kubeconfig, kubeconfig-noingress, install-config.yaml, discovery.ign]
          required: true
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is downloading the file.
          type: string
          required: false
      responses:
        "200":
          description: Success.
          schema:
            type: file
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/downloads/files-presigned:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Retrieves a pre-signed S3 URL for downloading cluster files.
      operationId: GetPresignedForClusterFiles
      parameters:
        - in: path
          name: cluster_id
          description: The cluster that owns the file that should be downloaded.
          type: string
          format: uuid
          required: true
        - in: query
          name: file_name
          description: The file to be downloaded.
          type: string
          enum: [bootstrap.ign, master.ign, metadata.json, worker.ign, kubeadmin-password, kubeconfig, kubeconfig-noingress, install-config.yaml, logs, manifests]
          required: true
        - in: query
          name: logs_type
          description: If downloading logs, the type of logs to download.
          type: string
          enum: ["host", "controller", "all"]
          required: false
        - in: query
          name: host_id
          description: If downloading a file related to a host, the relevant host.
          type: string
          format: uuid
          required: false
        - in: query
          name: additional_name
          description: If downloading a manifest, the file name, prefaced with folder name, for example, openshift/99-openshift-xyz.yaml.
          type: string
          required: false
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/presigned'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/credentials:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Get the cluster admin credentials.
      operationId: GetCredentials
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose admin credentials should be retrieved.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/credentials'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/downloads/kubeconfig:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
        - urlAuth: []
      description: Downloads the kubeconfig file for this cluster.
      operationId: DownloadClusterKubeconfig
      produces:
        - application/octet-stream
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose kubeconfig should be downloaded.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            type: string
            format: binary
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
  /clusters/default-config:
    get:
      tags:
        - installer
      security:
        - userAuth: [ admin, read-only-admin, user ]
      description: Get the default values for various cluster properties.
      operationId: GetClusterDefaultConfig
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/cluster_default_config'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/install-config:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Get the cluster's install config YAML.
      operationId: GetClusterInstallConfig
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose install config is being retrieved.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            type: string
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
    patch:
      tags:
        - installer
      description: Override values in the install config.
      operationId: UpdateClusterInstallConfig
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose install config is being updated.
          type: string
          format: uuid
          required: true
        - in: body
          name: install-config-params
          description: Install config overrides.
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Success.
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/discovery-ignition:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: |
        Get the discovery ignition for the cluster based on its attributes and overridden ignition value before generating the discovery ISO.
        Used to test the validity of the discovery ignition when it is being overridden.
        For downloading the generated discovery ignition use /clusters/$CLUSTER_ID/downloads/files?file_name=discovery.ign
      operationId: GetDiscoveryIgnition
      parameters:
        - in: path
          name: cluster_id
          description: The cluster for which the discovery ignition config should be retrieved.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/discovery-ignition-params'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
    patch:
      tags:
        - installer
      description: Override values in the discovery ignition config.
      operationId: UpdateDiscoveryIgnition
      parameters:
        - in: path
          name: cluster_id
          description: The cluster for which the discovery ignition config should be updated.
          type: string
          format: uuid
          required: true
        - in: body
          name: discovery-ignition-params
          description: Overrides for the discovery ignition config.
          required: true
          schema:
            $ref: '#/definitions/discovery-ignition-params'
      responses:
        "201":
          description: Success.
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/manifests:
    get:
      tags:
        - manifests
      security:
        - userAuth: []
      description: Lists manifests for customizing cluster installation.
      operationId: ListClusterManifests
      parameters:
        - in: path
          name: cluster_id
          description: The cluster for which the manifests should be listed.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/list-manifests'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    post:
      tags:
        - manifests
      security:
        - userAuth: []
      description: Creates a manifest for customizing cluster installation.
      operationId: CreateClusterManifest
      parameters:
        - in: path
          name: cluster_id
          description: The cluster for which a new manifest should be created.
          type: string
          format: uuid
          required: true
        - in: body
          name: CreateManifestParams
          description: The new manifest to create.
          required: true
          schema:
            $ref: '#/definitions/create-manifest-params'
      responses:
        "201":
          description: Success.
          schema:
            $ref: '#/definitions/manifest'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    delete:
      tags:
        - manifests
      description: Deletes a manifest from the cluster.
      operationId: DeleteClusterManifest
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose manifest should be deleted.
          type: string
          format: uuid
          required: true
        - in: query
          name: folder
          description: The folder that contains the files. Manifests can be placed in 'manifests' or 'openshift' directories.
          type: string
          enum: [manifests,openshift]
          required: false
          default: manifests
        - in: query
          name: file_name
          description: The manifest file name to delete from the cluster.
          type: string
          required: true
      responses:
        "200":
          description: Success.
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/manifests/files:
    get:
      tags:
        - manifests
      security:
        - userAuth: []
      description: Downloads cluster manifest.
      operationId: DownloadClusterManifest
      produces:
        - application/octet-stream
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose manifest should be downloaded.
          type: string
          format: uuid
          required: true
        - in: query
          name: folder
          description: The folder that contains the files. Manifests can be placed in 'manifests' or 'openshift' directories.
          type: string
          enum: [manifests,openshift]
          required: false
          default: manifests
        - in: query
          name: file_name
          description: The manifest file name to download.
          type: string
          required: true
      responses:
        "200":
          description: Success.
          schema:
            type: file
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/uploads/ingress-cert:
    post:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Transfer the ingress certificate for the cluster.
      operationId: UploadClusterIngressCert
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to associate with the ingress certificate.
          type: string
          format: uuid
          required: true
        - in: body
          name: ingress-cert-params
          description: The ingress certificate.
          required: true
          schema:
            $ref: '#/definitions/ingress-cert-params'
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is uploading the ingress certificate.
          type: string
          required: false
      responses:
        "201":
          description: Success.
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/actions/install:
    post:
      tags:
        - installer
      description: Installs the OpenShift cluster.
      operationId: InstallCluster
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to be installed.
          type: string
          format: uuid
          required: true
      responses:
        "202":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/actions/cancel:
    post:
      tags:
        - installer
      description: Cancels an ongoing installation.
      operationId: CancelInstallation
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose installation is to be canceled.
          type: string
          format: uuid
          required: true
      responses:
        "202":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/actions/install_hosts:
    post:
      tags:
        - installer
      description: Installs the OpenShift cluster.
      operationId: InstallHosts
      parameters:
        - in: path
          name: cluster_id
          description: The existing cluster whose hosts should be added.
          type: string
          format: uuid
          required: true
      responses:
        "202":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/actions/reset:
    post:
      tags:
        - installer
      description: Resets a failed installation.
      operationId: ResetCluster
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose installation is to be reset.
          type: string
          format: uuid
          required: true
      responses:
        "202":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/actions/complete_installation:
    post:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Agent API to mark a finalizing installation as complete.
      operationId: CompleteInstallation
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose installation is being completing.
          type: string
          format: uuid
          required: true
        - in: body
          name: completion-params
          description: The final status of the cluster installation.
          required: true
          schema:
            $ref: '#/definitions/completion-params'
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is completing the installation.
          type: string
          required: false
      responses:
        "202":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts:
    post:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Registers a new OpenShift host.
      operationId: RegisterHost
      parameters:
        - in: path
          name: cluster_id
          description: The cluster into which the host should be registered.
          type: string
          format: uuid
          required: true
        - in: body
          name: new-host-params
          description: The description of the host being registered.
          required: true
          schema:
            $ref: '#/definitions/host-create-params'
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is registering the host.
          type: string
          required: false
      responses:
        "201":
          description: Success.
          schema:
            $ref: '#/definitions/host_registration_response'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Cluster cannot accept new hosts due to its current state.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
        - agentAuth: []
      description: Retrieves the list of OpenShift hosts.
      operationId: ListHosts
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose hosts should be listed.
          type: string
          format: uuid
          required: true
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is listing hosts.
          type: string
          required: false
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/host-list'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Retrieves the details of the OpenShift host.
      operationId: GetHost
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host that should be retrieved.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that should be retrieved.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/host'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    delete:
      tags:
        - installer
      description: Deregisters an OpenShift host.
      operationId: DeregisterHost
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host that should be deregistered.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that should be deregistered.
          type: string
          format: uuid
          required: true
      responses:
        "204":
          description: Success.
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/installer-args:
    patch:
      tags:
        - installer
      description: Updates a host's installer arguments.
      operationId: UpdateHostInstallerArgs
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host whose installer arguments should be updated.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host whose installer arguments should be updated.
          type: string
          format: uuid
          required: true
        - in: body
          name: installer-args-params
          description: The updated installer arguments.
          required: true
          schema:
            $ref: '#/definitions/installer-args-params'
      responses:
        "201":
          description: Success.
          schema:
            $ref: '#/definitions/host'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/progress:
    put:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Update installation progress.
      operationId: UpdateHostInstallProgress
      parameters:
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is updating progress.
          type: string
          required: false
        - in: path
          name: cluster_id
          description: The ID of the cluster to retrieve.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The ID of the host to retrieve.
          type: string
          format: uuid
          required: true
        - in: body
          name: host-progress
          description: New progress value.
          required: true
          schema:
            $ref: '#/definitions/host-progress'
      responses:
        "200":
          description: Update install progress.
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/actions/enable:
    post:
      tags:
        - installer
      description: Enables a host for inclusion in the cluster.
      operationId: EnableHost
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host that is being enabled.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that is being enabled.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

    delete:
      tags:
        - installer
      description: Disables a host for inclusion in the cluster.
      operationId: DisableHost
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host that is being disabled.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that is being disabled.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/actions/install:
    post:
      tags:
        - installer
      description: install specific host for day2 cluster.
      operationId: InstallHost
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host that is being installed.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that is being installed.
          type: string
          format: uuid
          required: true
      responses:
        "202":
          description: Success.
          schema:
            $ref: '#/definitions/host'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/actions/reset:
    post:
      tags:
        - installer
      description: reset a failed host for day2 cluster.
      operationId: ResetHost
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host that is being reset.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that is being reset.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/host'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/actions/reset-validation/{validation_id}:
    patch:
      tags:
        - installer
      summary: Reset failed host validation.
      operationId: ResetHostValidation
      description: Reset failed host validation.  It may be performed on any host validation with persistent validation result.
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host that its validation is being reset.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that its validation is being reset.
          type: string
          format: uuid
          required: true
        - in: path
          description: The id of the validation being reset.
          type: string
          name: validation_id
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/host'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/instructions:
    get:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Retrieves the next operations that the host agent needs to perform.
      operationId: GetNextSteps
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host that is retrieving instructions.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that is retrieving instructions.
          type: string
          format: uuid
          required: true
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is retrieving instructions.
          type: string
          required: false
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/steps'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

    post:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Posts the result of the operations from the host agent.
      operationId: PostStepReply
      parameters:
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is posting results.
          type: string
          required: false
        - in: path
          name: cluster_id
          description: The cluster of the host that is posting results.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host that is posting results.
          type: string
          format: uuid
          required: true
        - name: reply
          description: The results to be posted.
          in: body
          schema:
            $ref: '#/definitions/step-reply'
      responses:
        "204":
          description: Success.
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/logs_progress:
    put:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Update log collection state and progress.
      operationId: UpdateHostLogsProgress
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose log progress is being updated.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host whose log progress is being updated.
          type: string
          format: uuid
          required: true
        - in: body
          name: logs-progress-params
          description: Parameters for updating log progress.
          required: true
          schema:
            $ref: '#/definitions/logs-progress-params'
      responses:
        "204":
          description: Update cluster install progress.
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/logs:
    post:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Agent API to upload logs.
      deprecated: true
      operationId: UploadHostLogs
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host whose logs should be uploaded.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host whose logs should be uploaded.
          type: string
          format: uuid
          required: true
        - in: formData
          name: upfile
          description: The log file to be uploaded.
          # TODO return after fix in go-swagger and moving to 0.25 or o.26
          # https://github.com/go-swagger/go-swagger/issues/2362
          # maxLength: 20971520  #20MB
          type: file
          required: false
          x-mimetype: application/zip
        - in: header
          name: discovery_agent_version
          description: The software version of the discovery agent that is uploading the logs.
          type: string
          required: false
      responses:
        "204":
          description: Success.
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

    get:
      tags:
        - installer
      description: Download host logs.
      deprecated: true
      security:
        - userAuth: [admin, read-only-admin, user]
        - urlAuth: []
      operationId: DownloadHostLogs
      produces:
        - application/octet-stream
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host whose logs should be downloaded.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host whose logs should be downloaded.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            type: file
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/ignition:
    get:
      tags:
        - installer
      description: Get the customized ignition file for this host
      operationId: GetHostIgnition
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host whose customized ignition file should be retrieved.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host whose customized ignition file should be retrieved.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/host-ignition-params'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
    patch:
      tags:
        - installer
      description: Patch the ignition file for this host
      operationId: UpdateHostIgnition
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host whose ignition file should be updated.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host whose ignition file should be updated.
          type: string
          format: uuid
          required: true
        - in: body
          name: host-ignition-params
          description: Ignition config overrides.
          required: true
          schema:
            $ref: '#/definitions/host-ignition-params'
      responses:
        "201":
          description: Success.
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/hosts/{host_id}/downloads/ignition:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
        - agentAuth: []
      description: Downloads the customized ignition file for this host
      operationId: DownloadHostIgnition
      produces:
        - application/octet-stream
      parameters:
        - in: path
          name: cluster_id
          description: The cluster of the host whose ignition file should be downloaded.
          type: string
          format: uuid
          required: true
        - in: path
          name: host_id
          description: The host whose ignition file should be downloaded.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            type: file
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/logs_progress:
    put:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Update log collection state and progress.
      operationId: UpdateClusterLogsProgress
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose log progress is being updated.
          type: string
          format: uuid
          required: true
        - in: body
          name: logs-progress-params
          description: Parameters for updating log progress.
          required: true
          schema:
            $ref: '#/definitions/logs-progress-params'
      responses:
        "204":
          description: Update cluster install progress.
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/logs:
    post:
      tags:
        - installer
      security:
        - agentAuth: []
      description: Agent API to upload logs.
      operationId: UploadLogs
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose logs should be uploaded.
          type: string
          format: uuid
          required: true
        - in: formData
          name: upfile
          description: The log file to be uploaded.
          type: file
          required: false
          maxLength: 104857600  #100MB
          x-mimetype: application/zip
        - in: query
          name: logs_type
          description: The type of log file to be uploaded.
          type: string
          enum: ['host', 'controller']
          required: true
        - in: query
          name: host_id
          description: The host whose logs should be uploaded.
          type: string
          format: uuid
          required: false
      responses:
        "204":
          description: Success.
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

    get:
      tags:
        - installer
      description: Download cluster logs.
      security:
        - userAuth: [admin, read-only-admin, user]
        - urlAuth: []
      operationId: DownloadClusterLogs
      produces:
        - 'application/octet-stream'
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose logs should be downloaded.
          type: string
          format: uuid
          required: true
        - in: query
          name: logs_type
          description: The type of logs to be downloaded.
          type: string
          enum: ['host', 'controller', 'all']
          required: false
        - in: query
          name: host_id
          description: A specific host in the cluster whose logs should be downloaded.
          type: string
          format: uuid
          required: false
      responses:
        "200":
          description: Success.
          schema:
            type: file
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  # The following API call should be admin only
  /clusters/{cluster_id}/free_addresses:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Retrieves the free address list for a network.
      operationId: GetFreeAddresses
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to return free addresses for.
          type: string
          format: uuid
          required: true
        - in: query
          name: network
          description: The cluster network to return free addresses for.
          type: string
          pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'
          required: true
        - in: query
          name: limit
          description: The maximum number of free addresses to return.
          type: integer
          minimum: 1
          maximum: 8000
          default: 8000
          required: false
        - in: query
          name: prefix
          description: A prefix for the free addresses to return.
          type: string
          required: false
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/free-addresses-list'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/events:
    get:
      tags:
        - events
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Lists events for a cluster.
      operationId: ListEvents
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to return events for.
          type: string
          format: uuid
          required: true
        - in: query
          name: host_id
          description: A host in the specified cluster to return events for.
          type: string
          format: uuid
          required: false
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/event-list'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/monitored_operators:
    get:
      tags:
        - operators
        - installer
      security:
        - agentAuth: []
      description: Lists operators to be monitored for a cluster.
      operationId: ListOfClusterOperators
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to return operators for.
          type: string
          format: uuid
          required: true
        - in: query
          name: operator_name
          description: An operator in the specified cluster to return its data.
          type: string
          required: false
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/monitored-operators-list'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
        - operators
        - installer
      security:
        - agentAuth: []
      description: Controller API to report of monitored operators.
      operationId: ReportMonitoredOperatorStatus
      parameters:
        - in: path
          name: cluster_id
          description: The cluster whose operators are being monitored.
          type: string
          format: uuid
          required: true
        - in: body
          name: report-params
          description: The operators monitor report.
          required: true
          schema:
            $ref: '#/definitions/operator-monitor-report'
      responses:
        "200":
          description: Success.
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "409":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/host-requirements:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Get host requirements of a cluster.
      operationId: GetClusterHostRequirements
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to return operators for.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/cluster-host-requirements-list'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /clusters/{cluster_id}/preflight-requirements:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Get preflight requirements for a cluster.
      operationId: GetPreflightRequirements
      parameters:
        - in: path
          name: cluster_id
          description: The cluster to return preflight requrements for.
          type: string
          format: uuid
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/preflight-hardware-requirements'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /domains:
    get:
      tags:
        - managed_domains
      security:
        - userAuth: [admin, read-only-admin, user]
      description: List of managed DNS domains.
      operationId: ListManagedDomains
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/list-managed-domains'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /component_versions:
    get:
      tags:
        - versions
      security:
        - userAuth: [admin, read-only-admin, user]
      description: List of component versions.
      operationId: ListComponentVersions
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/list-versions'

  /openshift_versions:
    get:
      tags:
        - versions
      security:
        - userAuth: [admin, read-only-admin, user]
      operationId: ListSupportedOpenshiftVersions
      description: Retrieves the list of OpenShift supported versions.
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/openshift-versions'
        "503":
          description: Unavailable.
          schema:
            $ref: '#/definitions/error'

  /supported-operators:
    get:
      tags:
        - operators
      operationId: ListSupportedOperators
      description: Retrieves the list of supported operators.
      responses:
        "200":
          description: Success.
          schema:
            type: array
            items:
              type: string
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /supported-operators/{operator_name}:
    get:
      tags:
        - operators
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Lists properties for an operator.
      operationId: ListOperatorProperties
      parameters:
        - in: path
          name: operator_name
          description: The operator name.
          type: string
          required: true
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/operator-properties'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'
  /host_requirements:
    get:
      tags:
        - installer
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Get minimum host requirements.
      operationId: GetHostRequirements
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/host-requirements'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "405":
          description: Method Not Allowed.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /add_hosts_clusters:
    post:
      tags:
        - installer
      description: Creates a new OpenShift cluster definition for adding nodes to and existing OCP cluster.
      operationId: RegisterAddHostsCluster
      parameters:
        - in: body
          name: new-add-hosts-cluster-params
          description: Parameters for creating a new cluster for adding nodes.
          required: true
          schema:
            $ref: '#/definitions/add-hosts-cluster-create-params'
      responses:
        "201":
          description: Success.
          schema:
            $ref: '#/definitions/cluster'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /boot-files:
    get:
      tags:
        - bootfiles
      security: []
      description: Downloads files used for booting servers.
      operationId: DownloadBootFiles
      produces:
        - application/octet-stream
      parameters:
        - in: query
          name: openshift_version
          description: The corresponding OpenShift version for the boot file.
          type: string
          required: true
        - in: query
          name: file_type
          description: The file type to download.
          type: string
          enum: [initrd.img, rootfs.img, vmlinuz]
          required: true
      responses:
        "200":
          description: Success.
          schema:
            type: file
        "307":
          description: Redirect.
          headers:
            Location:
              type: string
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /assisted-service-iso:
    post:
      tags:
        - assisted-service-iso
      description: Creates ISO for the user and uploads to S3.
      operationId: CreateISOAndUploadToS3
      parameters:
        - in: body
          name: assisted-service-iso-create-params
          required: true
          description: Parameters for creating an Assisted Service ISO.
          schema:
            $ref: '#/definitions/assisted-service-iso-create-params'
      responses:
        "201":
          description: Success.
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /assisted-service-iso/data:
    get:
      tags:
        - assisted-service-iso
      description: Downloads the Assisted Service ISO.
      security:
        - userAuth: [admin, read-only-admin, user]
      operationId: DownloadISO
      produces:
        # application/vnd.efi.iso is not supported
        - application/octet-stream
      responses:
        "200":
          description: Success.
          schema:
            type: string
            format: binary
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

  /assisted-service-iso/presigned:
    get:
      tags:
        - assisted-service-iso
      security:
        - userAuth: [admin, read-only-admin, user]
      description: Retrieves a pre-signed S3 URL for downloading assisted-service ISO.
      operationId: GetPresignedForAssistedServiceISO
      responses:
        "200":
          description: Success.
          schema:
            $ref: '#/definitions/presigned'
        "401":
          description: Unauthorized.
          schema:
            $ref: '#/definitions/infra_error'
        "403":
          description: Forbidden.
          schema:
            $ref: '#/definitions/infra_error'
        "404":
          description: Error.
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/error'

definitions:
  monitored-operator:
    type: object
    properties:
      cluster_id:
        type: string
        format: uuid
        description: The cluster that this operator is associated with.
        x-go-custom-tag: gorm:"primary_key;foreignkey:Cluster"
      name:
        type: string
        description: Unique name of the operator.
        x-go-custom-tag: gorm:"primary_key"
      namespace:
        type: string
        description: Namespace where to deploy an operator. Only some operators require a namespace.
      subscription_name:
        type: string
        description: The name of the subscription of the operator.
      operator_type:
        $ref: '#/definitions/operator-type'
      properties:
        type: string
        description: Blob of operator-dependent parameters that are required for installation.
        x-go-custom-tag: gorm:"type:text"
      timeout_seconds:
        type: integer
        description: Positive number represents a timeout in seconds for the operator to be available.
      status:
        $ref: '#/definitions/operator-status'
      status_info:
        type: string
        description: Detailed information about the operator state.
      status_updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: Time at which the operator was last updated.

  operator-monitor-report:
    type: object
    properties:
      name:
        type: string
        description: Unique name of the operator.
      status:
        $ref: '#/definitions/operator-status'
      status_info:
        type: string
        description: Detailed information about the operator state.

  operator-type:
    type: string
    enum: ['builtin', 'olm']
    description: Kind of operator. Different types are monitored by the service differently.

  operator-status:
    type: string
    enum: ['failed', 'progressing', 'available']
    description: Represents the operator state.

  operator-create-params:
    type: object
    properties:
      name:
        type: string
      properties:
        type: string
        description: Blob of operator-dependent parameters that are required for installation.
        x-go-custom-tag: gorm:"type:text"

  monitored-operators-list:
    type: array
    items:
      $ref: '#/definitions/monitored-operator'

  list-managed-domains:
    type: array
    items:
      $ref: '#/definitions/managed-domain'

  managed-domain:
    type: object
    properties:
      domain:
        type: string
      provider:
        type: string
        enum: ['route53']

  list-versions:
    type: object
    properties:
      versions:
        $ref: '#/definitions/versions'
      release_tag:
        type: string

  versions:
    type: object
    additionalProperties:
      type: string

  openshift-versions:
    type: object
    additionalProperties:
      $ref: '#/definitions/openshift-version'

  host-requirements:
    type: object
    properties:
      master:
        $ref: '#/definitions/host-requirements-role'
      worker:
        $ref: '#/definitions/host-requirements-role'

  preflight-hardware-requirements:
    type: object
    properties:
      operators:
        description: Preflight operators hardware requirements
        type: array
        items:
          $ref: '#/definitions/operator-hardware-requirements'
      ocp:
        description: Preflight OCP requirements
        $ref: '#/definitions/host-type-hardware-requirements-wrapper'

  operator-hardware-requirements:
    type: object
    properties:
      operator_name:
        description: Unique name of the operator. Corresponds to name property of the monitored-operator, i.e. "lso", "cnv", etc.
        type: string
      dependencies:
        description: List of other operator unique names that are required to be installed. Corresponds to name property of the monitored-operator, i.e. "lso", "cnv", etc.
        type: array
        items:
          type: string
      requirements:
        $ref: '#/definitions/host-type-hardware-requirements-wrapper'

  host-type-hardware-requirements-wrapper:
    type: object
    properties:
      worker:
        description: Requirements towards a worker node
        $ref: '#/definitions/host-type-hardware-requirements'
      master:
        description: Requirements towards a master node
        $ref: '#/definitions/host-type-hardware-requirements'

  host-type-hardware-requirements:
    type: object
    properties:
      quantitative:
        description: Host requirements that can be quantified
        $ref: '#/definitions/cluster-host-requirements-details'
      qualitative:
        description: Host requirements that cannot be quantified at the time of calculation. Descriptions or formulas of requiements
        type: array
        items:
          type: string

  cluster-host-requirements-list:
    type: array
    items:
      $ref: '#/definitions/cluster-host-requirements'

  cluster-host-requirements:
    type: object
    properties:
      host_id:
        type: string
        format: uuid
        description: Unique identifier of the host the requirements relate to.
      total:
        $ref: '#/definitions/cluster-host-requirements-details'
        description: Total host requirements for the cluster configuration
      ocp:
        $ref: '#/definitions/cluster-host-requirements-details'
        description: Host requirements for the OCP installation
      operators:
        type: array
        items:
          $ref: '#/definitions/operator-host-requirements'
        description: Host requirements related to requested operators

  operator-host-requirements:
    type: object
    properties:
      operator_name:
        type: string
        description: Name of the operator
      requirements:
        $ref: '#/definitions/cluster-host-requirements-details'
        description: Host requirements for the operator

  cluster-host-requirements-details:
    type: object
    properties:
      cpu_cores:
        type: integer
        description: Required number of CPU cores
      ram_mib:
        type: integer
        description: Required number of RAM in MiB
      disk_size_gb:
        type: integer
        description: Required disk size in GB
      installation_disk_speed_threshold_ms:
        type: integer
        description: Required installation disk speed in ms

  versioned-host-requirements:
    type: object
    properties:
      version:
        type: string
        description: Version of the component for which requirements are defined
      master:
        x-go-name: MasterRequirements
        $ref: '#/definitions/cluster-host-requirements-details'
        description: Master node requirements
      worker:
        x-go-name: WorkerRequirements
        $ref: '#/definitions/cluster-host-requirements-details'
        description: Worker node requirements

  host-requirements-role:
    type: object
    properties:
      cpu_cores:
        type: integer
      ram_gib:
        type: integer
      disk_size_gb:
        type: integer
      installation_disk_speed_threshold_ms:
        type: integer

  event-list:
    type: array
    items:
      $ref: '#/definitions/event'

  event:
    type: object
    required:
      - cluster_id
      - severity
      - message
      - event_time
    properties:
      cluster_id:
        type: string
        format: uuid
        description: Unique identifier of the cluster this event relates to.
        x-go-custom-tag: gorm:"index"
      host_id:
        type: string
        format: uuid
        description: Unique identifier of the host this event relates to.
      severity:
        type: string
        enum: [info, warning, error, critical, internal]
      message:
        type: string
        x-go-custom-tag: gorm:"type:varchar(4096)"
      event_time:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      request_id:
        type: string
        format: uuid
        description: Unique identifier of the request that caused this event to occur.
      props:
        type: string
        description: Additional properties for the event in JSON format.
        x-go-custom-tag: gorm:"type:text"
        
  image-create-params:
    type: object
    properties:
      ssh_public_key:
        type: string
        description: SSH public key for debugging the installation.
      static_network_config:
        type: array
        items:
          $ref: '#/definitions/host_static_network_config'
      image_type:
        description: Type of image that should be generated.
        $ref: '#/definitions/image_type'
      mirror_registries_ca_config:
        description: configuration of the mirror registries for discovery ISO and installed nodes
        $ref: '#/definitions/mirror_registries_ca_config'

  assisted-service-iso-create-params:
    type: object
    properties:
      openshift_version:
        type: string
        description: Version of the OpenShift cluster.
      ssh_public_key:
        type: string
        description: SSH public key for debugging the installation.
      pull_secret:
        type: string
        description: The pull secret obtained from Red Hat OpenShift Cluster Manager at cloud.redhat.com/openshift/install/pull-secret.

  host-create-params:
    type: object
    required:
      - host_id
    properties:
      host_id:
        type: string
        format: uuid
      discovery_agent_version:
        type: string

  host_registration_response:
    allOf:
        - $ref: '#/definitions/host'
        - properties:
            next_step_runner_command:
              type: object
              description: Command for starting the next step runner
              properties:
                command:
                  type: string
                args:
                  type: array
                  items:
                    type: string
                retry_seconds:
                  type: integer
                  description: How long in seconds to wait before retrying registration if the command fails


  host:
    type: object
    required:
      - kind
      - id
      - href
      - status
      - status_info
    properties:
      kind:
        type: string
        enum: ['Host', 'AddToExistingClusterHost']
        description: |
          Indicates the type of this object. Will be 'Host' if this is a complete object or 'HostLink' if it is just a link, or
          'AddToExistingClusterHost' for host being added to existing OCP cluster, or
      id:
        type: string
        format: uuid
        description: Unique identifier of the object.
        x-go-custom-tag: gorm:"primary_key"
      href:
        type: string
        description: Self link.
      cluster_id:
        type: string
        format: uuid
        x-go-custom-tag: gorm:"primary_key;foreignkey:Cluster"
        description: The cluster that this host is associated with.
      status:
        type: string
        enum:
          - discovering
          - known
          - disconnected
          - insufficient
          - disabled
          - preparing-for-installation
          - preparing-successful
          - pending-for-input
          - installing
          - installing-in-progress
          - installing-pending-user-action
          - resetting-pending-user-action
          - installed
          - error
          - resetting
          - added-to-existing-cluster
          - cancelled
      status_info:
        type: string
        x-go-custom-tag: gorm:"type:varchar(2048)"
      validations_info:
        type: string
        description: JSON-formatted string containing the validation results for each validation id grouped by category (network, hardware, etc.)
        x-go-custom-tag: gorm:"type:text"
      logs_info:
        $ref: '#/definitions/logs_state'
        description: The progress of log collection or empty if logs are not applicable
        x-go-custom-tag: gorm:"type:varchar(2048)"
      status_updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: The last time that the host status was updated.
      progress:
        $ref: '#/definitions/host-progress-info'
        x-go-custom-tag: gorm:"embedded;embedded_prefix:progress_"
      stage_started_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: Time at which the current progress stage started.
      stage_updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: Time at which the current progress stage was last updated.
      progress_stages:
        type: array
        items:
          $ref: '#/definitions/host-stage'
        x-go-custom-tag: gorm:"-"
      connectivity:
        x-go-custom-tag: gorm:"type:text"
        type: string
      api_vip_connectivity:
        x-go-custom-tag: gorm:"type:text"
        type: string
      inventory:
        x-go-custom-tag: gorm:"type:text"
        type: string
      free_addresses:
        x-go-custom-tag: gorm:"type:text"
        type: string
      ntp_sources:
        x-go-custom-tag: gorm:"type:text"
        type: string
        description: The configured NTP sources on the host.
      disks_info:
        x-go-custom-tag: gorm:"type:text"
        type: string
        description: Additional information about disks, formatted as JSON.
      role:
        $ref: '#/definitions/host-role'
      bootstrap:
        type: boolean
      logs_collected_at:
        type: string
        format: datetime
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      logs_started_at:
        type: string
        format: datetime
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      installer_version:
        type: string
        description: Installer version.
      installation_disk_path:
        type: string
        description: Contains the inventory disk path, This field is replaced by installation_disk_id field and used for backward compatability with the old UI.
        example: /dev/sda
      installation_disk_id:
        type: string
        description: Contains the inventory disk id to install on.
      updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      created_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      checked_in_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: The last time the host's agent communicated with the service.
      discovery_agent_version:
        type: string
      requested_hostname:
        type: string
      user_name:
        type: string
      deleted_at:
        type: string
        format: date-time
        description: The time that the host was deleted.
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        x-nullable: true
      ignition_config_overrides:
        x-go-custom-tag: gorm:"type:text"
        type: string
        description: Json formatted string containing the user overrides for the host's pointer ignition
        example: '{"ignition": {"version": "3.1.0"}, "storage": {"files": [{"path": "/tmp/example", "contents": {"source": "data:text/plain;base64,aGVscGltdHJhcHBlZGluYXN3YWdnZXJzcGVj"}}]}}'
      installer_args:
        type: string
      machine_config_pool_name:
        type: string
      images_status:
        x-go-custom-tag: gorm:"type:text"
        type: string
        description: Array of image statuses.


  installer-args-params:
    type: object
    properties:
      args:
        description: List of additional arguments passed to coreos-installer
        example: ["--append-karg", "ip=192.0.2.2::192.0.2.254:255.255.255.0:core0.example.com:enp1s0:none", "--save-partindex", "1", "-n"]
        type: array
        items:
          type: string

  steps:
    type: object
    properties:
      next_instruction_seconds:
        type: integer
      post_step_action:
        type: string
        description: What to do after finishing to run step instructions
        default: continue
        enum:
        - exit
        - continue
      instructions:
        type: array
        items:
          $ref: '#/definitions/step'


  step-type:
    type: string
    enum:
      - connectivity-check
      - execute
      - inventory
      - install
      - free-network-addresses
      - reset-installation
      - dhcp-lease-allocate
      - api-vip-connectivity-check
      - ntp-synchronizer
      - fio-perf-check
      - installation-disk-speed-check
      - container-image-availability
      - domain-resolution

  step:
    type: object
    properties:
      step_type:
        $ref: '#/definitions/step-type'
      step_id:
        type: string
      command:
        type: string
      args:
        type: array
        items:
          type: string

  steps-reply:
    type: array
    items:
      $ref: '#/definitions/step-reply'

  step-reply:
    type: object
    properties:
      step_type:
        $ref: '#/definitions/step-type'
      step_id:
        type: string
      exit_code:
        type: integer
      output:
        type: string
      error:
        type: string

  connectivity-check-nic:
    type: object
    properties:
      name:
        type: string
      mac:
        type: string
      ip_addresses:
        type: array
        items:
          type: string

  connectivity-check-host:
    type: object
    properties:
      host_id:
        type: string
        format: uuid
      nics:
        type: array
        items:
          $ref: '#/definitions/connectivity-check-nic'

  connectivity-check-params:
    type: array
    items:
      $ref: '#/definitions/connectivity-check-host'

  host-list:
    type: array
    items:
      $ref: '#/definitions/host'

  cluster-create-params:
    type: object
    required:
      - name
      - openshift_version
      - pull_secret
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 54
        description: Name of the OpenShift cluster.
      high_availability_mode:
        type: string
        enum: ['Full', 'None']
        default: 'Full'
        description: |
          Guaranteed availability of the installed cluster. 'Full' installs a Highly-Available cluster
          over multiple master nodes whereas 'None' installs a full cluster over one node.
      openshift_version:
        type: string
        description: Version of the OpenShift cluster.
      ocp_release_image:
        type: string
        description: OpenShift release image URI.
      base_dns_domain:
        type: string
        description: Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.
      cluster_network_cidr:
        type: string
        description: IP address block from which Pod IPs are allocated. This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/(?:(?:[0-9])|(?:[1-2][0-9])|(?:3[0-2])))|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,})/(?:(?:[0-9])|(?:[1-9][0-9])|(?:1[0-1][0-9])|(?:12[0-8])))$'
        default: "10.128.0.0/14"
      cluster_network_host_prefix:
        type: integer
        description: The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.
        minimum: 1
        maximum: 128
        default: 23
      service_network_cidr:
        type: string
        description: The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/(?:(?:[0-9])|(?:[1-2][0-9])|(?:3[0-2])))|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,})/(?:(?:[0-9])|(?:[1-9][0-9])|(?:1[0-1][0-9])|(?:12[0-8])))$'
        default: "172.30.0.0/16"
      ingress_vip:
        type: string
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3})|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,}))$'
        description: The virtual IP used for cluster ingress traffic.
      pull_secret:
        type: string
        description: The pull secret obtained from Red Hat OpenShift Cluster Manager at cloud.redhat.com/openshift/install/pull-secret.
      ssh_public_key:
        type: string
        description: SSH public key for debugging OpenShift nodes.
      vip_dhcp_allocation:
        type: boolean
        description: Indicate if virtual IP DHCP allocation mode is enabled.
        x-nullable: true
        default: true
      http_proxy:
        type: string
        description: |
          A proxy URL to use for creating HTTP connections outside the cluster.
          http://\<username\>:\<pswd\>@\<ip\>:\<port\>
        x-nullable: true
      https_proxy:
        type: string
        description: |
          A proxy URL to use for creating HTTPS connections outside the cluster.
          http://\<username\>:\<pswd\>@\<ip\>:\<port\>
        x-nullable: true
      no_proxy:
        type: string
        description: An "*" or a comma-separated list of destination domain names, domains, IP addresses, or other network CIDRs to exclude from proxying.
        x-nullable: true
      user_managed_networking:
        type: boolean
        description: Indicate if the networking is managed by the user.
        x-nullable: true
        default: false
      additional_ntp_source:
        type: string
        description: A comma-separated list of NTP sources (name or IP) going to be added to all the hosts.
        x-nullable: true
      olm_operators:
        type: array
        description: List of OLM operators to be installed.
        items:
          $ref: '#/definitions/operator-create-params'
      hyperthreading:
        type: string
        description: Enable/disable hyperthreading on master nodes, worker nodes, or all nodes.
        enum: ['masters', 'workers', 'none', 'all']
        default: 'all'

  cluster-update-params:
    type: object
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 54
        description: OpenShift cluster name.
        x-nullable: true
      base_dns_domain:
        type: string
        description: Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.
        x-nullable: true
      cluster_network_cidr:
        type: string
        description: IP address block from which Pod IPs are allocated. This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/(?:(?:[0-9])|(?:[1-2][0-9])|(?:3[0-2])))|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,})/(?:(?:[0-9])|(?:[1-9][0-9])|(?:1[0-1][0-9])|(?:12[0-8])))$'
        x-nullable: true
      cluster_network_host_prefix:
        type: integer
        description: The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.
        minimum: 1
        maximum: 128
        x-nullable: true
      service_network_cidr:
        type: string
        description: The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/(?:(?:[0-9])|(?:[1-2][0-9])|(?:3[0-2])))|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,})/(?:(?:[0-9])|(?:[1-9][0-9])|(?:1[0-1][0-9])|(?:12[0-8])))$'
        x-nullable: true
      api_vip:
        type: string
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3})|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,}))?$'
        description: The virtual IP used to reach the OpenShift cluster's API.
        x-nullable: true
      ingress_vip:
        type: string
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3})|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,}))?$'
        description: The virtual IP used for cluster ingress traffic.
        x-nullable: true
      api_vip_dns_name:
        type: string
        description: The domain name used to reach the OpenShift cluster API.
        x-nullable: true
      machine_network_cidr:
        type: string
        description: A CIDR that all hosts belonging to the cluster should have an interfaces with IP address that belongs to this CIDR. The api_vip belongs to this CIDR.
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/(?:(?:[0-9])|(?:[1-2][0-9])|(?:3[0-2])))|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,})/(?:(?:[0-9])|(?:[1-9][0-9])|(?:1[0-1][0-9])|(?:12[0-8])))$'
        x-nullable: true
      pull_secret:
        type: string
        description: The pull secret obtained from Red Hat OpenShift Cluster Manager at cloud.redhat.com/openshift/install/pull-secret.
        x-nullable: true
      ssh_public_key:
        type: string
        description: SSH public key for debugging OpenShift nodes.
        x-nullable: true
      vip_dhcp_allocation:
        type: boolean
        description: Indicate if virtual IP DHCP allocation mode is enabled.
        x-nullable: true
      http_proxy:
        type: string
        description: |
          A proxy URL to use for creating HTTP connections outside the cluster.
          http://\<username\>:\<pswd\>@\<ip\>:\<port\>
        x-nullable: true
      https_proxy:
        type: string
        description: |
          A proxy URL to use for creating HTTPS connections outside the cluster.
          http://\<username\>:\<pswd\>@\<ip\>:\<port\>
        x-nullable: true
      no_proxy:
        type: string
        description: An "*" or a comma-separated list of destination domain names, domains, IP addresses, or other network CIDRs to exclude from proxying.
        x-nullable: true
      hosts_roles:
        type: array
        description: The desired role for hosts associated with the cluster.
        x-nullable: true
        items:
          type: object
          properties:
            id:
              type: string
              format: uuid
            role:
              $ref: '#/definitions/host-role-update-params'
      hosts_names:
        type: array
        description: The desired hostname for hosts associated with the cluster.
        x-nullable: true
        items:
          type: object
          properties:
            id:
              type: string
              format: uuid
            hostname:
              type: string
      disks_selected_config:
        type: array
        x-nullable: true
        items:
          type: object
          properties:
            id:
              type: string
              format: uuid
            disks_config:
              description: The desired disks parameters (such as the disk's role).
              type: array
              items:
                $ref: '#/definitions/disk-config-params'
      hosts_machine_config_pool_names:
        type: array
        description: The desired machine config pool for hosts associated with the cluster.
        x-nullable: true
        items:
          type: object
          properties:
            id:
              type: string
              format: uuid
            machine_config_pool_name:
              type: string
      user_managed_networking:
        type: boolean
        description: Indicate if the networking is managed by the user.
        x-nullable: true
      additional_ntp_source:
        type: string
        description: A comma-separated list of NTP sources (name or IP) going to be added to all the hosts.
        x-nullable: true
      olm_operators:
        type: array
        description: List of OLM operators to be installed.
        items:
          $ref: '#/definitions/operator-create-params'
      hyperthreading:
        type: string
        description: Enable/disable hyperthreading on master nodes, worker nodes, or all nodes.
        enum: ['masters', 'workers', 'all', 'none']
        x-nullable: true

  add-hosts-cluster-create-params:
    type: object
    required:
      - id
      - name
      - api_vip_dnsname
      - openshift_version
    properties:
      id:
        type: string
        format: uuid
        description: Unique identifier of the object.
      name:
        type: string
        description: Name of the OpenShift cluster.
      api_vip_dnsname:
        type: string
        description: api vip domain.
      openshift_version:
        type: string
        description: Version of the OpenShift cluster.

  cluster:
    type: object
    required:
      - kind
      - id
      - href
      - image_info
      - status
      - status_info
    properties:
      kind:
        type: string
        enum: ['Cluster', 'AddHostsCluster']
        description: |
          Indicates the type of this object. Will be 'Cluster' if this is a complete object,
          'AddHostsCluster' for cluster that add hosts to existing OCP cluster,
      high_availability_mode:
        type: string
        enum: ['Full', 'None']
        default: 'Full'
        description: |
          Guaranteed availability of the installed cluster. 'Full' installs a Highly-Available cluster
          over multiple master nodes whereas 'None' installs a full cluster over one node.
      id:
        type: string
        format: uuid
        description: Unique identifier of the object.
        x-go-custom-tag: gorm:"primary_key"
      href:
        type: string
        description: Self link.
      name:
        type: string
        description: Name of the OpenShift cluster.
      user_name:
        type: string
      org_id:
        type: string
      email_domain:
        type: string
      openshift_version:
        type: string
        description: Version of the OpenShift cluster.
      ocp_release_image:
        type: string
        description: OpenShift release image URI.
      openshift_cluster_id:
        type: string
        format: uuid
        description: Cluster ID on OCP system.
      image_info:
        $ref: '#/definitions/image_info'
        x-go-custom-tag: gorm:"embedded;embedded_prefix:image_"
      base_dns_domain:
        type: string
        description: Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.
      cluster_network_cidr:
        type: string
        description: IP address block from which Pod IPs are allocated. This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/(?:(?:[0-9])|(?:[1-2][0-9])|(?:3[0-2])))|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,})/(?:(?:[0-9])|(?:[1-9][0-9])|(?:1[0-1][0-9])|(?:12[0-8])))$'
      cluster_network_host_prefix:
        type: integer
        description: The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.
        minimum: 1
        maximum: 128
      service_network_cidr:
        type: string
        description: The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/(?:(?:[0-9])|(?:[1-2][0-9])|(?:3[0-2])))|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,})/(?:(?:[0-9])|(?:[1-9][0-9])|(?:1[0-1][0-9])|(?:12[0-8])))$'
      api_vip:
        type: string
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3})|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,}))$'
        description: The virtual IP used to reach the OpenShift cluster's API.
      api_vip_dns_name:
        type: string
        description: The domain name used to reach the OpenShift cluster API.
        x-nullable: true
      machine_network_cidr:
        type: string
        description: A CIDR that all hosts belonging to the cluster should have an interfaces with IP address that belongs to this CIDR. The api_vip belongs to this CIDR.
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}\/(?:(?:[0-9])|(?:[1-2][0-9])|(?:3[0-2])))|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,})/(?:(?:[0-9])|(?:[1-9][0-9])|(?:1[0-1][0-9])|(?:12[0-8])))$'
      ingress_vip:
        type: string
        pattern: '^(?:(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3})|(?:(?:[0-9a-fA-F]*:[0-9a-fA-F]*){2,}))$'
        description: The virtual IP used for cluster ingress traffic.
      ssh_public_key:
        type: string
        description: SSH public key for debugging OpenShift nodes.
      http_proxy:
        type: string
        description: |
          A proxy URL to use for creating HTTP connections outside the cluster.
          http://\<username\>:\<pswd\>@\<ip\>:\<port\>
      https_proxy:
        type: string
        description: |
          A proxy URL to use for creating HTTPS connections outside the cluster.
          http://\<username\>:\<pswd\>@\<ip\>:\<port\>
        x-go-custom-tag: gorm:"column:https_proxy"
      no_proxy:
        type: string
        description: A comma-separated list of destination domain names, domains, IP addresses, or other network CIDRs to exclude from proxying.
      status:
        type: string
        description: Status of the OpenShift cluster.
        enum:
          - insufficient
          - ready
          - error
          - preparing-for-installation
          - pending-for-input
          - installing
          - finalizing
          - installed
          - adding-hosts
          - cancelled
          - installing-pending-user-action
      status_info:
        type: string
        x-go-custom-tag: gorm:"type:varchar(2048)"
        description: Additional information pertaining to the status of the OpenShift cluster.
      status_updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: The last time that the cluster status was updated.
      hosts:
        x-go-custom-tag: gorm:"foreignkey:ClusterID;association_foreignkey:ID"
        type: array
        description: Hosts that are associated with this cluster.
        items:
          type: object
          $ref: '#/definitions/host'
      ready_host_count:
        type: integer
        format: int64
        description: hosts associated to this cluster that are in 'known' state.
        x-go-custom-tag: gorm:"-"
      enabled_host_count:
        type: integer
        format: int64
        description: hosts associated to this cluster that are not in 'disabled' state.
        x-go-custom-tag: gorm:"-"
      total_host_count:
        type: integer
        format: int64
        description: All hosts associated to this cluster.
        x-go-custom-tag: gorm:"-"

      updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: The last time that this cluster was updated.
      created_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: The time that this cluster was created.
      install_started_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone;default:'2000-01-01 00:00:00z'"
        description: The time that this cluster started installation.
      install_completed_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone;default:'2000-01-01 00:00:00z'"
        description: The time that this cluster completed installation.
      host_networks:
        type: array
        items:
          $ref: '#/definitions/host_network'
        x-go-custom-tag: gorm:"-"
        description: List of host networks to be filled during query.
      pull_secret_set:
        type: boolean
        description: True if the pull secret has been added to the cluster.
      vip_dhcp_allocation:
        type: boolean
        description: Indicate if virtual IP DHCP allocation mode is enabled.
        x-nullable: true
      validations_info:
        type: string
        description: JSON-formatted string containing the validation results for each validation id grouped by category (network, hosts-data, etc.)
        x-go-custom-tag: gorm:"type:text"
      logs_info:
        $ref: '#/definitions/logs_state'
        description: The progress of log collection or empty if logs are not applicable
        x-go-custom-tag: gorm:"type:varchar(2048)"
      install_config_overrides:
        x-go-custom-tag: gorm:"type:text"
        type: string
        description: JSON-formatted string containing the user overrides for the install-config.yaml file.
        example: '{"networking":{"networkType": "OVN-Kubernetes"},"fips":true}'
      ignition_config_overrides:
        x-go-custom-tag: gorm:"type:text"
        type: string
        description: Json formatted string containing the user overrides for the initial ignition config
        example: '{"ignition": {"version": "3.1.0"}, "storage": {"files": [{"path": "/tmp/example", "contents": {"source": "data:text/plain;base64,aGVscGltdHJhcHBlZGluYXN3YWdnZXJzcGVj"}}]}}'
      controller_logs_collected_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      controller_logs_started_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      connectivity_majority_groups:
        type: string
        description: Json formatted string containing the majority groups for connectivity checks.
        x-go-custom-tag: gorm:"type:text"
      deleted_at:
        type: string
        format: date-time
        description: The time that the cluster was deleted.
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        x-nullable: true
      user_managed_networking:
        type: boolean
        x-nullable: true
        description: Indicate if the networking is managed by the user.
      additional_ntp_source:
        type: string
        description: A comma-separated list of NTP sources (name or IP) going to be added to all the hosts.
      monitored_operators:
        x-go-custom-tag: gorm:"foreignkey:ClusterID;association_foreignkey:ID"
        type: array
        description: Operators that are associated with this cluster.
        items:
          type: object
          $ref: '#/definitions/monitored-operator'
      ams_subscription_id:
        type: string
        format: uuid
        description: Unique identifier of the AMS subscription in OCM.
      hyperthreading:
        type: string
        enum: ['masters', 'workers', 'all', 'none']
        description: Enable/disable hyperthreading on master nodes, worker nodes, or all nodes
      feature_usage:
        type: string
        description: JSON-formatted string containing the usage information by feature name
        x-go-custom-tag: gorm:"type:text"


  image_info:
    type: object
    properties:
      ssh_public_key:
        type: string
        description: SSH public key for debugging the installation.
      size_bytes:
        type: integer
        minimum: 0
      download_url:
        type: string
      generator_version:
        type: string
        description: Image generator version.
      created_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      expires_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
      static_network_config:
        type: string
        description: static network configuration string in the format expected by discovery ignition generation
      type:
        $ref: '#/definitions/image_type'
      ca_config:
        type: string
        description: CA config data for mirror registries
      mirror_registries_config:
        type: string
        description: registries.conf file contents in a TOML format

  host_static_network_config:
    type: object
    properties:
      network_yaml:
        type: string
        description: yaml string that can be processed by nmstate
      mac_interface_map:
        $ref: '#/definitions/mac_interface_map'
        description: mapping of host macs to logical interfaces used in the network yaml

  mac_interface_map:
    type: array
    items:
      type: object
      properties:
        mac_address:
          type: string
          pattern: '^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$'
          description: mac address present on the host
        logical_nic_name:
          type: string
          description: nic name used in the yaml, which relates 1:1 to the mac address

  image_type:
    type: string
    enum: [full-iso, minimal-iso]

  mirror_registries_ca_config:
    type: object
    properties:
      mirror_registries_config:
        $ref: '#/definitions/mirror_registries_config'
        description: configuration of registries conf
      ca_config:
        type: string
        description: string containing CA or CA bundle for mirrored registries

  mirror_registries_config:
    type: object
    properties:
      unqualified-search-registries:
        type: array
        items:
          type: string
      mirror_registries:
        type: array
        items:
          $ref: '#/definitions/mirror_registry'

  mirror_registry:
    type: object
    properties:
      prefix:
        type: string
        description: prefix for choosing this specific mirror
      location:
        type: string
        description: the original registry location
      mirror_location:
        type: string
        description: the mirror registry location


  free-addresses-list:
    type: array
    items:
      type: string
      format: ipv4

  cluster-list:
    type: array
    items:
      $ref: '#/definitions/cluster'

  host_network:
    type: object
    properties:
      cidr:
        type: string
      host_ids:
        type: array
        items:
          type: string
          format: uuid

  l2-connectivity:
    type: object
    properties:
      outgoing_nic:
        type: string
      outgoing_ip_address:
        type: string
      remote_ip_address:
        type: string
      remote_mac:
        type: string
      successful:
        type: boolean

  l3-connectivity:
    type: object
    properties:
      outgoing_nic:
        type: string
      remote_ip_address:
        type: string
      successful:
        type: boolean
      average_rtt_ms:
        type: number
        format: double
        description: Average round trip time in milliseconds.
        x-go-name: "AverageRTTMs"
      packet_loss_percentage:
        type: number
        format: double
        description: Percentage of packets lost during connectivity check.

  connectivity-remote-host:
    type: object
    properties:
      host_id:
        type: string
        format: uuid
      l2_connectivity:
        type: array
        items:
          $ref: '#/definitions/l2-connectivity'
      l3_connectivity:
        type: array
        items:
          $ref: '#/definitions/l3-connectivity'

  # Return value of connectivity check
  connectivity-report:
    type: object
    properties:
      remote_hosts:
        type: array
        items:
          $ref: '#/definitions/connectivity-remote-host'

  discovery-ignition-params:
    properties:
      config:
        type: string

  ingress-cert-params:
    type: string

  completion-params:
    type: object
    required:
      - is_success
    properties:
      is_success:
        type: boolean
      error_info:
        type: string

  host-progress:
    type: object
    required:
      - current_stage
    properties:
      current_stage:
        type: string
        $ref: '#/definitions/host-stage'
      progress_info:
        type: string
        x-go-custom-tag: gorm:"type:varchar(2048)"

  host-progress-info:
    type: object
    required:
      - current_stage
    properties:
      current_stage:
        type: string
        $ref: '#/definitions/host-stage'
      progress_info:
        type: string
        x-go-custom-tag: gorm:"type:varchar(2048)"
      stage_started_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: Time at which the current progress stage started.
      stage_updated_at:
        type: string
        format: date-time
        x-go-custom-tag: gorm:"type:timestamp with time zone"
        description: Time at which the current progress stage was last updated.

  host-stage:
    type: string
    enum:
      - Starting installation
      - Waiting for control plane
      - Start waiting for control plane
      - Installing
      - Writing image to disk
      - Rebooting
      - Waiting for ignition
      - Configuring
      - Joined
      - Done
      - Failed

  error:
    type: object
    required:
      - kind
      - id
      - href
      - code
      - reason
    properties:
      kind:
        type: string
        enum: ['Error']
        description: Indicates the type of this object. Will always be 'Error'.
      id:
        type: integer
        format: int32
        description: Numeric identifier of the error.
        minimum: 400
        maximum: 504
      href:
        type: string
        description: Self link.
      code:
        type: string
        description: Globally unique code of the error, composed of the unique identifier of the API and the numeric identifier of the error. For example, if the numeric identifier of the error is 93 and the identifier of the API is assisted_install then the code will be ASSISTED-INSTALL-93.
      reason:
        type: string
        description: Human-readable description of the error.

  cluster_default_config:
    type: object
    properties:
      cluster_network_cidr:
        type: string
        pattern: '^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[\/]([1-9]|[1-2][0-9]|3[0-2]?)$'
      cluster_network_host_prefix:
        type: integer
        minimum: 1
        maximum: 32
      service_network_cidr:
        type: string
        pattern: '^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[\/]([1-9]|[1-2][0-9]|3[0-2]?)$'
      ntp_source:
        type: string
        x-omitempty: false

  infra_error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        description: Numeric identifier of the error.
        minimum: 401
        maximum: 403
      message:
        type: string
        description: Human-readable description of the error.

  interface:
    type: object
    properties:
      ipv6_addresses:
        type: array
        items:
          type: string
      vendor:
        type: string
      name:
        type: string
      has_carrier:
        type: boolean
      product:
        type: string
      mtu:
        type: integer
      ipv4_addresses:
        type: array
        items:
          type: string
      biosdevname:
        type: string
      client_id:
        type: string
      mac_address:
        type: string
      flags:
        type: array
        items:
          type: string
      speed_mbps:
        type: integer

  disk:
    type: object
    properties:
      id:
        type: string
        description: Determine the disk's unique identifier which is the by-id field if it exists and fallback to the by-path field otherwise
      drive_type:
        type: string
      vendor:
        type: string
      name:
        type: string
      path:
        type: string
      hctl:
        type: string
      by_path:
        type: string
        description: by-path is the shortest physical path to the device
      by_id:
        type: string
        description: by-id is the World Wide Number of the device which guaranteed to be unique for every storage device
      model:
        type: string
      wwn:
        type: string
      serial:
        type: string
      size_bytes:
        type: integer
      bootable:
        type: boolean
      is_installation_media:
        type: boolean
        description: Whether the disk appears to be an installation media or not
      installation_eligibility:
        x-nullable: false
        type: object
        properties:
          eligible:
            type: boolean
            description: Whether the disk is eligible for installation or not.
          not_eligible_reasons:
            type: array
            description: Reasons for why this disk is not eligible for installation.
            items:
              type: string
      smart:
        type: string
      io_perf:
        $ref: '#/definitions/io_perf'

  io_perf:
    type: object
    properties:
      sync_duration:
        type: integer
        description: 99th percentile of fsync duration in milliseconds

  boot:
    type: object
    properties:
      current_boot_mode:
        type: string
      pxe_interface:
        type: string

  system_vendor:
    type: object
    properties:
      serial_number:
        type: string
      product_name:
        type: string
      manufacturer:
        type: string
      virtual:
        type: boolean
        description: Whether the machine appears to be a virtual machine or not

  memory:
    type: object
    properties:
      physical_bytes:
        type: integer
      usable_bytes:
        type: integer

  cpu:
    type: object
    properties:
      count:
        type: integer
      frequency:
        type: number
      flags:
        type: array
        items:
          type: string
      model_name:
        type: string
      architecture:
        type: string

  gpu:
    type: object
    properties:
      vendor:
        type: string
        description: The name of the device vendor (for example "Intel Corporation")
      vendor_id:
        type: string
        description: ID of the vendor (for example "8086")
      device_id:
        type: string
        description: ID of the device (for example "3ea0")
      name:
        type: string
        description: Product name of the device (for example "UHD Graphics 620 (Whiskey Lake)")
      address:
        type: string
        description: Device address (for example "0000:00:02.0")

  inventory:
    type: object
    properties:
      hostname:
        type: string
      bmc_address:
        type: string
      interfaces:
        type: array
        items:
          $ref: '#/definitions/interface'
      disks:
        type: array
        items:
          $ref: '#/definitions/disk'
      boot:
        $ref: '#/definitions/boot'
      system_vendor:
        $ref: '#/definitions/system_vendor'
      bmc_v6address:
        type: string
      memory:
        $ref: '#/definitions/memory'
      cpu:
        $ref: '#/definitions/cpu'
      timestamp:
        type: integer
      gpus:
        type: array
        items:
          $ref: '#/definitions/gpu'


  free_network_addresses:
    type: object
    properties:
      network:
        type: string
        pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'
      free_addresses:
        type: array
        items:
          type: string
          format: ipv4

  free_networks_addresses:
    type: array
    items:
      $ref: '#/definitions/free_network_addresses'

  free_addresses_request:
    type: array
    items:
      type: string
      pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]|[1-2][0-9]|3[0-2]?$'

  api_vip_connectivity_request:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        description: URL address of the API.
      verify_cidr:
        type: boolean
        description: Whether to verify if the API VIP belongs to one of the interfaces.

  api_vip_connectivity_response:
    type: object
    properties:
      is_success:
        type: boolean
        description: API VIP connectivity check result.

  fio_perf_check_request:
    type: object
    required:
      - path
      - duration_threshold_ms
      - exit_code
    properties:
      path:
        type: string
        description: --filename argument for fio (expects a file or a block device path).
      duration_threshold_ms:
        type: integer
        description: The maximal fdatasync duration in ms that is considered acceptable.
      exit_code:
        type: integer
        description: Exit code to return in case of an error.

  fio_perf_check_response:
    type: object
    properties:
      io_sync_duration:
        type: integer
        description: The 99th percentile of fdatasync durations in milliseconds.
      path:
        type: string
        description: The device path.

  disk_speed_check_request:
    type: object
    required:
      - path
    properties:
      path:
        type: string
        description: --filename argument for fio (expects a file or a block device path).

  disk_speed_check_response:
    type: object
    properties:
      io_sync_duration:
        type: integer
        description: The 99th percentile of fdatasync durations in milliseconds.
      path:
        type: string
        description: The device path.

  domain_resolution_request:
    type: object
    required:
      - domains
    properties:
      domains:
        type: array
        items:
          x-go-name: DomainResolutionRequestDomain
          type: object
          required:
            - domain_name
          properties:
            domain_name:
              description: "The domain name that should be resolved"
              type: string

  domain_resolution_response:
    type: object
    required:
      - resolutions
    properties:
      resolutions:
        type: array
        items:
          x-go-name: DomainResolutionResponseDomain
          type: object
          required:
            - domain_name
          properties:
            domain_name:
              type: string
              description: "The domain that was resolved"
            ipv4_addresses:
              type: array
              description: "The IPv4 addresses of the domain, empty if none"
              items:
                type: string
                format: ipv4
            ipv6_addresses:
              type: array
              description: "The IPv6 addresses of the domain, empty if none"
              items:
                type: string
                format: ipv6
  disk_speed:
    type: object
    properties:
      tested:
        type: boolean
      exit_code:
        type: integer
      speed_ms:
        type: integer

  disk_info:
    type: object
    properties:
      id:
        type: string
        format: uuid
      path:
        type: string
      disk_speed:
        $ref: '#/definitions/disk_speed'

  credentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      console_url:
        type: string

  disk-config-params:
    type: object
    required:
      - 'id'
    properties:
      id:
        type: string
      role:
        $ref: "#/definitions/disk-role"

  disk-role:
    type: string
    enum:
      - 'none'
      - 'install'

  host-role-update-params:
    type: string
    enum:
      - 'auto-assign'
      - 'master'
      - 'worker'

  host-role:
    type: string
    enum:
      - 'auto-assign'
      - 'master'
      - 'worker'
      - 'bootstrap'

  host-validation-id:
    type: string
    enum:
      - 'connected'
      - 'has-inventory'
      - 'has-min-cpu-cores'
      - 'has-min-valid-disks'
      - 'has-min-memory'
      - 'machine-cidr-defined'
      - 'has-cpu-cores-for-role'
      - 'has-memory-for-role'
      - 'hostname-unique'
      - 'hostname-valid'
      - 'belongs-to-machine-cidr'
      - 'api-vip-connected'
      - 'belongs-to-majority-group'
      - 'valid-platform'
      - 'ntp-synced'
      - 'container-images-available'
      - 'lso-requirements-satisfied'
      - 'ocs-requirements-satisfied'
      - 'sufficient-or-unknown-installation-disk-speed'
      - 'cnv-requirements-satisfied'

  dhcp_allocation_request:
    type: object
    required:
      - interface
      - api_vip_mac
      - ingress_vip_mac
    properties:
      interface:
        type: string
        description: The network interface (NIC) to run the DHCP requests on.
      api_vip_mac:
        type: string
        format: mac
        description: MAC address for the API virtual IP.
      ingress_vip_mac:
        type: string
        format: mac
        description: MAC address for the Ingress virtual IP.
      api_vip_lease:
        type: string
        description: Contents of lease file to be used for API virtual IP.
      ingress_vip_lease:
        type: string
        description: Contents of lease file to be used for for Ingress virtual IP.

  dhcp_allocation_response:
    type: object
    required:
      - api_vip_address
      - ingress_vip_address
    properties:
      api_vip_address:
        type: string
        format: ipv4
        description: The IPv4 address that was allocated by DHCP for the API virtual IP.
      ingress_vip_address:
        type: string
        format: ipv4
        description: The IPv4 address that was allocated by DHCP for the Ingress virtual IP.
      api_vip_lease:
        type: string
        description: Contents of last acquired lease for API virtual IP.
      ingress_vip_lease:
        type: string
        description: Contents of last acquired lease for Ingress virtual IP.

  ntp_synchronization_request:
    type: object
    required:
      - ntp_source
    properties:
      ntp_source:
        type: string
        description: A comma-separated list of NTP sources (name or IP) going to be added to all the hosts.

  ntp_synchronization_response:
    properties:
      ntp_sources:
        type: array
        items:
          $ref: "#/definitions/ntp_source"

  ntp_source:
    type: object
    properties:
      source_name:
        type: string
        description: NTP source name or IP.
      source_state:
        description: Indication of state of an NTP source.
        $ref: "#/definitions/source_state"

  container_image_availability_request:
    type: object
    required:
      - images
    properties:
      timeout:
        type: integer
        description: Positive number represents a timeout in seconds for a pull operation.
      images:
        type: array
        description: List of image names to be checked.
        items:
          type: string
          description: A fully qualified image name (FQIN).

  container_image_availability_response:
    type: object
    required:
      - images
    properties:
      images:
        type: array
        description: List of images that were checked.
        items:
          $ref: '#/definitions/container_image_availability'

  container_image_availability:
    type: object
    properties:
      name:
        type: string
        description: A fully qualified image name (FQIN).
      size_bytes:
        type: number
        description: Size of the image in bytes.
      time:
        type: number
        description: Seconds it took to pull the image.
      download_rate:
        type: number
        description: The rate of size/time in seconds MBps.
      result:
        $ref: '#/definitions/container_image_availability_result'

  container_image_availability_result:
    type: string
    enum: ['success', 'failure']
    description: Image availability result.

  source_state:
    type: string
    enum:
      - synced
      - combined
      - not_combined
      - error
      - variable
      - unreachable

  presigned:
    type: object
    required:
      - url
    properties:
      url:
        type: string

  cluster-validation-id:
    type: string
    enum:
      - 'machine-cidr-defined'
      - 'cluster-cidr-defined'
      - 'service-cidr-defined'
      - 'no-cidrs-overlapping'
      - 'network-prefix-valid'
      - 'machine-cidr-equals-to-calculated-cidr'
      - 'api-vip-defined'
      - 'api-vip-valid'
      - 'ingress-vip-defined'
      - 'ingress-vip-valid'
      - 'all-hosts-are-ready-to-install'
      - 'sufficient-masters-count'
      - 'dns-domain-defined'
      - 'pull-secret-set'
      - 'ntp-server-configured'
      - 'lso-requirements-satisfied'
      - 'ocs-requirements-satisfied'
      - 'cnv-requirements-satisfied'

  logs_type:
    type: string
    enum:
      - 'host'
      - 'controller'
      - 'all'
      - ''

  logs_state:
    type: string
    enum:
      - 'requested'
      - 'collecting'
      - 'completed'
      - 'timeout'
      - ''

  logs-progress-params:
    type: object
    required:
      - logs_state
    properties:
      logs_state:
        description: The state of collecting logs.
        $ref: '#/definitions/logs_state'
  list-manifests:
    type: array
    items:
      $ref: '#/definitions/manifest'

  manifest:
    type: object
    properties:
      folder:
        description: The folder that contains the files. Manifests can be placed in 'manifests' or 'openshift' directories.
        type: string
        enum: [manifests,openshift]
      file_name:
        type: string
        description: The file name prefaced by the folder that contains it.

  create-manifest-params:
    type: object
    properties:
      folder:
        description: The folder that contains the files. Manifests can be placed in 'manifests' or 'openshift' directories.
        type: string
        enum: [manifests,openshift]
        default: manifests
      file_name:
        description: The name of the manifest to customize the installed OCP cluster.
        type: string
        pattern: '^[^/]*\.(yaml|yml|json)$'
      content:
        description: base64 encoded manifest content.
        type: string
    required:
      - file_name
      - content

  host-ignition-params:
    properties:
      config:
        type: string

  openshift-version:
    type: object
    required:
      - display_name
      - release_image
      - release_version
      - rhcos_image
      - rhcos_version
      - support_level
    properties:
      display_name:
        type: string
        description: Name of the version to be presented to the user.
      release_image:
        type: string
        description: The installation image of the OpenShift cluster.
      release_version:
        type: string
        description: OCP version from the release metadata.
      rhcos_image:
        type: string
        description: The base RHCOS image used for the discovery iso.
      rhcos_version:
        type: string
        description: Build ID of the RHCOS image.
      support_level:
        type: string
        enum: [beta, production, custom]
        description: Level of support of the version.
      default:
        type: boolean
        description: Indication that the version is the recommended one.

  operator-property:
    type: object
    properties:
      name:
        type: string
        description: Name of the property
      data_type:
        type: string
        enum: ['boolean', 'string', 'integer', 'float']
        description: Type of the property
      mandatory:
        type: boolean
        description: Indicates whether the property is reqired
      options:
        type: array
        items:
          type: string
        description: Values to select from
      description:
        type: string
        description: Description of a property
      default_value:
        type: string
        description: Default value for the property

  operator-properties:
    type: array
    items:
      $ref: '#/definitions/operator-property'

  usage:
    type: object
    properties:
      name:
        type: string
        description: name of the feature to track
      data:
        type: object
        description: additional properties of the feature
        additionalProperties:
          type: object