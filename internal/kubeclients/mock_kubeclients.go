// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/assisted-service/internal/kubeclients (interfaces: Kubeclients)

// Package kubeclients is a generated GoMock package.
package kubeclients

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKubeclients is a mock of Kubeclients interface.
type MockKubeclients struct {
	ctrl     *gomock.Controller
	recorder *MockKubeclientsMockRecorder
}

// MockKubeclientsMockRecorder is the mock recorder for MockKubeclients.
type MockKubeclientsMockRecorder struct {
	mock *MockKubeclients
}

// NewMockKubeclients creates a new mock instance.
func NewMockKubeclients(ctrl *gomock.Controller) *MockKubeclients {
	mock := &MockKubeclients{ctrl: ctrl}
	mock.recorder = &MockKubeclientsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubeclients) EXPECT() *MockKubeclientsMockRecorder {
	return m.recorder
}

// GetClusterKubeClient mocks base method.
func (m *MockKubeclients) GetClusterKubeClient(arg0 context.Context, arg1 string) ClusterKubeClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterKubeClient", arg0, arg1)
	ret0, _ := ret[0].(ClusterKubeClient)
	return ret0
}

// GetClusterKubeClient indicates an expected call of GetClusterKubeClient.
func (mr *MockKubeclientsMockRecorder) GetClusterKubeClient(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterKubeClient", reflect.TypeOf((*MockKubeclients)(nil).GetClusterKubeClient), arg0, arg1)
}
