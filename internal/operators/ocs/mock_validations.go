// Code generated by MockGen. DO NOT EDIT.
// Source: validations.go

// Package ocs is a generated GoMock package.
package ocs

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/openshift/assisted-service/models"
	reflect "reflect"
)

// MockOcsValidator is a mock of OcsValidator interface
type MockOcsValidator struct {
	ctrl     *gomock.Controller
	recorder *MockOcsValidatorMockRecorder
}

// MockOcsValidatorMockRecorder is the mock recorder for MockOcsValidator
type MockOcsValidatorMockRecorder struct {
	mock *MockOcsValidator
}

// NewMockOcsValidator creates a new mock instance
func NewMockOcsValidator(ctrl *gomock.Controller) *MockOcsValidator {
	mock := &MockOcsValidator{ctrl: ctrl}
	mock.recorder = &MockOcsValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOcsValidator) EXPECT() *MockOcsValidatorMockRecorder {
	return m.recorder
}

// ValidateOCSRequirements mocks base method
func (m *MockOcsValidator) ValidateOCSRequirements(cluster *models.Cluster) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateOCSRequirements", cluster)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ValidateOCSRequirements indicates an expected call of ValidateOCSRequirements
func (mr *MockOcsValidatorMockRecorder) ValidateOCSRequirements(cluster interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateOCSRequirements", reflect.TypeOf((*MockOcsValidator)(nil).ValidateOCSRequirements), cluster)
}
