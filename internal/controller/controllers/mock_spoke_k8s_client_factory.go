// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/assisted-service/internal/controller/controllers (interfaces: SpokeK8sClientFactory)

// Package controllers is a generated GoMock package.
package controllers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockSpokeK8sClientFactory is a mock of SpokeK8sClientFactory interface.
type MockSpokeK8sClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockSpokeK8sClientFactoryMockRecorder
}

// MockSpokeK8sClientFactoryMockRecorder is the mock recorder for MockSpokeK8sClientFactory.
type MockSpokeK8sClientFactoryMockRecorder struct {
	mock *MockSpokeK8sClientFactory
}

// NewMockSpokeK8sClientFactory creates a new mock instance.
func NewMockSpokeK8sClientFactory(ctrl *gomock.Controller) *MockSpokeK8sClientFactory {
	mock := &MockSpokeK8sClientFactory{ctrl: ctrl}
	mock.recorder = &MockSpokeK8sClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpokeK8sClientFactory) EXPECT() *MockSpokeK8sClientFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSpokeK8sClientFactory) Create(arg0 *v1.Secret) (SpokeK8sClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(SpokeK8sClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSpokeK8sClientFactoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSpokeK8sClientFactory)(nil).Create), arg0)
}
