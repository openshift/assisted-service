// Code generated by MockGen. DO NOT EDIT.
// Source: disk_stats_helper.go

// Package metrics is a generated GoMock package.
package metrics

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDiskStatsHelper is a mock of DiskStatsHelper interface.
type MockDiskStatsHelper struct {
	ctrl     *gomock.Controller
	recorder *MockDiskStatsHelperMockRecorder
}

// MockDiskStatsHelperMockRecorder is the mock recorder for MockDiskStatsHelper.
type MockDiskStatsHelperMockRecorder struct {
	mock *MockDiskStatsHelper
}

// NewMockDiskStatsHelper creates a new mock instance.
func NewMockDiskStatsHelper(ctrl *gomock.Controller) *MockDiskStatsHelper {
	mock := &MockDiskStatsHelper{ctrl: ctrl}
	mock.recorder = &MockDiskStatsHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiskStatsHelper) EXPECT() *MockDiskStatsHelperMockRecorder {
	return m.recorder
}

// GetDiskUsage mocks base method.
func (m *MockDiskStatsHelper) GetDiskUsage(directory string) (uint64, uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiskUsage", directory)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(uint64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetDiskUsage indicates an expected call of GetDiskUsage.
func (mr *MockDiskStatsHelperMockRecorder) GetDiskUsage(directory interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiskUsage", reflect.TypeOf((*MockDiskStatsHelper)(nil).GetDiskUsage), directory)
}
