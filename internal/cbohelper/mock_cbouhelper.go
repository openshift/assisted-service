// Code generated by MockGen. DO NOT EDIT.
// Source: cbohelper.go

// Package cbohelper is a generated GoMock package.
package cbohelper

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCBOHelperApi is a mock of CBOHelperApi interface.
type MockCBOHelperApi struct {
	ctrl     *gomock.Controller
	recorder *MockCBOHelperApiMockRecorder
}

// MockCBOHelperApiMockRecorder is the mock recorder for MockCBOHelperApi.
type MockCBOHelperApiMockRecorder struct {
	mock *MockCBOHelperApi
}

// NewMockCBOHelperApi creates a new mock instance.
func NewMockCBOHelperApi(ctrl *gomock.Controller) *MockCBOHelperApi {
	mock := &MockCBOHelperApi{ctrl: ctrl}
	mock.recorder = &MockCBOHelperApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCBOHelperApi) EXPECT() *MockCBOHelperApiMockRecorder {
	return m.recorder
}

// ConvergedFlowAvailable mocks base method.
func (m *MockCBOHelperApi) ConvergedFlowAvailable() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConvergedFlowAvailable")
	ret0, _ := ret[0].(bool)
	return ret0
}

// ConvergedFlowAvailable indicates an expected call of ConvergedFlowAvailable.
func (mr *MockCBOHelperApiMockRecorder) ConvergedFlowAvailable() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConvergedFlowAvailable", reflect.TypeOf((*MockCBOHelperApi)(nil).ConvergedFlowAvailable))
}

// GenerateIronicConfig mocks base method.
func (m *MockCBOHelperApi) GenerateIronicConfig() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateIronicConfig")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateIronicConfig indicates an expected call of GenerateIronicConfig.
func (mr *MockCBOHelperApiMockRecorder) GenerateIronicConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateIronicConfig", reflect.TypeOf((*MockCBOHelperApi)(nil).GenerateIronicConfig))
}
