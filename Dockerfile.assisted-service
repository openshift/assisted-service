# Generate python client
FROM swaggerapi/swagger-codegen-cli:2.4.15 as swagger_py

COPY swagger.yaml .
COPY tools/generate_python_client.sh .
RUN chmod +x ./generate_python_client.sh && SWAGGER_FILE=swagger.yaml OUTPUT=/build ./generate_python_client.sh

# Generate go client
FROM quay.io/goswagger/swagger:v0.25.0 as swagger_go
COPY . .
RUN mkdir /build
RUN swagger generate server --template=stratoscale -f swagger.yaml --template-dir=/templates/contrib \
    && mv restapi models /build
RUN swagger generate client --template=stratoscale -f swagger.yaml --template-dir=/templates/contrib \
    && mv client /build

# Build binaries
FROM registry.svc.ci.openshift.org/openshift/release:golang-1.14 as builder
COPY . .
COPY --from=swagger_py /build build
COPY --from=swagger_go /build/client client
COPY --from=swagger_go /build/models models
COPY --from=swagger_go /build/restapi restapi
RUN CGO_ENABLED=0 GOFLAGS="" GO111MODULE=on go build -o /build/assisted-service cmd/main.go
RUN cd build && python3 setup.py sdist --dist-dir /assisted-service-client

# Create final image
FROM centos:8

# openshift-install requires this
RUN yum install -y libvirt-libs && yum clean all

ARG WORK_DIR=/data

RUN mkdir $WORK_DIR && chmod 775 $WORK_DIR

# downstream this can be installed as an RPM
ARG OC_URL=https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz
RUN curl -s $OC_URL | tar -xzC /usr/local/bin/ oc

COPY --from=builder /build/assisted-service /assisted-service
COPY --from=builder /assisted-service-client/assisted-service-client-*.tar.gz /clients/
CMD ["/assisted-service"]
