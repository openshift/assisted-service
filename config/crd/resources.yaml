apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: agentclusterinstalls.extensions.hive.openshift.io
spec:
  group: extensions.hive.openshift.io
  names:
    kind: AgentClusterInstall
    listKind: AgentClusterInstallList
    plural: agentclusterinstalls
    shortNames:
    - aci
    singular: agentclusterinstall
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AgentClusterInstall represents a request to provision an agent based cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AgentClusterInstallSpec defines the desired state of the AgentClusterInstall.
            properties:
              apiVIP:
                description: APIVIP is the virtual IP used to reach the OpenShift cluster's API.
                type: string
              clusterDeploymentRef:
                description: ClusterDeploymentRef is a reference to the ClusterDeployment associated with this AgentClusterInstall.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              clusterMetadata:
                description: ClusterMetadata contains metadata information about the installed cluster. It should be populated once the cluster install is completed. (it can be populated sooner if desired, but Hive will not copy back to ClusterDeployment until the Installed condition goes True.
                properties:
                  adminKubeconfigSecretRef:
                    description: AdminKubeconfigSecretRef references the secret containing the admin kubeconfig for this cluster.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  adminPasswordSecretRef:
                    description: AdminPasswordSecretRef references the secret containing the admin username/password which can be used to login to this cluster.
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                  clusterID:
                    description: ClusterID is a globally unique identifier for this cluster generated during installation. Used for reporting metrics among other places.
                    type: string
                  infraID:
                    description: InfraID is an identifier for this cluster generated during installation and used for tagging/naming resources in cloud providers.
                    type: string
                required:
                - adminKubeconfigSecretRef
                - adminPasswordSecretRef
                - clusterID
                - infraID
                type: object
              compute:
                description: Compute is the configuration for the machines that comprise the compute nodes.
                items:
                  description: AgentMachinePool is a pool of machines to be installed.
                  properties:
                    hyperthreading:
                      default: Enabled
                      description: Hyperthreading determines the mode of hyperthreading that machines in the pool will utilize. Default is for hyperthreading to be enabled.
                      enum:
                      - ""
                      - Enabled
                      - Disabled
                      type: string
                    name:
                      description: Name is the name of the machine pool. For the control plane machine pool, the name will always be "master". For the compute machine pools, the only valid name is "worker".
                      type: string
                  required:
                  - name
                  type: object
                type: array
              controlPlane:
                description: ControlPlane is the configuration for the machines that comprise the control plane.
                properties:
                  hyperthreading:
                    default: Enabled
                    description: Hyperthreading determines the mode of hyperthreading that machines in the pool will utilize. Default is for hyperthreading to be enabled.
                    enum:
                    - ""
                    - Enabled
                    - Disabled
                    type: string
                  name:
                    description: Name is the name of the machine pool. For the control plane machine pool, the name will always be "master". For the compute machine pools, the only valid name is "worker".
                    type: string
                required:
                - name
                type: object
              holdInstallation:
                description: HoldInstallation will prevent installation from happening when true. Inspection and validation will proceed as usual, but once the RequirementsMet condition is true, installation will not begin until this field is set to false.
                type: boolean
              imageSetRef:
                description: ImageSetRef is a reference to a ClusterImageSet. The release image specified in the ClusterImageSet will be used to install the cluster.
                properties:
                  name:
                    description: Name is the name of the ClusterImageSet that this refers to
                    type: string
                required:
                - name
                type: object
              ingressVIP:
                description: IngressVIP is the virtual IP used for cluster ingress traffic.
                type: string
              manifestsConfigMapRef:
                description: ManifestsConfigMapRef is a reference to user-provided manifests to add to or replace manifests that are generated by the installer.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              networking:
                description: Networking is the configuration for the pod network provider in the cluster.
                properties:
                  clusterNetwork:
                    description: ClusterNetwork is the list of IP address pools for pods. Default is 10.128.0.0/14 and a host prefix of /23.
                    items:
                      description: ClusterNetworkEntry is a single IP address block for pod IP blocks. IP blocks are allocated with size 2^HostSubnetLength.
                      properties:
                        cidr:
                          description: CIDR is the IP block address pool.
                          type: string
                        hostPrefix:
                          description: HostPrefix is the prefix size to allocate to each node from the CIDR. For example, 24 would allocate 2^8=256 adresses to each node. If this field is not used by the plugin, it can be left unset.
                          format: int32
                          type: integer
                      required:
                      - cidr
                      type: object
                    type: array
                  machineNetwork:
                    description: MachineNetwork is the list of IP address pools for machines.
                    items:
                      description: MachineNetworkEntry is a single IP address block for node IP blocks.
                      properties:
                        cidr:
                          description: CIDR is the IP block address pool for machines within the cluster.
                          type: string
                      required:
                      - cidr
                      type: object
                    type: array
                  serviceNetwork:
                    description: 'ServiceNetwork is the list of IP address pools for services. Default is 172.30.0.0/16. NOTE: currently only one entry is supported.'
                    items:
                      type: string
                    maxItems: 1
                    type: array
                type: object
              provisionRequirements:
                description: ProvisionRequirements defines configuration for when the installation is ready to be launched automatically.
                properties:
                  controlPlaneAgents:
                    description: ControlPlaneAgents is the number of matching approved and ready Agents with the control plane role required to launch the install. Must be either 1 or 3.
                    type: integer
                  workerAgents:
                    description: WorkerAgents is the minimum number of matching approved and ready Agents with the worker role required to launch the install.
                    minimum: 0
                    type: integer
                required:
                - controlPlaneAgents
                type: object
              sshPublicKey:
                description: SSHPublicKey will be added to all cluster hosts for use in debugging.
                type: string
            required:
            - clusterDeploymentRef
            - imageSetRef
            - networking
            - provisionRequirements
            type: object
          status:
            description: AgentClusterInstallStatus defines the observed state of the AgentClusterInstall.
            properties:
              conditions:
                description: Conditions includes more detailed status for the cluster install.
                items:
                  description: ClusterInstallCondition contains details for the current condition of a cluster install.
                  properties:
                    lastProbeTime:
                      description: LastProbeTime is the last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable message indicating details about last transition.
                      type: string
                    reason:
                      description: Reason is a unique, one-word, CamelCase reason for the condition's last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              connectivityMajorityGroups:
                type: string
              controlPlaneAgentsDiscovered:
                description: ControlPlaneAgentsDiscovered is the number of Agents currently linked to this ClusterDeployment.
                type: integer
              controlPlaneAgentsReady:
                description: ControlPlaneAgentsDiscovered is the number of Agents currently linked to this ClusterDeployment that are ready for use.
                type: integer
              debugInfo:
                description: DebugInfo includes information for debugging the installation process.
                properties:
                  eventsURL:
                    description: EventsURL specifies an HTTP/S URL that contains events which occured during the cluster installation process
                    type: string
                  logsURL:
                    description: LogsURL specifies a url for download controller logs tar file.
                    type: string
                  state:
                    description: Current state of the AgentClusterInstall
                    type: string
                  stateInfo:
                    description: Additional information pertaining to the status of the AgentClusterInstall
                    type: string
                type: object
              machineNetwork:
                description: MachineNetwork is the list of IP address pools for machines.
                items:
                  description: MachineNetworkEntry is a single IP address block for node IP blocks.
                  properties:
                    cidr:
                      description: CIDR is the IP block address pool for machines within the cluster.
                      type: string
                  required:
                  - cidr
                  type: object
                type: array
              workerAgentsDiscovered:
                description: WorkerAgentsDiscovered is the number of worker Agents currently linked to this ClusterDeployment.
                type: integer
              workerAgentsReady:
                description: WorkerAgentsDiscovered is the number of worker Agents currently linked to this ClusterDeployment that are ready for use.
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: agents.agent-install.openshift.io
spec:
  group: agent-install.openshift.io
  names:
    kind: Agent
    listKind: AgentList
    plural: agents
    singular: agent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The name of the cluster the Agent registered to.
      jsonPath: .spec.clusterDeploymentName.name
      name: Cluster
      type: string
    - description: The `Approve` state of the Agent.
      jsonPath: .spec.approved
      name: Approved
      type: boolean
    - description: The role (master/worker) of the Agent.
      jsonPath: .status.role
      name: Role
      type: string
    - description: The HostStage of the Agent.
      jsonPath: .status.progress.currentStage
      name: Stage
      type: string
    - description: The hostname of the Agent.
      jsonPath: .status.inventory.hostname
      name: Hostname
      priority: 1
      type: string
    - description: The requested hostname for the Agent.
      jsonPath: .spec.hostname
      name: Requested Hostname
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Agent is the Schema for the hosts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AgentSpec defines the desired state of Agent
            properties:
              approved:
                type: boolean
              clusterDeploymentName:
                description: ClusterReference represents a Cluster Reference. It has enough information to retrieve cluster in any namespace
                properties:
                  name:
                    description: Name is unique within a namespace to reference a cluster resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the cluster name must be unique.
                    type: string
                type: object
              hostname:
                type: string
              ignitionConfigOverrides:
                description: Json formatted string containing the user overrides for the host's ignition config
                type: string
              installation_disk_id:
                description: InstallationDiskID defines the installation destination disk (must be equal to the inventory disk id).
                type: string
              installerArgs:
                description: Json formatted string containing the user overrides for the host's coreos installer args
                type: string
              machineConfigPool:
                type: string
              role:
                description: "HostRole host role \n swagger:model host-role"
                type: string
            required:
            - approved
            - clusterDeploymentName
            - role
            type: object
          status:
            description: AgentStatus defines the observed state of Agent
            properties:
              bootstrap:
                type: boolean
              conditions:
                items:
                  description: Condition represents the state of the operator's reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              debugInfo:
                description: DebugInfo includes information for debugging the installation process.
                properties:
                  eventsURL:
                    description: EventsURL specifies an HTTP/S URL that contains events which occured during the cluster installation process
                    type: string
                  state:
                    description: Current state of the Agent
                    type: string
                  stateInfo:
                    description: Additional information pertaining to the status of the Agent
                    type: string
                type: object
              hostname:
                type: string
              inventory:
                properties:
                  bmcAddress:
                    type: string
                  bmcV6Address:
                    type: string
                  boot:
                    properties:
                      currentBootMode:
                        type: string
                      pxeInterface:
                        type: string
                    type: object
                  cpu:
                    properties:
                      architecture:
                        type: string
                      clockMegahertz:
                        description: 'Name in REST API: frequency'
                        format: int64
                        type: integer
                      count:
                        format: int64
                        type: integer
                      flags:
                        items:
                          type: string
                        type: array
                      modelName:
                        type: string
                    type: object
                  disks:
                    items:
                      properties:
                        bootable:
                          type: boolean
                        byID:
                          type: string
                        byPath:
                          type: string
                        driveType:
                          type: string
                        hctl:
                          type: string
                        id:
                          type: string
                        installationEligibility:
                          properties:
                            eligible:
                              type: boolean
                            notEligibleReasons:
                              items:
                                type: string
                              type: array
                          required:
                          - notEligibleReasons
                          type: object
                        ioPerf:
                          properties:
                            syncDurationMilliseconds:
                              description: 99th percentile of fsync duration in milliseconds
                              format: int64
                              type: integer
                          type: object
                        model:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        serial:
                          type: string
                        sizeBytes:
                          format: int64
                          type: integer
                        smart:
                          type: string
                        vendor:
                          type: string
                        wwn:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                  hostname:
                    type: string
                  interfaces:
                    items:
                      properties:
                        biosDevName:
                          type: string
                        clientID:
                          type: string
                        flags:
                          items:
                            type: string
                          type: array
                        hasCarrier:
                          type: boolean
                        ipV4Addresses:
                          items:
                            type: string
                          type: array
                        ipV6Addresses:
                          items:
                            type: string
                          type: array
                        macAddress:
                          type: string
                        mtu:
                          format: int64
                          type: integer
                        name:
                          type: string
                        product:
                          type: string
                        speedMbps:
                          format: int64
                          type: integer
                        vendor:
                          type: string
                      required:
                      - flags
                      - ipV4Addresses
                      - ipV6Addresses
                      type: object
                    type: array
                  memory:
                    properties:
                      physicalBytes:
                        format: int64
                        type: integer
                      usableBytes:
                        format: int64
                        type: integer
                    type: object
                  reportTime:
                    description: 'Name in REST API: timestamp'
                    format: date-time
                    type: string
                  systemVendor:
                    properties:
                      manufacturer:
                        type: string
                      productName:
                        type: string
                      serialNumber:
                        type: string
                      virtual:
                        type: boolean
                    type: object
                type: object
              ntpSources:
                items:
                  properties:
                    sourceName:
                      type: string
                    sourceState:
                      description: "SourceState source state \n swagger:model source_state"
                      type: string
                  type: object
                type: array
              progress:
                properties:
                  currentStage:
                    description: "HostStage host stage \n swagger:model host-stage"
                    type: string
                  progressInfo:
                    type: string
                  stageStartTime:
                    description: 'Name in REST API: stage_started_at'
                    format: date-time
                    type: string
                  stageUpdateTime:
                    description: 'Name in REST API: stage_updated_at'
                    format: date-time
                    type: string
                type: object
              role:
                description: "HostRole host role \n swagger:model host-role"
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: agentserviceconfigs.agent-install.openshift.io
spec:
  group: agent-install.openshift.io
  names:
    kind: AgentServiceConfig
    listKind: AgentServiceConfigList
    plural: agentserviceconfigs
    singular: agentserviceconfig
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AgentServiceConfig represents an Assisted Service deployment. Only an AgentServiceConfig with name="agent" will be reconciled, for all other names a "Warning" event will be emitted + message logged and it will be ignored forever.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AgentServiceConfigSpec defines the desired state of AgentServiceConfig
            properties:
              databaseStorage:
                description: DatabaseStorage defines the spec of the PersistentVolumeClaim to be created for the database's filesystem. With respect to the resource requests, a minimum of 10Gi is recommended.
                properties:
                  accessModes:
                    description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                    items:
                      type: string
                    type: array
                  dataSource:
                    description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.'
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resources:
                    description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  selector:
                    description: A label query over volumes to consider for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  storageClassName:
                    description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                    type: string
                  volumeMode:
                    description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                    type: string
                  volumeName:
                    description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                    type: string
                type: object
              filesystemStorage:
                description: 'FileSystemStorage defines the spec of the PersistentVolumeClaim to be created for the assisted-service''s filesystem (logs, etc). With respect to the resource requests, the amount of filesystem storage consumer will depend largely on the number of clusters you intend to create. Approximate storage requiremens include:   - ~200 MB per cluster   - ~2-3 GB per supported OpenShift version 20Gi is the recommended minimum for development/testing and 100Gi is recommended for everything else.'
                properties:
                  accessModes:
                    description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                    items:
                      type: string
                    type: array
                  dataSource:
                    description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.'
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resources:
                    description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  selector:
                    description: A label query over volumes to consider for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  storageClassName:
                    description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                    type: string
                  volumeMode:
                    description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                    type: string
                  volumeName:
                    description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                    type: string
                type: object
              mirrorRegistryRef:
                description: 'MirrorRegistryRef is the reference to the configmap that contains mirror registry configuration In case no configuration is need, this field will be nil. ConfigMap must contain to entries: ca-bundle.crt - hold the contents of mirror registry certificate/s registries.conf - holds the content of registries.conf file configured with mirror registries'
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              mustGatherImages:
                description: MustGatherImages defines a collection of operator related must-gather images that are used if one the operators fails to be successfully deployed
                items:
                  properties:
                    name:
                      description: Name specifies the name of the component (e.g. operator) that the image is used to collect information about.
                      type: string
                    openshiftVersion:
                      description: OpenshiftVersion is the Major.Minor version of OpenShift that this image is to be associated with.
                      type: string
                    url:
                      description: Url specifies the path to the Operating System image.
                      type: string
                  required:
                  - name
                  - openshiftVersion
                  - url
                  type: object
                type: array
              osImages:
                description: OSImages defines a collection of Operating System images (ie. RHCOS images) that the assisted-service should use as the base when generating discovery ISOs.
                items:
                  description: OSImage defines an Operating System image and the OpenShift version it is associated with.
                  properties:
                    openshiftVersion:
                      description: OpenshiftVersion is the Major.Minor version of OpenShift that this image is to be associated with.
                      type: string
                    rootFSUrl:
                      description: rootFSUrl specifies the path to the root filesystem.
                      type: string
                    url:
                      description: Url specifies the path to the Operating System image.
                      type: string
                    version:
                      description: Version is the Operating System version of the image.
                      type: string
                  required:
                  - openshiftVersion
                  - rootFSUrl
                  - url
                  - version
                  type: object
                type: array
            required:
            - databaseStorage
            - filesystemStorage
            type: object
          status:
            description: AgentServiceConfigStatus defines the observed state of AgentServiceConfig
            properties:
              conditions:
                items:
                  description: Condition represents the state of the operator's reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: infraenvs.agent-install.openshift.io
spec:
  group: agent-install.openshift.io
  names:
    kind: InfraEnv
    listKind: InfraEnvList
    plural: infraenvs
    singular: infraenv
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              additionalNTPSources:
                description: AdditionalNTPSources is a list of NTP sources (hostname or IP) to be added to all cluster hosts. They are added to any NTP sources that were configured through other means.
                items:
                  type: string
                type: array
              agentLabels:
                additionalProperties:
                  type: string
                description: AgentLabels lists labels to apply to Agents that are associated with this InfraEnv upon the creation of the Agents.
                type: object
              clusterRef:
                description: ClusterRef is the reference to the single ClusterDeployment that will be installed from this InfraEnv. Future versions will allow for multiple ClusterDeployments and this reference will be removed.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a cluster resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the cluster name must be unique.
                    type: string
                type: object
              ignitionConfigOverride:
                description: Json formatted string containing the user overrides for the initial ignition config
                type: string
              nmStateConfigLabelSelector:
                description: NmstateConfigLabelSelector associates NMStateConfigs for hosts that are considered part of this installation environment.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
              proxy:
                description: Proxy defines the proxy settings for agents and clusters that use the InfraEnv. If unset, the agents and clusters will not be configured to use a proxy.
                properties:
                  httpProxy:
                    description: HTTPProxy is the URL of the proxy for HTTP requests.
                    type: string
                  httpsProxy:
                    description: HTTPSProxy is the URL of the proxy for HTTPS requests.
                    type: string
                  noProxy:
                    description: NoProxy is a comma-separated list of domains and CIDRs for which the proxy should not be used.
                    type: string
                type: object
              pullSecretRef:
                description: This field is currently not used. The Pull Secret from ClusterDeployment will be used for the ISO creation. PullSecretRef is the reference to the secret to use when pulling images.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              sshAuthorizedKey:
                description: SSHAuthorizedKey is a SSH public keys that will be added to all agents for use in debugging.
                type: string
            required:
            - clusterRef
            - pullSecretRef
            type: object
          status:
            properties:
              agentLabelSelector:
                description: AgentLabelSelector specifies the label that will be applied to Agents that boot from the installation media of this InfraEnv. This is how a user would identify which agents are associated with a particular InfraEnv.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
              conditions:
                items:
                  description: Condition represents the state of the operator's reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createdTime:
                format: date-time
                type: string
              isoDownloadURL:
                description: ISODownloadURL specifies an HTTP/S URL that contains a discovery ISO containing the configuration from this InfraEnv.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: nmstateconfigs.agent-install.openshift.io
spec:
  group: agent-install.openshift.io
  names:
    kind: NMStateConfig
    listKind: NMStateConfigList
    plural: nmstateconfigs
    singular: nmstateconfig
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              config:
                description: yaml that can be processed by nmstate, using custom marshaling/unmarshaling that will allow to populate nmstate config as plain yaml.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              interfaces:
                description: Interfaces is an array of interface objects containing the name and MAC address for interfaces that are referenced in the raw nmstate config YAML. Interfaces listed here will be automatically renamed in the nmstate config YAML to match the real device name that is observed to have the corresponding MAC address. At least one interface must be listed so that it can be used to identify the correct host, which is done by matching any MAC address in this list to any MAC address observed on the host.
                items:
                  properties:
                    macAddress:
                      description: mac address present on the host.
                      pattern: ^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$
                      type: string
                    name:
                      description: 'nic name used in the yaml, which relates 1:1 to the mac address. Name in REST API: logicalNICName'
                      type: string
                  required:
                  - macAddress
                  - name
                  type: object
                minItems: 1
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
