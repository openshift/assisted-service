// Code generated by go-swagger; DO NOT EDIT.

package manifests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateClusterManifestOKCode is the HTTP code returned for type V2UpdateClusterManifestOK
const V2UpdateClusterManifestOKCode int = 200

/*
V2UpdateClusterManifestOK Success.

swagger:response v2UpdateClusterManifestOK
*/
type V2UpdateClusterManifestOK struct {

	/*
	  In: Body
	*/
	Payload *models.Manifest `json:"body,omitempty"`
}

// NewV2UpdateClusterManifestOK creates V2UpdateClusterManifestOK with default headers values
func NewV2UpdateClusterManifestOK() *V2UpdateClusterManifestOK {

	return &V2UpdateClusterManifestOK{}
}

// WithPayload adds the payload to the v2 update cluster manifest o k response
func (o *V2UpdateClusterManifestOK) WithPayload(payload *models.Manifest) *V2UpdateClusterManifestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster manifest o k response
func (o *V2UpdateClusterManifestOK) SetPayload(payload *models.Manifest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterManifestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterManifestBadRequestCode is the HTTP code returned for type V2UpdateClusterManifestBadRequest
const V2UpdateClusterManifestBadRequestCode int = 400

/*
V2UpdateClusterManifestBadRequest Error.

swagger:response v2UpdateClusterManifestBadRequest
*/
type V2UpdateClusterManifestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterManifestBadRequest creates V2UpdateClusterManifestBadRequest with default headers values
func NewV2UpdateClusterManifestBadRequest() *V2UpdateClusterManifestBadRequest {

	return &V2UpdateClusterManifestBadRequest{}
}

// WithPayload adds the payload to the v2 update cluster manifest bad request response
func (o *V2UpdateClusterManifestBadRequest) WithPayload(payload *models.Error) *V2UpdateClusterManifestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster manifest bad request response
func (o *V2UpdateClusterManifestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterManifestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterManifestUnauthorizedCode is the HTTP code returned for type V2UpdateClusterManifestUnauthorized
const V2UpdateClusterManifestUnauthorizedCode int = 401

/*
V2UpdateClusterManifestUnauthorized Unauthorized.

swagger:response v2UpdateClusterManifestUnauthorized
*/
type V2UpdateClusterManifestUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateClusterManifestUnauthorized creates V2UpdateClusterManifestUnauthorized with default headers values
func NewV2UpdateClusterManifestUnauthorized() *V2UpdateClusterManifestUnauthorized {

	return &V2UpdateClusterManifestUnauthorized{}
}

// WithPayload adds the payload to the v2 update cluster manifest unauthorized response
func (o *V2UpdateClusterManifestUnauthorized) WithPayload(payload *models.InfraError) *V2UpdateClusterManifestUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster manifest unauthorized response
func (o *V2UpdateClusterManifestUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterManifestUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterManifestForbiddenCode is the HTTP code returned for type V2UpdateClusterManifestForbidden
const V2UpdateClusterManifestForbiddenCode int = 403

/*
V2UpdateClusterManifestForbidden Forbidden.

swagger:response v2UpdateClusterManifestForbidden
*/
type V2UpdateClusterManifestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateClusterManifestForbidden creates V2UpdateClusterManifestForbidden with default headers values
func NewV2UpdateClusterManifestForbidden() *V2UpdateClusterManifestForbidden {

	return &V2UpdateClusterManifestForbidden{}
}

// WithPayload adds the payload to the v2 update cluster manifest forbidden response
func (o *V2UpdateClusterManifestForbidden) WithPayload(payload *models.InfraError) *V2UpdateClusterManifestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster manifest forbidden response
func (o *V2UpdateClusterManifestForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterManifestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterManifestNotFoundCode is the HTTP code returned for type V2UpdateClusterManifestNotFound
const V2UpdateClusterManifestNotFoundCode int = 404

/*
V2UpdateClusterManifestNotFound Error.

swagger:response v2UpdateClusterManifestNotFound
*/
type V2UpdateClusterManifestNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterManifestNotFound creates V2UpdateClusterManifestNotFound with default headers values
func NewV2UpdateClusterManifestNotFound() *V2UpdateClusterManifestNotFound {

	return &V2UpdateClusterManifestNotFound{}
}

// WithPayload adds the payload to the v2 update cluster manifest not found response
func (o *V2UpdateClusterManifestNotFound) WithPayload(payload *models.Error) *V2UpdateClusterManifestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster manifest not found response
func (o *V2UpdateClusterManifestNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterManifestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterManifestMethodNotAllowedCode is the HTTP code returned for type V2UpdateClusterManifestMethodNotAllowed
const V2UpdateClusterManifestMethodNotAllowedCode int = 405

/*
V2UpdateClusterManifestMethodNotAllowed Method Not Allowed.

swagger:response v2UpdateClusterManifestMethodNotAllowed
*/
type V2UpdateClusterManifestMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterManifestMethodNotAllowed creates V2UpdateClusterManifestMethodNotAllowed with default headers values
func NewV2UpdateClusterManifestMethodNotAllowed() *V2UpdateClusterManifestMethodNotAllowed {

	return &V2UpdateClusterManifestMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 update cluster manifest method not allowed response
func (o *V2UpdateClusterManifestMethodNotAllowed) WithPayload(payload *models.Error) *V2UpdateClusterManifestMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster manifest method not allowed response
func (o *V2UpdateClusterManifestMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterManifestMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterManifestConflictCode is the HTTP code returned for type V2UpdateClusterManifestConflict
const V2UpdateClusterManifestConflictCode int = 409

/*
V2UpdateClusterManifestConflict Error.

swagger:response v2UpdateClusterManifestConflict
*/
type V2UpdateClusterManifestConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterManifestConflict creates V2UpdateClusterManifestConflict with default headers values
func NewV2UpdateClusterManifestConflict() *V2UpdateClusterManifestConflict {

	return &V2UpdateClusterManifestConflict{}
}

// WithPayload adds the payload to the v2 update cluster manifest conflict response
func (o *V2UpdateClusterManifestConflict) WithPayload(payload *models.Error) *V2UpdateClusterManifestConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster manifest conflict response
func (o *V2UpdateClusterManifestConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterManifestConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterManifestInternalServerErrorCode is the HTTP code returned for type V2UpdateClusterManifestInternalServerError
const V2UpdateClusterManifestInternalServerErrorCode int = 500

/*
V2UpdateClusterManifestInternalServerError Error.

swagger:response v2UpdateClusterManifestInternalServerError
*/
type V2UpdateClusterManifestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterManifestInternalServerError creates V2UpdateClusterManifestInternalServerError with default headers values
func NewV2UpdateClusterManifestInternalServerError() *V2UpdateClusterManifestInternalServerError {

	return &V2UpdateClusterManifestInternalServerError{}
}

// WithPayload adds the payload to the v2 update cluster manifest internal server error response
func (o *V2UpdateClusterManifestInternalServerError) WithPayload(payload *models.Error) *V2UpdateClusterManifestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster manifest internal server error response
func (o *V2UpdateClusterManifestInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterManifestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
