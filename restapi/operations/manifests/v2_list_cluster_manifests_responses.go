// Code generated by go-swagger; DO NOT EDIT.

package manifests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2ListClusterManifestsOKCode is the HTTP code returned for type V2ListClusterManifestsOK
const V2ListClusterManifestsOKCode int = 200

/*V2ListClusterManifestsOK Success.

swagger:response v2ListClusterManifestsOK
*/
type V2ListClusterManifestsOK struct {

	/*
	  In: Body
	*/
	Payload models.ListManifests `json:"body,omitempty"`
}

// NewV2ListClusterManifestsOK creates V2ListClusterManifestsOK with default headers values
func NewV2ListClusterManifestsOK() *V2ListClusterManifestsOK {

	return &V2ListClusterManifestsOK{}
}

// WithPayload adds the payload to the v2 list cluster manifests o k response
func (o *V2ListClusterManifestsOK) WithPayload(payload models.ListManifests) *V2ListClusterManifestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list cluster manifests o k response
func (o *V2ListClusterManifestsOK) SetPayload(payload models.ListManifests) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListClusterManifestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.ListManifests{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// V2ListClusterManifestsUnauthorizedCode is the HTTP code returned for type V2ListClusterManifestsUnauthorized
const V2ListClusterManifestsUnauthorizedCode int = 401

/*V2ListClusterManifestsUnauthorized Unauthorized.

swagger:response v2ListClusterManifestsUnauthorized
*/
type V2ListClusterManifestsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2ListClusterManifestsUnauthorized creates V2ListClusterManifestsUnauthorized with default headers values
func NewV2ListClusterManifestsUnauthorized() *V2ListClusterManifestsUnauthorized {

	return &V2ListClusterManifestsUnauthorized{}
}

// WithPayload adds the payload to the v2 list cluster manifests unauthorized response
func (o *V2ListClusterManifestsUnauthorized) WithPayload(payload *models.InfraError) *V2ListClusterManifestsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list cluster manifests unauthorized response
func (o *V2ListClusterManifestsUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListClusterManifestsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ListClusterManifestsForbiddenCode is the HTTP code returned for type V2ListClusterManifestsForbidden
const V2ListClusterManifestsForbiddenCode int = 403

/*V2ListClusterManifestsForbidden Forbidden.

swagger:response v2ListClusterManifestsForbidden
*/
type V2ListClusterManifestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2ListClusterManifestsForbidden creates V2ListClusterManifestsForbidden with default headers values
func NewV2ListClusterManifestsForbidden() *V2ListClusterManifestsForbidden {

	return &V2ListClusterManifestsForbidden{}
}

// WithPayload adds the payload to the v2 list cluster manifests forbidden response
func (o *V2ListClusterManifestsForbidden) WithPayload(payload *models.InfraError) *V2ListClusterManifestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list cluster manifests forbidden response
func (o *V2ListClusterManifestsForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListClusterManifestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ListClusterManifestsNotFoundCode is the HTTP code returned for type V2ListClusterManifestsNotFound
const V2ListClusterManifestsNotFoundCode int = 404

/*V2ListClusterManifestsNotFound Error.

swagger:response v2ListClusterManifestsNotFound
*/
type V2ListClusterManifestsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ListClusterManifestsNotFound creates V2ListClusterManifestsNotFound with default headers values
func NewV2ListClusterManifestsNotFound() *V2ListClusterManifestsNotFound {

	return &V2ListClusterManifestsNotFound{}
}

// WithPayload adds the payload to the v2 list cluster manifests not found response
func (o *V2ListClusterManifestsNotFound) WithPayload(payload *models.Error) *V2ListClusterManifestsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list cluster manifests not found response
func (o *V2ListClusterManifestsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListClusterManifestsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ListClusterManifestsMethodNotAllowedCode is the HTTP code returned for type V2ListClusterManifestsMethodNotAllowed
const V2ListClusterManifestsMethodNotAllowedCode int = 405

/*V2ListClusterManifestsMethodNotAllowed Method Not Allowed.

swagger:response v2ListClusterManifestsMethodNotAllowed
*/
type V2ListClusterManifestsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ListClusterManifestsMethodNotAllowed creates V2ListClusterManifestsMethodNotAllowed with default headers values
func NewV2ListClusterManifestsMethodNotAllowed() *V2ListClusterManifestsMethodNotAllowed {

	return &V2ListClusterManifestsMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 list cluster manifests method not allowed response
func (o *V2ListClusterManifestsMethodNotAllowed) WithPayload(payload *models.Error) *V2ListClusterManifestsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list cluster manifests method not allowed response
func (o *V2ListClusterManifestsMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListClusterManifestsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ListClusterManifestsConflictCode is the HTTP code returned for type V2ListClusterManifestsConflict
const V2ListClusterManifestsConflictCode int = 409

/*V2ListClusterManifestsConflict Error.

swagger:response v2ListClusterManifestsConflict
*/
type V2ListClusterManifestsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ListClusterManifestsConflict creates V2ListClusterManifestsConflict with default headers values
func NewV2ListClusterManifestsConflict() *V2ListClusterManifestsConflict {

	return &V2ListClusterManifestsConflict{}
}

// WithPayload adds the payload to the v2 list cluster manifests conflict response
func (o *V2ListClusterManifestsConflict) WithPayload(payload *models.Error) *V2ListClusterManifestsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list cluster manifests conflict response
func (o *V2ListClusterManifestsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListClusterManifestsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ListClusterManifestsInternalServerErrorCode is the HTTP code returned for type V2ListClusterManifestsInternalServerError
const V2ListClusterManifestsInternalServerErrorCode int = 500

/*V2ListClusterManifestsInternalServerError Error.

swagger:response v2ListClusterManifestsInternalServerError
*/
type V2ListClusterManifestsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ListClusterManifestsInternalServerError creates V2ListClusterManifestsInternalServerError with default headers values
func NewV2ListClusterManifestsInternalServerError() *V2ListClusterManifestsInternalServerError {

	return &V2ListClusterManifestsInternalServerError{}
}

// WithPayload adds the payload to the v2 list cluster manifests internal server error response
func (o *V2ListClusterManifestsInternalServerError) WithPayload(payload *models.Error) *V2ListClusterManifestsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 list cluster manifests internal server error response
func (o *V2ListClusterManifestsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ListClusterManifestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
