// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// ListEventsOKCode is the HTTP code returned for type ListEventsOK
const ListEventsOKCode int = 200

/*ListEventsOK Success.

swagger:response listEventsOK
*/
type ListEventsOK struct {

	/*
	  In: Body
	*/
	Payload models.EventList `json:"body,omitempty"`
}

// NewListEventsOK creates ListEventsOK with default headers values
func NewListEventsOK() *ListEventsOK {

	return &ListEventsOK{}
}

// WithPayload adds the payload to the list events o k response
func (o *ListEventsOK) WithPayload(payload models.EventList) *ListEventsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list events o k response
func (o *ListEventsOK) SetPayload(payload models.EventList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.EventList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListEventsUnauthorizedCode is the HTTP code returned for type ListEventsUnauthorized
const ListEventsUnauthorizedCode int = 401

/*ListEventsUnauthorized Unauthorized.

swagger:response listEventsUnauthorized
*/
type ListEventsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewListEventsUnauthorized creates ListEventsUnauthorized with default headers values
func NewListEventsUnauthorized() *ListEventsUnauthorized {

	return &ListEventsUnauthorized{}
}

// WithPayload adds the payload to the list events unauthorized response
func (o *ListEventsUnauthorized) WithPayload(payload *models.InfraError) *ListEventsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list events unauthorized response
func (o *ListEventsUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEventsForbiddenCode is the HTTP code returned for type ListEventsForbidden
const ListEventsForbiddenCode int = 403

/*ListEventsForbidden Forbidden.

swagger:response listEventsForbidden
*/
type ListEventsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewListEventsForbidden creates ListEventsForbidden with default headers values
func NewListEventsForbidden() *ListEventsForbidden {

	return &ListEventsForbidden{}
}

// WithPayload adds the payload to the list events forbidden response
func (o *ListEventsForbidden) WithPayload(payload *models.InfraError) *ListEventsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list events forbidden response
func (o *ListEventsForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEventsNotFoundCode is the HTTP code returned for type ListEventsNotFound
const ListEventsNotFoundCode int = 404

/*ListEventsNotFound Error.

swagger:response listEventsNotFound
*/
type ListEventsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListEventsNotFound creates ListEventsNotFound with default headers values
func NewListEventsNotFound() *ListEventsNotFound {

	return &ListEventsNotFound{}
}

// WithPayload adds the payload to the list events not found response
func (o *ListEventsNotFound) WithPayload(payload *models.Error) *ListEventsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list events not found response
func (o *ListEventsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEventsMethodNotAllowedCode is the HTTP code returned for type ListEventsMethodNotAllowed
const ListEventsMethodNotAllowedCode int = 405

/*ListEventsMethodNotAllowed Method Not Allowed.

swagger:response listEventsMethodNotAllowed
*/
type ListEventsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListEventsMethodNotAllowed creates ListEventsMethodNotAllowed with default headers values
func NewListEventsMethodNotAllowed() *ListEventsMethodNotAllowed {

	return &ListEventsMethodNotAllowed{}
}

// WithPayload adds the payload to the list events method not allowed response
func (o *ListEventsMethodNotAllowed) WithPayload(payload *models.Error) *ListEventsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list events method not allowed response
func (o *ListEventsMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEventsInternalServerErrorCode is the HTTP code returned for type ListEventsInternalServerError
const ListEventsInternalServerErrorCode int = 500

/*ListEventsInternalServerError Error.

swagger:response listEventsInternalServerError
*/
type ListEventsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListEventsInternalServerError creates ListEventsInternalServerError with default headers values
func NewListEventsInternalServerError() *ListEventsInternalServerError {

	return &ListEventsInternalServerError{}
}

// WithPayload adds the payload to the list events internal server error response
func (o *ListEventsInternalServerError) WithPayload(payload *models.Error) *ListEventsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list events internal server error response
func (o *ListEventsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
