// Code generated by go-swagger; DO NOT EDIT.

package operators

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// ReportMonitoredOperatorStatusOKCode is the HTTP code returned for type ReportMonitoredOperatorStatusOK
const ReportMonitoredOperatorStatusOKCode int = 200

/*ReportMonitoredOperatorStatusOK Success.

swagger:response reportMonitoredOperatorStatusOK
*/
type ReportMonitoredOperatorStatusOK struct {
}

// NewReportMonitoredOperatorStatusOK creates ReportMonitoredOperatorStatusOK with default headers values
func NewReportMonitoredOperatorStatusOK() *ReportMonitoredOperatorStatusOK {

	return &ReportMonitoredOperatorStatusOK{}
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ReportMonitoredOperatorStatusBadRequestCode is the HTTP code returned for type ReportMonitoredOperatorStatusBadRequest
const ReportMonitoredOperatorStatusBadRequestCode int = 400

/*ReportMonitoredOperatorStatusBadRequest Bad Request

swagger:response reportMonitoredOperatorStatusBadRequest
*/
type ReportMonitoredOperatorStatusBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReportMonitoredOperatorStatusBadRequest creates ReportMonitoredOperatorStatusBadRequest with default headers values
func NewReportMonitoredOperatorStatusBadRequest() *ReportMonitoredOperatorStatusBadRequest {

	return &ReportMonitoredOperatorStatusBadRequest{}
}

// WithPayload adds the payload to the report monitored operator status bad request response
func (o *ReportMonitoredOperatorStatusBadRequest) WithPayload(payload *models.Error) *ReportMonitoredOperatorStatusBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report monitored operator status bad request response
func (o *ReportMonitoredOperatorStatusBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportMonitoredOperatorStatusUnauthorizedCode is the HTTP code returned for type ReportMonitoredOperatorStatusUnauthorized
const ReportMonitoredOperatorStatusUnauthorizedCode int = 401

/*ReportMonitoredOperatorStatusUnauthorized Unauthorized.

swagger:response reportMonitoredOperatorStatusUnauthorized
*/
type ReportMonitoredOperatorStatusUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewReportMonitoredOperatorStatusUnauthorized creates ReportMonitoredOperatorStatusUnauthorized with default headers values
func NewReportMonitoredOperatorStatusUnauthorized() *ReportMonitoredOperatorStatusUnauthorized {

	return &ReportMonitoredOperatorStatusUnauthorized{}
}

// WithPayload adds the payload to the report monitored operator status unauthorized response
func (o *ReportMonitoredOperatorStatusUnauthorized) WithPayload(payload *models.InfraError) *ReportMonitoredOperatorStatusUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report monitored operator status unauthorized response
func (o *ReportMonitoredOperatorStatusUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportMonitoredOperatorStatusForbiddenCode is the HTTP code returned for type ReportMonitoredOperatorStatusForbidden
const ReportMonitoredOperatorStatusForbiddenCode int = 403

/*ReportMonitoredOperatorStatusForbidden Forbidden.

swagger:response reportMonitoredOperatorStatusForbidden
*/
type ReportMonitoredOperatorStatusForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewReportMonitoredOperatorStatusForbidden creates ReportMonitoredOperatorStatusForbidden with default headers values
func NewReportMonitoredOperatorStatusForbidden() *ReportMonitoredOperatorStatusForbidden {

	return &ReportMonitoredOperatorStatusForbidden{}
}

// WithPayload adds the payload to the report monitored operator status forbidden response
func (o *ReportMonitoredOperatorStatusForbidden) WithPayload(payload *models.InfraError) *ReportMonitoredOperatorStatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report monitored operator status forbidden response
func (o *ReportMonitoredOperatorStatusForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportMonitoredOperatorStatusNotFoundCode is the HTTP code returned for type ReportMonitoredOperatorStatusNotFound
const ReportMonitoredOperatorStatusNotFoundCode int = 404

/*ReportMonitoredOperatorStatusNotFound Error.

swagger:response reportMonitoredOperatorStatusNotFound
*/
type ReportMonitoredOperatorStatusNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReportMonitoredOperatorStatusNotFound creates ReportMonitoredOperatorStatusNotFound with default headers values
func NewReportMonitoredOperatorStatusNotFound() *ReportMonitoredOperatorStatusNotFound {

	return &ReportMonitoredOperatorStatusNotFound{}
}

// WithPayload adds the payload to the report monitored operator status not found response
func (o *ReportMonitoredOperatorStatusNotFound) WithPayload(payload *models.Error) *ReportMonitoredOperatorStatusNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report monitored operator status not found response
func (o *ReportMonitoredOperatorStatusNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportMonitoredOperatorStatusMethodNotAllowedCode is the HTTP code returned for type ReportMonitoredOperatorStatusMethodNotAllowed
const ReportMonitoredOperatorStatusMethodNotAllowedCode int = 405

/*ReportMonitoredOperatorStatusMethodNotAllowed Method Not Allowed.

swagger:response reportMonitoredOperatorStatusMethodNotAllowed
*/
type ReportMonitoredOperatorStatusMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReportMonitoredOperatorStatusMethodNotAllowed creates ReportMonitoredOperatorStatusMethodNotAllowed with default headers values
func NewReportMonitoredOperatorStatusMethodNotAllowed() *ReportMonitoredOperatorStatusMethodNotAllowed {

	return &ReportMonitoredOperatorStatusMethodNotAllowed{}
}

// WithPayload adds the payload to the report monitored operator status method not allowed response
func (o *ReportMonitoredOperatorStatusMethodNotAllowed) WithPayload(payload *models.Error) *ReportMonitoredOperatorStatusMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report monitored operator status method not allowed response
func (o *ReportMonitoredOperatorStatusMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportMonitoredOperatorStatusConflictCode is the HTTP code returned for type ReportMonitoredOperatorStatusConflict
const ReportMonitoredOperatorStatusConflictCode int = 409

/*ReportMonitoredOperatorStatusConflict Error.

swagger:response reportMonitoredOperatorStatusConflict
*/
type ReportMonitoredOperatorStatusConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReportMonitoredOperatorStatusConflict creates ReportMonitoredOperatorStatusConflict with default headers values
func NewReportMonitoredOperatorStatusConflict() *ReportMonitoredOperatorStatusConflict {

	return &ReportMonitoredOperatorStatusConflict{}
}

// WithPayload adds the payload to the report monitored operator status conflict response
func (o *ReportMonitoredOperatorStatusConflict) WithPayload(payload *models.Error) *ReportMonitoredOperatorStatusConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report monitored operator status conflict response
func (o *ReportMonitoredOperatorStatusConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportMonitoredOperatorStatusInternalServerErrorCode is the HTTP code returned for type ReportMonitoredOperatorStatusInternalServerError
const ReportMonitoredOperatorStatusInternalServerErrorCode int = 500

/*ReportMonitoredOperatorStatusInternalServerError Error.

swagger:response reportMonitoredOperatorStatusInternalServerError
*/
type ReportMonitoredOperatorStatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReportMonitoredOperatorStatusInternalServerError creates ReportMonitoredOperatorStatusInternalServerError with default headers values
func NewReportMonitoredOperatorStatusInternalServerError() *ReportMonitoredOperatorStatusInternalServerError {

	return &ReportMonitoredOperatorStatusInternalServerError{}
}

// WithPayload adds the payload to the report monitored operator status internal server error response
func (o *ReportMonitoredOperatorStatusInternalServerError) WithPayload(payload *models.Error) *ReportMonitoredOperatorStatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report monitored operator status internal server error response
func (o *ReportMonitoredOperatorStatusInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReportMonitoredOperatorStatusServiceUnavailableCode is the HTTP code returned for type ReportMonitoredOperatorStatusServiceUnavailable
const ReportMonitoredOperatorStatusServiceUnavailableCode int = 503

/*ReportMonitoredOperatorStatusServiceUnavailable Unavailable.

swagger:response reportMonitoredOperatorStatusServiceUnavailable
*/
type ReportMonitoredOperatorStatusServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReportMonitoredOperatorStatusServiceUnavailable creates ReportMonitoredOperatorStatusServiceUnavailable with default headers values
func NewReportMonitoredOperatorStatusServiceUnavailable() *ReportMonitoredOperatorStatusServiceUnavailable {

	return &ReportMonitoredOperatorStatusServiceUnavailable{}
}

// WithPayload adds the payload to the report monitored operator status service unavailable response
func (o *ReportMonitoredOperatorStatusServiceUnavailable) WithPayload(payload *models.Error) *ReportMonitoredOperatorStatusServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report monitored operator status service unavailable response
func (o *ReportMonitoredOperatorStatusServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportMonitoredOperatorStatusServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
