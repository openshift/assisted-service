// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// DeregisterClusterNoContentCode is the HTTP code returned for type DeregisterClusterNoContent
const DeregisterClusterNoContentCode int = 204

/*DeregisterClusterNoContent Success.

swagger:response deregisterClusterNoContent
*/
type DeregisterClusterNoContent struct {
}

// NewDeregisterClusterNoContent creates DeregisterClusterNoContent with default headers values
func NewDeregisterClusterNoContent() *DeregisterClusterNoContent {

	return &DeregisterClusterNoContent{}
}

// WriteResponse to the client
func (o *DeregisterClusterNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeregisterClusterNotFoundCode is the HTTP code returned for type DeregisterClusterNotFound
const DeregisterClusterNotFoundCode int = 404

/*DeregisterClusterNotFound Error.

swagger:response deregisterClusterNotFound
*/
type DeregisterClusterNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeregisterClusterNotFound creates DeregisterClusterNotFound with default headers values
func NewDeregisterClusterNotFound() *DeregisterClusterNotFound {

	return &DeregisterClusterNotFound{}
}

// WithPayload adds the payload to the deregister cluster not found response
func (o *DeregisterClusterNotFound) WithPayload(payload *models.Error) *DeregisterClusterNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister cluster not found response
func (o *DeregisterClusterNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterClusterNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeregisterClusterConflictCode is the HTTP code returned for type DeregisterClusterConflict
const DeregisterClusterConflictCode int = 409

/*DeregisterClusterConflict Error.

swagger:response deregisterClusterConflict
*/
type DeregisterClusterConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeregisterClusterConflict creates DeregisterClusterConflict with default headers values
func NewDeregisterClusterConflict() *DeregisterClusterConflict {

	return &DeregisterClusterConflict{}
}

// WithPayload adds the payload to the deregister cluster conflict response
func (o *DeregisterClusterConflict) WithPayload(payload *models.Error) *DeregisterClusterConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister cluster conflict response
func (o *DeregisterClusterConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterClusterConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeregisterClusterInternalServerErrorCode is the HTTP code returned for type DeregisterClusterInternalServerError
const DeregisterClusterInternalServerErrorCode int = 500

/*DeregisterClusterInternalServerError Error.

swagger:response deregisterClusterInternalServerError
*/
type DeregisterClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeregisterClusterInternalServerError creates DeregisterClusterInternalServerError with default headers values
func NewDeregisterClusterInternalServerError() *DeregisterClusterInternalServerError {

	return &DeregisterClusterInternalServerError{}
}

// WithPayload adds the payload to the deregister cluster internal server error response
func (o *DeregisterClusterInternalServerError) WithPayload(payload *models.Error) *DeregisterClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister cluster internal server error response
func (o *DeregisterClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
