// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// DownloadHostLogsOKCode is the HTTP code returned for type DownloadHostLogsOK
const DownloadHostLogsOKCode int = 200

/*DownloadHostLogsOK Success.

swagger:response downloadHostLogsOK
*/
type DownloadHostLogsOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewDownloadHostLogsOK creates DownloadHostLogsOK with default headers values
func NewDownloadHostLogsOK() *DownloadHostLogsOK {

	return &DownloadHostLogsOK{}
}

// WithPayload adds the payload to the download host logs o k response
func (o *DownloadHostLogsOK) WithPayload(payload io.ReadCloser) *DownloadHostLogsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download host logs o k response
func (o *DownloadHostLogsOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadHostLogsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DownloadHostLogsUnauthorizedCode is the HTTP code returned for type DownloadHostLogsUnauthorized
const DownloadHostLogsUnauthorizedCode int = 401

/*DownloadHostLogsUnauthorized Unauthorized.

swagger:response downloadHostLogsUnauthorized
*/
type DownloadHostLogsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDownloadHostLogsUnauthorized creates DownloadHostLogsUnauthorized with default headers values
func NewDownloadHostLogsUnauthorized() *DownloadHostLogsUnauthorized {

	return &DownloadHostLogsUnauthorized{}
}

// WithPayload adds the payload to the download host logs unauthorized response
func (o *DownloadHostLogsUnauthorized) WithPayload(payload *models.InfraError) *DownloadHostLogsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download host logs unauthorized response
func (o *DownloadHostLogsUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadHostLogsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadHostLogsForbiddenCode is the HTTP code returned for type DownloadHostLogsForbidden
const DownloadHostLogsForbiddenCode int = 403

/*DownloadHostLogsForbidden Forbidden.

swagger:response downloadHostLogsForbidden
*/
type DownloadHostLogsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDownloadHostLogsForbidden creates DownloadHostLogsForbidden with default headers values
func NewDownloadHostLogsForbidden() *DownloadHostLogsForbidden {

	return &DownloadHostLogsForbidden{}
}

// WithPayload adds the payload to the download host logs forbidden response
func (o *DownloadHostLogsForbidden) WithPayload(payload *models.InfraError) *DownloadHostLogsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download host logs forbidden response
func (o *DownloadHostLogsForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadHostLogsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadHostLogsNotFoundCode is the HTTP code returned for type DownloadHostLogsNotFound
const DownloadHostLogsNotFoundCode int = 404

/*DownloadHostLogsNotFound Error.

swagger:response downloadHostLogsNotFound
*/
type DownloadHostLogsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadHostLogsNotFound creates DownloadHostLogsNotFound with default headers values
func NewDownloadHostLogsNotFound() *DownloadHostLogsNotFound {

	return &DownloadHostLogsNotFound{}
}

// WithPayload adds the payload to the download host logs not found response
func (o *DownloadHostLogsNotFound) WithPayload(payload *models.Error) *DownloadHostLogsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download host logs not found response
func (o *DownloadHostLogsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadHostLogsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadHostLogsMethodNotAllowedCode is the HTTP code returned for type DownloadHostLogsMethodNotAllowed
const DownloadHostLogsMethodNotAllowedCode int = 405

/*DownloadHostLogsMethodNotAllowed Method Not Allowed.

swagger:response downloadHostLogsMethodNotAllowed
*/
type DownloadHostLogsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadHostLogsMethodNotAllowed creates DownloadHostLogsMethodNotAllowed with default headers values
func NewDownloadHostLogsMethodNotAllowed() *DownloadHostLogsMethodNotAllowed {

	return &DownloadHostLogsMethodNotAllowed{}
}

// WithPayload adds the payload to the download host logs method not allowed response
func (o *DownloadHostLogsMethodNotAllowed) WithPayload(payload *models.Error) *DownloadHostLogsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download host logs method not allowed response
func (o *DownloadHostLogsMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadHostLogsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadHostLogsConflictCode is the HTTP code returned for type DownloadHostLogsConflict
const DownloadHostLogsConflictCode int = 409

/*DownloadHostLogsConflict Error.

swagger:response downloadHostLogsConflict
*/
type DownloadHostLogsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadHostLogsConflict creates DownloadHostLogsConflict with default headers values
func NewDownloadHostLogsConflict() *DownloadHostLogsConflict {

	return &DownloadHostLogsConflict{}
}

// WithPayload adds the payload to the download host logs conflict response
func (o *DownloadHostLogsConflict) WithPayload(payload *models.Error) *DownloadHostLogsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download host logs conflict response
func (o *DownloadHostLogsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadHostLogsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadHostLogsInternalServerErrorCode is the HTTP code returned for type DownloadHostLogsInternalServerError
const DownloadHostLogsInternalServerErrorCode int = 500

/*DownloadHostLogsInternalServerError Error.

swagger:response downloadHostLogsInternalServerError
*/
type DownloadHostLogsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadHostLogsInternalServerError creates DownloadHostLogsInternalServerError with default headers values
func NewDownloadHostLogsInternalServerError() *DownloadHostLogsInternalServerError {

	return &DownloadHostLogsInternalServerError{}
}

// WithPayload adds the payload to the download host logs internal server error response
func (o *DownloadHostLogsInternalServerError) WithPayload(payload *models.Error) *DownloadHostLogsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download host logs internal server error response
func (o *DownloadHostLogsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadHostLogsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
