// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// UpdateHostIgnitionCreatedCode is the HTTP code returned for type UpdateHostIgnitionCreated
const UpdateHostIgnitionCreatedCode int = 201

/*UpdateHostIgnitionCreated Success.

swagger:response updateHostIgnitionCreated
*/
type UpdateHostIgnitionCreated struct {
}

// NewUpdateHostIgnitionCreated creates UpdateHostIgnitionCreated with default headers values
func NewUpdateHostIgnitionCreated() *UpdateHostIgnitionCreated {

	return &UpdateHostIgnitionCreated{}
}

// WriteResponse to the client
func (o *UpdateHostIgnitionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// UpdateHostIgnitionBadRequestCode is the HTTP code returned for type UpdateHostIgnitionBadRequest
const UpdateHostIgnitionBadRequestCode int = 400

/*UpdateHostIgnitionBadRequest Error.

swagger:response updateHostIgnitionBadRequest
*/
type UpdateHostIgnitionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostIgnitionBadRequest creates UpdateHostIgnitionBadRequest with default headers values
func NewUpdateHostIgnitionBadRequest() *UpdateHostIgnitionBadRequest {

	return &UpdateHostIgnitionBadRequest{}
}

// WithPayload adds the payload to the update host ignition bad request response
func (o *UpdateHostIgnitionBadRequest) WithPayload(payload *models.Error) *UpdateHostIgnitionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host ignition bad request response
func (o *UpdateHostIgnitionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostIgnitionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostIgnitionUnauthorizedCode is the HTTP code returned for type UpdateHostIgnitionUnauthorized
const UpdateHostIgnitionUnauthorizedCode int = 401

/*UpdateHostIgnitionUnauthorized Unauthorized.

swagger:response updateHostIgnitionUnauthorized
*/
type UpdateHostIgnitionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewUpdateHostIgnitionUnauthorized creates UpdateHostIgnitionUnauthorized with default headers values
func NewUpdateHostIgnitionUnauthorized() *UpdateHostIgnitionUnauthorized {

	return &UpdateHostIgnitionUnauthorized{}
}

// WithPayload adds the payload to the update host ignition unauthorized response
func (o *UpdateHostIgnitionUnauthorized) WithPayload(payload *models.InfraError) *UpdateHostIgnitionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host ignition unauthorized response
func (o *UpdateHostIgnitionUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostIgnitionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostIgnitionForbiddenCode is the HTTP code returned for type UpdateHostIgnitionForbidden
const UpdateHostIgnitionForbiddenCode int = 403

/*UpdateHostIgnitionForbidden Forbidden.

swagger:response updateHostIgnitionForbidden
*/
type UpdateHostIgnitionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewUpdateHostIgnitionForbidden creates UpdateHostIgnitionForbidden with default headers values
func NewUpdateHostIgnitionForbidden() *UpdateHostIgnitionForbidden {

	return &UpdateHostIgnitionForbidden{}
}

// WithPayload adds the payload to the update host ignition forbidden response
func (o *UpdateHostIgnitionForbidden) WithPayload(payload *models.InfraError) *UpdateHostIgnitionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host ignition forbidden response
func (o *UpdateHostIgnitionForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostIgnitionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostIgnitionNotFoundCode is the HTTP code returned for type UpdateHostIgnitionNotFound
const UpdateHostIgnitionNotFoundCode int = 404

/*UpdateHostIgnitionNotFound Error.

swagger:response updateHostIgnitionNotFound
*/
type UpdateHostIgnitionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostIgnitionNotFound creates UpdateHostIgnitionNotFound with default headers values
func NewUpdateHostIgnitionNotFound() *UpdateHostIgnitionNotFound {

	return &UpdateHostIgnitionNotFound{}
}

// WithPayload adds the payload to the update host ignition not found response
func (o *UpdateHostIgnitionNotFound) WithPayload(payload *models.Error) *UpdateHostIgnitionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host ignition not found response
func (o *UpdateHostIgnitionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostIgnitionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostIgnitionMethodNotAllowedCode is the HTTP code returned for type UpdateHostIgnitionMethodNotAllowed
const UpdateHostIgnitionMethodNotAllowedCode int = 405

/*UpdateHostIgnitionMethodNotAllowed Method Not Allowed.

swagger:response updateHostIgnitionMethodNotAllowed
*/
type UpdateHostIgnitionMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostIgnitionMethodNotAllowed creates UpdateHostIgnitionMethodNotAllowed with default headers values
func NewUpdateHostIgnitionMethodNotAllowed() *UpdateHostIgnitionMethodNotAllowed {

	return &UpdateHostIgnitionMethodNotAllowed{}
}

// WithPayload adds the payload to the update host ignition method not allowed response
func (o *UpdateHostIgnitionMethodNotAllowed) WithPayload(payload *models.Error) *UpdateHostIgnitionMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host ignition method not allowed response
func (o *UpdateHostIgnitionMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostIgnitionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostIgnitionInternalServerErrorCode is the HTTP code returned for type UpdateHostIgnitionInternalServerError
const UpdateHostIgnitionInternalServerErrorCode int = 500

/*UpdateHostIgnitionInternalServerError Error.

swagger:response updateHostIgnitionInternalServerError
*/
type UpdateHostIgnitionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostIgnitionInternalServerError creates UpdateHostIgnitionInternalServerError with default headers values
func NewUpdateHostIgnitionInternalServerError() *UpdateHostIgnitionInternalServerError {

	return &UpdateHostIgnitionInternalServerError{}
}

// WithPayload adds the payload to the update host ignition internal server error response
func (o *UpdateHostIgnitionInternalServerError) WithPayload(payload *models.Error) *UpdateHostIgnitionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host ignition internal server error response
func (o *UpdateHostIgnitionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostIgnitionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
