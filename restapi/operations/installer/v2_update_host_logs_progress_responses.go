// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateHostLogsProgressNoContentCode is the HTTP code returned for type V2UpdateHostLogsProgressNoContent
const V2UpdateHostLogsProgressNoContentCode int = 204

/*V2UpdateHostLogsProgressNoContent Update cluster install progress.

swagger:response v2UpdateHostLogsProgressNoContent
*/
type V2UpdateHostLogsProgressNoContent struct {
}

// NewV2UpdateHostLogsProgressNoContent creates V2UpdateHostLogsProgressNoContent with default headers values
func NewV2UpdateHostLogsProgressNoContent() *V2UpdateHostLogsProgressNoContent {

	return &V2UpdateHostLogsProgressNoContent{}
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// V2UpdateHostLogsProgressUnauthorizedCode is the HTTP code returned for type V2UpdateHostLogsProgressUnauthorized
const V2UpdateHostLogsProgressUnauthorizedCode int = 401

/*V2UpdateHostLogsProgressUnauthorized Unauthorized.

swagger:response v2UpdateHostLogsProgressUnauthorized
*/
type V2UpdateHostLogsProgressUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateHostLogsProgressUnauthorized creates V2UpdateHostLogsProgressUnauthorized with default headers values
func NewV2UpdateHostLogsProgressUnauthorized() *V2UpdateHostLogsProgressUnauthorized {

	return &V2UpdateHostLogsProgressUnauthorized{}
}

// WithPayload adds the payload to the v2 update host logs progress unauthorized response
func (o *V2UpdateHostLogsProgressUnauthorized) WithPayload(payload *models.InfraError) *V2UpdateHostLogsProgressUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host logs progress unauthorized response
func (o *V2UpdateHostLogsProgressUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostLogsProgressForbiddenCode is the HTTP code returned for type V2UpdateHostLogsProgressForbidden
const V2UpdateHostLogsProgressForbiddenCode int = 403

/*V2UpdateHostLogsProgressForbidden Forbidden.

swagger:response v2UpdateHostLogsProgressForbidden
*/
type V2UpdateHostLogsProgressForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateHostLogsProgressForbidden creates V2UpdateHostLogsProgressForbidden with default headers values
func NewV2UpdateHostLogsProgressForbidden() *V2UpdateHostLogsProgressForbidden {

	return &V2UpdateHostLogsProgressForbidden{}
}

// WithPayload adds the payload to the v2 update host logs progress forbidden response
func (o *V2UpdateHostLogsProgressForbidden) WithPayload(payload *models.InfraError) *V2UpdateHostLogsProgressForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host logs progress forbidden response
func (o *V2UpdateHostLogsProgressForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostLogsProgressNotFoundCode is the HTTP code returned for type V2UpdateHostLogsProgressNotFound
const V2UpdateHostLogsProgressNotFoundCode int = 404

/*V2UpdateHostLogsProgressNotFound Error.

swagger:response v2UpdateHostLogsProgressNotFound
*/
type V2UpdateHostLogsProgressNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostLogsProgressNotFound creates V2UpdateHostLogsProgressNotFound with default headers values
func NewV2UpdateHostLogsProgressNotFound() *V2UpdateHostLogsProgressNotFound {

	return &V2UpdateHostLogsProgressNotFound{}
}

// WithPayload adds the payload to the v2 update host logs progress not found response
func (o *V2UpdateHostLogsProgressNotFound) WithPayload(payload *models.Error) *V2UpdateHostLogsProgressNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host logs progress not found response
func (o *V2UpdateHostLogsProgressNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostLogsProgressMethodNotAllowedCode is the HTTP code returned for type V2UpdateHostLogsProgressMethodNotAllowed
const V2UpdateHostLogsProgressMethodNotAllowedCode int = 405

/*V2UpdateHostLogsProgressMethodNotAllowed Method Not Allowed.

swagger:response v2UpdateHostLogsProgressMethodNotAllowed
*/
type V2UpdateHostLogsProgressMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostLogsProgressMethodNotAllowed creates V2UpdateHostLogsProgressMethodNotAllowed with default headers values
func NewV2UpdateHostLogsProgressMethodNotAllowed() *V2UpdateHostLogsProgressMethodNotAllowed {

	return &V2UpdateHostLogsProgressMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 update host logs progress method not allowed response
func (o *V2UpdateHostLogsProgressMethodNotAllowed) WithPayload(payload *models.Error) *V2UpdateHostLogsProgressMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host logs progress method not allowed response
func (o *V2UpdateHostLogsProgressMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostLogsProgressConflictCode is the HTTP code returned for type V2UpdateHostLogsProgressConflict
const V2UpdateHostLogsProgressConflictCode int = 409

/*V2UpdateHostLogsProgressConflict Error.

swagger:response v2UpdateHostLogsProgressConflict
*/
type V2UpdateHostLogsProgressConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostLogsProgressConflict creates V2UpdateHostLogsProgressConflict with default headers values
func NewV2UpdateHostLogsProgressConflict() *V2UpdateHostLogsProgressConflict {

	return &V2UpdateHostLogsProgressConflict{}
}

// WithPayload adds the payload to the v2 update host logs progress conflict response
func (o *V2UpdateHostLogsProgressConflict) WithPayload(payload *models.Error) *V2UpdateHostLogsProgressConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host logs progress conflict response
func (o *V2UpdateHostLogsProgressConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostLogsProgressInternalServerErrorCode is the HTTP code returned for type V2UpdateHostLogsProgressInternalServerError
const V2UpdateHostLogsProgressInternalServerErrorCode int = 500

/*V2UpdateHostLogsProgressInternalServerError Error.

swagger:response v2UpdateHostLogsProgressInternalServerError
*/
type V2UpdateHostLogsProgressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostLogsProgressInternalServerError creates V2UpdateHostLogsProgressInternalServerError with default headers values
func NewV2UpdateHostLogsProgressInternalServerError() *V2UpdateHostLogsProgressInternalServerError {

	return &V2UpdateHostLogsProgressInternalServerError{}
}

// WithPayload adds the payload to the v2 update host logs progress internal server error response
func (o *V2UpdateHostLogsProgressInternalServerError) WithPayload(payload *models.Error) *V2UpdateHostLogsProgressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host logs progress internal server error response
func (o *V2UpdateHostLogsProgressInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostLogsProgressNotImplementedCode is the HTTP code returned for type V2UpdateHostLogsProgressNotImplemented
const V2UpdateHostLogsProgressNotImplementedCode int = 501

/*V2UpdateHostLogsProgressNotImplemented Not implemented.

swagger:response v2UpdateHostLogsProgressNotImplemented
*/
type V2UpdateHostLogsProgressNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostLogsProgressNotImplemented creates V2UpdateHostLogsProgressNotImplemented with default headers values
func NewV2UpdateHostLogsProgressNotImplemented() *V2UpdateHostLogsProgressNotImplemented {

	return &V2UpdateHostLogsProgressNotImplemented{}
}

// WithPayload adds the payload to the v2 update host logs progress not implemented response
func (o *V2UpdateHostLogsProgressNotImplemented) WithPayload(payload *models.Error) *V2UpdateHostLogsProgressNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host logs progress not implemented response
func (o *V2UpdateHostLogsProgressNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostLogsProgressServiceUnavailableCode is the HTTP code returned for type V2UpdateHostLogsProgressServiceUnavailable
const V2UpdateHostLogsProgressServiceUnavailableCode int = 503

/*V2UpdateHostLogsProgressServiceUnavailable Unavailable.

swagger:response v2UpdateHostLogsProgressServiceUnavailable
*/
type V2UpdateHostLogsProgressServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostLogsProgressServiceUnavailable creates V2UpdateHostLogsProgressServiceUnavailable with default headers values
func NewV2UpdateHostLogsProgressServiceUnavailable() *V2UpdateHostLogsProgressServiceUnavailable {

	return &V2UpdateHostLogsProgressServiceUnavailable{}
}

// WithPayload adds the payload to the v2 update host logs progress service unavailable response
func (o *V2UpdateHostLogsProgressServiceUnavailable) WithPayload(payload *models.Error) *V2UpdateHostLogsProgressServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host logs progress service unavailable response
func (o *V2UpdateHostLogsProgressServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostLogsProgressServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
