// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateHostInstallerArgsCreatedCode is the HTTP code returned for type V2UpdateHostInstallerArgsCreated
const V2UpdateHostInstallerArgsCreatedCode int = 201

/*V2UpdateHostInstallerArgsCreated Success.

swagger:response v2UpdateHostInstallerArgsCreated
*/
type V2UpdateHostInstallerArgsCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Host `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsCreated creates V2UpdateHostInstallerArgsCreated with default headers values
func NewV2UpdateHostInstallerArgsCreated() *V2UpdateHostInstallerArgsCreated {

	return &V2UpdateHostInstallerArgsCreated{}
}

// WithPayload adds the payload to the v2 update host installer args created response
func (o *V2UpdateHostInstallerArgsCreated) WithPayload(payload *models.Host) *V2UpdateHostInstallerArgsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args created response
func (o *V2UpdateHostInstallerArgsCreated) SetPayload(payload *models.Host) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInstallerArgsBadRequestCode is the HTTP code returned for type V2UpdateHostInstallerArgsBadRequest
const V2UpdateHostInstallerArgsBadRequestCode int = 400

/*V2UpdateHostInstallerArgsBadRequest Error.

swagger:response v2UpdateHostInstallerArgsBadRequest
*/
type V2UpdateHostInstallerArgsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsBadRequest creates V2UpdateHostInstallerArgsBadRequest with default headers values
func NewV2UpdateHostInstallerArgsBadRequest() *V2UpdateHostInstallerArgsBadRequest {

	return &V2UpdateHostInstallerArgsBadRequest{}
}

// WithPayload adds the payload to the v2 update host installer args bad request response
func (o *V2UpdateHostInstallerArgsBadRequest) WithPayload(payload *models.Error) *V2UpdateHostInstallerArgsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args bad request response
func (o *V2UpdateHostInstallerArgsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInstallerArgsUnauthorizedCode is the HTTP code returned for type V2UpdateHostInstallerArgsUnauthorized
const V2UpdateHostInstallerArgsUnauthorizedCode int = 401

/*V2UpdateHostInstallerArgsUnauthorized Unauthorized.

swagger:response v2UpdateHostInstallerArgsUnauthorized
*/
type V2UpdateHostInstallerArgsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsUnauthorized creates V2UpdateHostInstallerArgsUnauthorized with default headers values
func NewV2UpdateHostInstallerArgsUnauthorized() *V2UpdateHostInstallerArgsUnauthorized {

	return &V2UpdateHostInstallerArgsUnauthorized{}
}

// WithPayload adds the payload to the v2 update host installer args unauthorized response
func (o *V2UpdateHostInstallerArgsUnauthorized) WithPayload(payload *models.InfraError) *V2UpdateHostInstallerArgsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args unauthorized response
func (o *V2UpdateHostInstallerArgsUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInstallerArgsForbiddenCode is the HTTP code returned for type V2UpdateHostInstallerArgsForbidden
const V2UpdateHostInstallerArgsForbiddenCode int = 403

/*V2UpdateHostInstallerArgsForbidden Forbidden.

swagger:response v2UpdateHostInstallerArgsForbidden
*/
type V2UpdateHostInstallerArgsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsForbidden creates V2UpdateHostInstallerArgsForbidden with default headers values
func NewV2UpdateHostInstallerArgsForbidden() *V2UpdateHostInstallerArgsForbidden {

	return &V2UpdateHostInstallerArgsForbidden{}
}

// WithPayload adds the payload to the v2 update host installer args forbidden response
func (o *V2UpdateHostInstallerArgsForbidden) WithPayload(payload *models.InfraError) *V2UpdateHostInstallerArgsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args forbidden response
func (o *V2UpdateHostInstallerArgsForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInstallerArgsNotFoundCode is the HTTP code returned for type V2UpdateHostInstallerArgsNotFound
const V2UpdateHostInstallerArgsNotFoundCode int = 404

/*V2UpdateHostInstallerArgsNotFound Error.

swagger:response v2UpdateHostInstallerArgsNotFound
*/
type V2UpdateHostInstallerArgsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsNotFound creates V2UpdateHostInstallerArgsNotFound with default headers values
func NewV2UpdateHostInstallerArgsNotFound() *V2UpdateHostInstallerArgsNotFound {

	return &V2UpdateHostInstallerArgsNotFound{}
}

// WithPayload adds the payload to the v2 update host installer args not found response
func (o *V2UpdateHostInstallerArgsNotFound) WithPayload(payload *models.Error) *V2UpdateHostInstallerArgsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args not found response
func (o *V2UpdateHostInstallerArgsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInstallerArgsMethodNotAllowedCode is the HTTP code returned for type V2UpdateHostInstallerArgsMethodNotAllowed
const V2UpdateHostInstallerArgsMethodNotAllowedCode int = 405

/*V2UpdateHostInstallerArgsMethodNotAllowed Method Not Allowed.

swagger:response v2UpdateHostInstallerArgsMethodNotAllowed
*/
type V2UpdateHostInstallerArgsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsMethodNotAllowed creates V2UpdateHostInstallerArgsMethodNotAllowed with default headers values
func NewV2UpdateHostInstallerArgsMethodNotAllowed() *V2UpdateHostInstallerArgsMethodNotAllowed {

	return &V2UpdateHostInstallerArgsMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 update host installer args method not allowed response
func (o *V2UpdateHostInstallerArgsMethodNotAllowed) WithPayload(payload *models.Error) *V2UpdateHostInstallerArgsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args method not allowed response
func (o *V2UpdateHostInstallerArgsMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInstallerArgsConflictCode is the HTTP code returned for type V2UpdateHostInstallerArgsConflict
const V2UpdateHostInstallerArgsConflictCode int = 409

/*V2UpdateHostInstallerArgsConflict Error.

swagger:response v2UpdateHostInstallerArgsConflict
*/
type V2UpdateHostInstallerArgsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsConflict creates V2UpdateHostInstallerArgsConflict with default headers values
func NewV2UpdateHostInstallerArgsConflict() *V2UpdateHostInstallerArgsConflict {

	return &V2UpdateHostInstallerArgsConflict{}
}

// WithPayload adds the payload to the v2 update host installer args conflict response
func (o *V2UpdateHostInstallerArgsConflict) WithPayload(payload *models.Error) *V2UpdateHostInstallerArgsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args conflict response
func (o *V2UpdateHostInstallerArgsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInstallerArgsInternalServerErrorCode is the HTTP code returned for type V2UpdateHostInstallerArgsInternalServerError
const V2UpdateHostInstallerArgsInternalServerErrorCode int = 500

/*V2UpdateHostInstallerArgsInternalServerError Error.

swagger:response v2UpdateHostInstallerArgsInternalServerError
*/
type V2UpdateHostInstallerArgsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsInternalServerError creates V2UpdateHostInstallerArgsInternalServerError with default headers values
func NewV2UpdateHostInstallerArgsInternalServerError() *V2UpdateHostInstallerArgsInternalServerError {

	return &V2UpdateHostInstallerArgsInternalServerError{}
}

// WithPayload adds the payload to the v2 update host installer args internal server error response
func (o *V2UpdateHostInstallerArgsInternalServerError) WithPayload(payload *models.Error) *V2UpdateHostInstallerArgsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args internal server error response
func (o *V2UpdateHostInstallerArgsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInstallerArgsNotImplementedCode is the HTTP code returned for type V2UpdateHostInstallerArgsNotImplemented
const V2UpdateHostInstallerArgsNotImplementedCode int = 501

/*V2UpdateHostInstallerArgsNotImplemented Not implemented.

swagger:response v2UpdateHostInstallerArgsNotImplemented
*/
type V2UpdateHostInstallerArgsNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostInstallerArgsNotImplemented creates V2UpdateHostInstallerArgsNotImplemented with default headers values
func NewV2UpdateHostInstallerArgsNotImplemented() *V2UpdateHostInstallerArgsNotImplemented {

	return &V2UpdateHostInstallerArgsNotImplemented{}
}

// WithPayload adds the payload to the v2 update host installer args not implemented response
func (o *V2UpdateHostInstallerArgsNotImplemented) WithPayload(payload *models.Error) *V2UpdateHostInstallerArgsNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host installer args not implemented response
func (o *V2UpdateHostInstallerArgsNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInstallerArgsNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
