// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// TransformClusterToDay2AcceptedCode is the HTTP code returned for type TransformClusterToDay2Accepted
const TransformClusterToDay2AcceptedCode int = 202

/*TransformClusterToDay2Accepted Success.

swagger:response transformClusterToDay2Accepted
*/
type TransformClusterToDay2Accepted struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewTransformClusterToDay2Accepted creates TransformClusterToDay2Accepted with default headers values
func NewTransformClusterToDay2Accepted() *TransformClusterToDay2Accepted {

	return &TransformClusterToDay2Accepted{}
}

// WithPayload adds the payload to the transform cluster to day2 accepted response
func (o *TransformClusterToDay2Accepted) WithPayload(payload *models.Cluster) *TransformClusterToDay2Accepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the transform cluster to day2 accepted response
func (o *TransformClusterToDay2Accepted) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TransformClusterToDay2Accepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TransformClusterToDay2UnauthorizedCode is the HTTP code returned for type TransformClusterToDay2Unauthorized
const TransformClusterToDay2UnauthorizedCode int = 401

/*TransformClusterToDay2Unauthorized Unauthorized.

swagger:response transformClusterToDay2Unauthorized
*/
type TransformClusterToDay2Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewTransformClusterToDay2Unauthorized creates TransformClusterToDay2Unauthorized with default headers values
func NewTransformClusterToDay2Unauthorized() *TransformClusterToDay2Unauthorized {

	return &TransformClusterToDay2Unauthorized{}
}

// WithPayload adds the payload to the transform cluster to day2 unauthorized response
func (o *TransformClusterToDay2Unauthorized) WithPayload(payload *models.InfraError) *TransformClusterToDay2Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the transform cluster to day2 unauthorized response
func (o *TransformClusterToDay2Unauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TransformClusterToDay2Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TransformClusterToDay2ForbiddenCode is the HTTP code returned for type TransformClusterToDay2Forbidden
const TransformClusterToDay2ForbiddenCode int = 403

/*TransformClusterToDay2Forbidden Forbidden.

swagger:response transformClusterToDay2Forbidden
*/
type TransformClusterToDay2Forbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewTransformClusterToDay2Forbidden creates TransformClusterToDay2Forbidden with default headers values
func NewTransformClusterToDay2Forbidden() *TransformClusterToDay2Forbidden {

	return &TransformClusterToDay2Forbidden{}
}

// WithPayload adds the payload to the transform cluster to day2 forbidden response
func (o *TransformClusterToDay2Forbidden) WithPayload(payload *models.InfraError) *TransformClusterToDay2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the transform cluster to day2 forbidden response
func (o *TransformClusterToDay2Forbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TransformClusterToDay2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TransformClusterToDay2NotFoundCode is the HTTP code returned for type TransformClusterToDay2NotFound
const TransformClusterToDay2NotFoundCode int = 404

/*TransformClusterToDay2NotFound Error.

swagger:response transformClusterToDay2NotFound
*/
type TransformClusterToDay2NotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTransformClusterToDay2NotFound creates TransformClusterToDay2NotFound with default headers values
func NewTransformClusterToDay2NotFound() *TransformClusterToDay2NotFound {

	return &TransformClusterToDay2NotFound{}
}

// WithPayload adds the payload to the transform cluster to day2 not found response
func (o *TransformClusterToDay2NotFound) WithPayload(payload *models.Error) *TransformClusterToDay2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the transform cluster to day2 not found response
func (o *TransformClusterToDay2NotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TransformClusterToDay2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TransformClusterToDay2MethodNotAllowedCode is the HTTP code returned for type TransformClusterToDay2MethodNotAllowed
const TransformClusterToDay2MethodNotAllowedCode int = 405

/*TransformClusterToDay2MethodNotAllowed Method Not Allowed.

swagger:response transformClusterToDay2MethodNotAllowed
*/
type TransformClusterToDay2MethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTransformClusterToDay2MethodNotAllowed creates TransformClusterToDay2MethodNotAllowed with default headers values
func NewTransformClusterToDay2MethodNotAllowed() *TransformClusterToDay2MethodNotAllowed {

	return &TransformClusterToDay2MethodNotAllowed{}
}

// WithPayload adds the payload to the transform cluster to day2 method not allowed response
func (o *TransformClusterToDay2MethodNotAllowed) WithPayload(payload *models.Error) *TransformClusterToDay2MethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the transform cluster to day2 method not allowed response
func (o *TransformClusterToDay2MethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TransformClusterToDay2MethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TransformClusterToDay2ConflictCode is the HTTP code returned for type TransformClusterToDay2Conflict
const TransformClusterToDay2ConflictCode int = 409

/*TransformClusterToDay2Conflict Error.

swagger:response transformClusterToDay2Conflict
*/
type TransformClusterToDay2Conflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTransformClusterToDay2Conflict creates TransformClusterToDay2Conflict with default headers values
func NewTransformClusterToDay2Conflict() *TransformClusterToDay2Conflict {

	return &TransformClusterToDay2Conflict{}
}

// WithPayload adds the payload to the transform cluster to day2 conflict response
func (o *TransformClusterToDay2Conflict) WithPayload(payload *models.Error) *TransformClusterToDay2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the transform cluster to day2 conflict response
func (o *TransformClusterToDay2Conflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TransformClusterToDay2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TransformClusterToDay2InternalServerErrorCode is the HTTP code returned for type TransformClusterToDay2InternalServerError
const TransformClusterToDay2InternalServerErrorCode int = 500

/*TransformClusterToDay2InternalServerError Error.

swagger:response transformClusterToDay2InternalServerError
*/
type TransformClusterToDay2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTransformClusterToDay2InternalServerError creates TransformClusterToDay2InternalServerError with default headers values
func NewTransformClusterToDay2InternalServerError() *TransformClusterToDay2InternalServerError {

	return &TransformClusterToDay2InternalServerError{}
}

// WithPayload adds the payload to the transform cluster to day2 internal server error response
func (o *TransformClusterToDay2InternalServerError) WithPayload(payload *models.Error) *TransformClusterToDay2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the transform cluster to day2 internal server error response
func (o *TransformClusterToDay2InternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TransformClusterToDay2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
