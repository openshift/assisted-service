// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// DownloadClusterISOCloneOKCode is the HTTP code returned for type DownloadClusterISOCloneOK
const DownloadClusterISOCloneOKCode int = 200

/*DownloadClusterISOCloneOK Success.

swagger:response downloadClusterISOCloneOK
*/
type DownloadClusterISOCloneOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewDownloadClusterISOCloneOK creates DownloadClusterISOCloneOK with default headers values
func NewDownloadClusterISOCloneOK() *DownloadClusterISOCloneOK {

	return &DownloadClusterISOCloneOK{}
}

// WithPayload adds the payload to the download cluster i s o clone o k response
func (o *DownloadClusterISOCloneOK) WithPayload(payload io.ReadCloser) *DownloadClusterISOCloneOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster i s o clone o k response
func (o *DownloadClusterISOCloneOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterISOCloneOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DownloadClusterISOCloneBadRequestCode is the HTTP code returned for type DownloadClusterISOCloneBadRequest
const DownloadClusterISOCloneBadRequestCode int = 400

/*DownloadClusterISOCloneBadRequest Error.

swagger:response downloadClusterISOCloneBadRequest
*/
type DownloadClusterISOCloneBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterISOCloneBadRequest creates DownloadClusterISOCloneBadRequest with default headers values
func NewDownloadClusterISOCloneBadRequest() *DownloadClusterISOCloneBadRequest {

	return &DownloadClusterISOCloneBadRequest{}
}

// WithPayload adds the payload to the download cluster i s o clone bad request response
func (o *DownloadClusterISOCloneBadRequest) WithPayload(payload *models.Error) *DownloadClusterISOCloneBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster i s o clone bad request response
func (o *DownloadClusterISOCloneBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterISOCloneBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterISOCloneUnauthorizedCode is the HTTP code returned for type DownloadClusterISOCloneUnauthorized
const DownloadClusterISOCloneUnauthorizedCode int = 401

/*DownloadClusterISOCloneUnauthorized Unauthorized.

swagger:response downloadClusterISOCloneUnauthorized
*/
type DownloadClusterISOCloneUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDownloadClusterISOCloneUnauthorized creates DownloadClusterISOCloneUnauthorized with default headers values
func NewDownloadClusterISOCloneUnauthorized() *DownloadClusterISOCloneUnauthorized {

	return &DownloadClusterISOCloneUnauthorized{}
}

// WithPayload adds the payload to the download cluster i s o clone unauthorized response
func (o *DownloadClusterISOCloneUnauthorized) WithPayload(payload *models.InfraError) *DownloadClusterISOCloneUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster i s o clone unauthorized response
func (o *DownloadClusterISOCloneUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterISOCloneUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterISOCloneForbiddenCode is the HTTP code returned for type DownloadClusterISOCloneForbidden
const DownloadClusterISOCloneForbiddenCode int = 403

/*DownloadClusterISOCloneForbidden Forbidden.

swagger:response downloadClusterISOCloneForbidden
*/
type DownloadClusterISOCloneForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDownloadClusterISOCloneForbidden creates DownloadClusterISOCloneForbidden with default headers values
func NewDownloadClusterISOCloneForbidden() *DownloadClusterISOCloneForbidden {

	return &DownloadClusterISOCloneForbidden{}
}

// WithPayload adds the payload to the download cluster i s o clone forbidden response
func (o *DownloadClusterISOCloneForbidden) WithPayload(payload *models.InfraError) *DownloadClusterISOCloneForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster i s o clone forbidden response
func (o *DownloadClusterISOCloneForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterISOCloneForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterISOCloneNotFoundCode is the HTTP code returned for type DownloadClusterISOCloneNotFound
const DownloadClusterISOCloneNotFoundCode int = 404

/*DownloadClusterISOCloneNotFound Error.

swagger:response downloadClusterISOCloneNotFound
*/
type DownloadClusterISOCloneNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterISOCloneNotFound creates DownloadClusterISOCloneNotFound with default headers values
func NewDownloadClusterISOCloneNotFound() *DownloadClusterISOCloneNotFound {

	return &DownloadClusterISOCloneNotFound{}
}

// WithPayload adds the payload to the download cluster i s o clone not found response
func (o *DownloadClusterISOCloneNotFound) WithPayload(payload *models.Error) *DownloadClusterISOCloneNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster i s o clone not found response
func (o *DownloadClusterISOCloneNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterISOCloneNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterISOCloneMethodNotAllowedCode is the HTTP code returned for type DownloadClusterISOCloneMethodNotAllowed
const DownloadClusterISOCloneMethodNotAllowedCode int = 405

/*DownloadClusterISOCloneMethodNotAllowed Method Not Allowed.

swagger:response downloadClusterISOCloneMethodNotAllowed
*/
type DownloadClusterISOCloneMethodNotAllowed struct {
}

// NewDownloadClusterISOCloneMethodNotAllowed creates DownloadClusterISOCloneMethodNotAllowed with default headers values
func NewDownloadClusterISOCloneMethodNotAllowed() *DownloadClusterISOCloneMethodNotAllowed {

	return &DownloadClusterISOCloneMethodNotAllowed{}
}

// WriteResponse to the client
func (o *DownloadClusterISOCloneMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

// DownloadClusterISOCloneConflictCode is the HTTP code returned for type DownloadClusterISOCloneConflict
const DownloadClusterISOCloneConflictCode int = 409

/*DownloadClusterISOCloneConflict Error.

swagger:response downloadClusterISOCloneConflict
*/
type DownloadClusterISOCloneConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterISOCloneConflict creates DownloadClusterISOCloneConflict with default headers values
func NewDownloadClusterISOCloneConflict() *DownloadClusterISOCloneConflict {

	return &DownloadClusterISOCloneConflict{}
}

// WithPayload adds the payload to the download cluster i s o clone conflict response
func (o *DownloadClusterISOCloneConflict) WithPayload(payload *models.Error) *DownloadClusterISOCloneConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster i s o clone conflict response
func (o *DownloadClusterISOCloneConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterISOCloneConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterISOCloneInternalServerErrorCode is the HTTP code returned for type DownloadClusterISOCloneInternalServerError
const DownloadClusterISOCloneInternalServerErrorCode int = 500

/*DownloadClusterISOCloneInternalServerError Error.

swagger:response downloadClusterISOCloneInternalServerError
*/
type DownloadClusterISOCloneInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterISOCloneInternalServerError creates DownloadClusterISOCloneInternalServerError with default headers values
func NewDownloadClusterISOCloneInternalServerError() *DownloadClusterISOCloneInternalServerError {

	return &DownloadClusterISOCloneInternalServerError{}
}

// WithPayload adds the payload to the download cluster i s o clone internal server error response
func (o *DownloadClusterISOCloneInternalServerError) WithPayload(payload *models.Error) *DownloadClusterISOCloneInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster i s o clone internal server error response
func (o *DownloadClusterISOCloneInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterISOCloneInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
