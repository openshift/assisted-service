// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// InstallHostAcceptedCode is the HTTP code returned for type InstallHostAccepted
const InstallHostAcceptedCode int = 202

/*InstallHostAccepted Success.

swagger:response installHostAccepted
*/
type InstallHostAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.Host `json:"body,omitempty"`
}

// NewInstallHostAccepted creates InstallHostAccepted with default headers values
func NewInstallHostAccepted() *InstallHostAccepted {

	return &InstallHostAccepted{}
}

// WithPayload adds the payload to the install host accepted response
func (o *InstallHostAccepted) WithPayload(payload *models.Host) *InstallHostAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install host accepted response
func (o *InstallHostAccepted) SetPayload(payload *models.Host) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostUnauthorizedCode is the HTTP code returned for type InstallHostUnauthorized
const InstallHostUnauthorizedCode int = 401

/*InstallHostUnauthorized Unauthorized.

swagger:response installHostUnauthorized
*/
type InstallHostUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewInstallHostUnauthorized creates InstallHostUnauthorized with default headers values
func NewInstallHostUnauthorized() *InstallHostUnauthorized {

	return &InstallHostUnauthorized{}
}

// WithPayload adds the payload to the install host unauthorized response
func (o *InstallHostUnauthorized) WithPayload(payload *models.InfraError) *InstallHostUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install host unauthorized response
func (o *InstallHostUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostForbiddenCode is the HTTP code returned for type InstallHostForbidden
const InstallHostForbiddenCode int = 403

/*InstallHostForbidden Forbidden.

swagger:response installHostForbidden
*/
type InstallHostForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewInstallHostForbidden creates InstallHostForbidden with default headers values
func NewInstallHostForbidden() *InstallHostForbidden {

	return &InstallHostForbidden{}
}

// WithPayload adds the payload to the install host forbidden response
func (o *InstallHostForbidden) WithPayload(payload *models.InfraError) *InstallHostForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install host forbidden response
func (o *InstallHostForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostNotFoundCode is the HTTP code returned for type InstallHostNotFound
const InstallHostNotFoundCode int = 404

/*InstallHostNotFound Error.

swagger:response installHostNotFound
*/
type InstallHostNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInstallHostNotFound creates InstallHostNotFound with default headers values
func NewInstallHostNotFound() *InstallHostNotFound {

	return &InstallHostNotFound{}
}

// WithPayload adds the payload to the install host not found response
func (o *InstallHostNotFound) WithPayload(payload *models.Error) *InstallHostNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install host not found response
func (o *InstallHostNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostConflictCode is the HTTP code returned for type InstallHostConflict
const InstallHostConflictCode int = 409

/*InstallHostConflict Error.

swagger:response installHostConflict
*/
type InstallHostConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInstallHostConflict creates InstallHostConflict with default headers values
func NewInstallHostConflict() *InstallHostConflict {

	return &InstallHostConflict{}
}

// WithPayload adds the payload to the install host conflict response
func (o *InstallHostConflict) WithPayload(payload *models.Error) *InstallHostConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install host conflict response
func (o *InstallHostConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostInternalServerErrorCode is the HTTP code returned for type InstallHostInternalServerError
const InstallHostInternalServerErrorCode int = 500

/*InstallHostInternalServerError Error.

swagger:response installHostInternalServerError
*/
type InstallHostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInstallHostInternalServerError creates InstallHostInternalServerError with default headers values
func NewInstallHostInternalServerError() *InstallHostInternalServerError {

	return &InstallHostInternalServerError{}
}

// WithPayload adds the payload to the install host internal server error response
func (o *InstallHostInternalServerError) WithPayload(payload *models.Error) *InstallHostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install host internal server error response
func (o *InstallHostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
