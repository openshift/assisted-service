// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// GetHostIgnitionOKCode is the HTTP code returned for type GetHostIgnitionOK
const GetHostIgnitionOKCode int = 200

/*GetHostIgnitionOK Success.

swagger:response getHostIgnitionOK
*/
type GetHostIgnitionOK struct {

	/*
	  In: Body
	*/
	Payload *models.HostIgnitionParams `json:"body,omitempty"`
}

// NewGetHostIgnitionOK creates GetHostIgnitionOK with default headers values
func NewGetHostIgnitionOK() *GetHostIgnitionOK {

	return &GetHostIgnitionOK{}
}

// WithPayload adds the payload to the get host ignition o k response
func (o *GetHostIgnitionOK) WithPayload(payload *models.HostIgnitionParams) *GetHostIgnitionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get host ignition o k response
func (o *GetHostIgnitionOK) SetPayload(payload *models.HostIgnitionParams) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHostIgnitionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHostIgnitionUnauthorizedCode is the HTTP code returned for type GetHostIgnitionUnauthorized
const GetHostIgnitionUnauthorizedCode int = 401

/*GetHostIgnitionUnauthorized Unauthorized.

swagger:response getHostIgnitionUnauthorized
*/
type GetHostIgnitionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetHostIgnitionUnauthorized creates GetHostIgnitionUnauthorized with default headers values
func NewGetHostIgnitionUnauthorized() *GetHostIgnitionUnauthorized {

	return &GetHostIgnitionUnauthorized{}
}

// WithPayload adds the payload to the get host ignition unauthorized response
func (o *GetHostIgnitionUnauthorized) WithPayload(payload *models.InfraError) *GetHostIgnitionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get host ignition unauthorized response
func (o *GetHostIgnitionUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHostIgnitionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHostIgnitionForbiddenCode is the HTTP code returned for type GetHostIgnitionForbidden
const GetHostIgnitionForbiddenCode int = 403

/*GetHostIgnitionForbidden Forbidden.

swagger:response getHostIgnitionForbidden
*/
type GetHostIgnitionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetHostIgnitionForbidden creates GetHostIgnitionForbidden with default headers values
func NewGetHostIgnitionForbidden() *GetHostIgnitionForbidden {

	return &GetHostIgnitionForbidden{}
}

// WithPayload adds the payload to the get host ignition forbidden response
func (o *GetHostIgnitionForbidden) WithPayload(payload *models.InfraError) *GetHostIgnitionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get host ignition forbidden response
func (o *GetHostIgnitionForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHostIgnitionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHostIgnitionNotFoundCode is the HTTP code returned for type GetHostIgnitionNotFound
const GetHostIgnitionNotFoundCode int = 404

/*GetHostIgnitionNotFound Error.

swagger:response getHostIgnitionNotFound
*/
type GetHostIgnitionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetHostIgnitionNotFound creates GetHostIgnitionNotFound with default headers values
func NewGetHostIgnitionNotFound() *GetHostIgnitionNotFound {

	return &GetHostIgnitionNotFound{}
}

// WithPayload adds the payload to the get host ignition not found response
func (o *GetHostIgnitionNotFound) WithPayload(payload *models.Error) *GetHostIgnitionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get host ignition not found response
func (o *GetHostIgnitionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHostIgnitionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHostIgnitionMethodNotAllowedCode is the HTTP code returned for type GetHostIgnitionMethodNotAllowed
const GetHostIgnitionMethodNotAllowedCode int = 405

/*GetHostIgnitionMethodNotAllowed Method Not Allowed.

swagger:response getHostIgnitionMethodNotAllowed
*/
type GetHostIgnitionMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetHostIgnitionMethodNotAllowed creates GetHostIgnitionMethodNotAllowed with default headers values
func NewGetHostIgnitionMethodNotAllowed() *GetHostIgnitionMethodNotAllowed {

	return &GetHostIgnitionMethodNotAllowed{}
}

// WithPayload adds the payload to the get host ignition method not allowed response
func (o *GetHostIgnitionMethodNotAllowed) WithPayload(payload *models.Error) *GetHostIgnitionMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get host ignition method not allowed response
func (o *GetHostIgnitionMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHostIgnitionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHostIgnitionConflictCode is the HTTP code returned for type GetHostIgnitionConflict
const GetHostIgnitionConflictCode int = 409

/*GetHostIgnitionConflict Error.

swagger:response getHostIgnitionConflict
*/
type GetHostIgnitionConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetHostIgnitionConflict creates GetHostIgnitionConflict with default headers values
func NewGetHostIgnitionConflict() *GetHostIgnitionConflict {

	return &GetHostIgnitionConflict{}
}

// WithPayload adds the payload to the get host ignition conflict response
func (o *GetHostIgnitionConflict) WithPayload(payload *models.Error) *GetHostIgnitionConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get host ignition conflict response
func (o *GetHostIgnitionConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHostIgnitionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHostIgnitionInternalServerErrorCode is the HTTP code returned for type GetHostIgnitionInternalServerError
const GetHostIgnitionInternalServerErrorCode int = 500

/*GetHostIgnitionInternalServerError Error.

swagger:response getHostIgnitionInternalServerError
*/
type GetHostIgnitionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetHostIgnitionInternalServerError creates GetHostIgnitionInternalServerError with default headers values
func NewGetHostIgnitionInternalServerError() *GetHostIgnitionInternalServerError {

	return &GetHostIgnitionInternalServerError{}
}

// WithPayload adds the payload to the get host ignition internal server error response
func (o *GetHostIgnitionInternalServerError) WithPayload(payload *models.Error) *GetHostIgnitionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get host ignition internal server error response
func (o *GetHostIgnitionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHostIgnitionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
