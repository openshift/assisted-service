// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// RegisterInfraEnvCreatedCode is the HTTP code returned for type RegisterInfraEnvCreated
const RegisterInfraEnvCreatedCode int = 201

/*RegisterInfraEnvCreated Success.

swagger:response registerInfraEnvCreated
*/
type RegisterInfraEnvCreated struct {

	/*
	  In: Body
	*/
	Payload *models.InfraEnv `json:"body,omitempty"`
}

// NewRegisterInfraEnvCreated creates RegisterInfraEnvCreated with default headers values
func NewRegisterInfraEnvCreated() *RegisterInfraEnvCreated {

	return &RegisterInfraEnvCreated{}
}

// WithPayload adds the payload to the register infra env created response
func (o *RegisterInfraEnvCreated) WithPayload(payload *models.InfraEnv) *RegisterInfraEnvCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env created response
func (o *RegisterInfraEnvCreated) SetPayload(payload *models.InfraEnv) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInfraEnvBadRequestCode is the HTTP code returned for type RegisterInfraEnvBadRequest
const RegisterInfraEnvBadRequestCode int = 400

/*RegisterInfraEnvBadRequest Error.

swagger:response registerInfraEnvBadRequest
*/
type RegisterInfraEnvBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterInfraEnvBadRequest creates RegisterInfraEnvBadRequest with default headers values
func NewRegisterInfraEnvBadRequest() *RegisterInfraEnvBadRequest {

	return &RegisterInfraEnvBadRequest{}
}

// WithPayload adds the payload to the register infra env bad request response
func (o *RegisterInfraEnvBadRequest) WithPayload(payload *models.Error) *RegisterInfraEnvBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env bad request response
func (o *RegisterInfraEnvBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInfraEnvUnauthorizedCode is the HTTP code returned for type RegisterInfraEnvUnauthorized
const RegisterInfraEnvUnauthorizedCode int = 401

/*RegisterInfraEnvUnauthorized Unauthorized.

swagger:response registerInfraEnvUnauthorized
*/
type RegisterInfraEnvUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewRegisterInfraEnvUnauthorized creates RegisterInfraEnvUnauthorized with default headers values
func NewRegisterInfraEnvUnauthorized() *RegisterInfraEnvUnauthorized {

	return &RegisterInfraEnvUnauthorized{}
}

// WithPayload adds the payload to the register infra env unauthorized response
func (o *RegisterInfraEnvUnauthorized) WithPayload(payload *models.InfraError) *RegisterInfraEnvUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env unauthorized response
func (o *RegisterInfraEnvUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInfraEnvForbiddenCode is the HTTP code returned for type RegisterInfraEnvForbidden
const RegisterInfraEnvForbiddenCode int = 403

/*RegisterInfraEnvForbidden Forbidden.

swagger:response registerInfraEnvForbidden
*/
type RegisterInfraEnvForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewRegisterInfraEnvForbidden creates RegisterInfraEnvForbidden with default headers values
func NewRegisterInfraEnvForbidden() *RegisterInfraEnvForbidden {

	return &RegisterInfraEnvForbidden{}
}

// WithPayload adds the payload to the register infra env forbidden response
func (o *RegisterInfraEnvForbidden) WithPayload(payload *models.InfraError) *RegisterInfraEnvForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env forbidden response
func (o *RegisterInfraEnvForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInfraEnvNotFoundCode is the HTTP code returned for type RegisterInfraEnvNotFound
const RegisterInfraEnvNotFoundCode int = 404

/*RegisterInfraEnvNotFound Error.

swagger:response registerInfraEnvNotFound
*/
type RegisterInfraEnvNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterInfraEnvNotFound creates RegisterInfraEnvNotFound with default headers values
func NewRegisterInfraEnvNotFound() *RegisterInfraEnvNotFound {

	return &RegisterInfraEnvNotFound{}
}

// WithPayload adds the payload to the register infra env not found response
func (o *RegisterInfraEnvNotFound) WithPayload(payload *models.Error) *RegisterInfraEnvNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env not found response
func (o *RegisterInfraEnvNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInfraEnvMethodNotAllowedCode is the HTTP code returned for type RegisterInfraEnvMethodNotAllowed
const RegisterInfraEnvMethodNotAllowedCode int = 405

/*RegisterInfraEnvMethodNotAllowed Method Not Allowed.

swagger:response registerInfraEnvMethodNotAllowed
*/
type RegisterInfraEnvMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterInfraEnvMethodNotAllowed creates RegisterInfraEnvMethodNotAllowed with default headers values
func NewRegisterInfraEnvMethodNotAllowed() *RegisterInfraEnvMethodNotAllowed {

	return &RegisterInfraEnvMethodNotAllowed{}
}

// WithPayload adds the payload to the register infra env method not allowed response
func (o *RegisterInfraEnvMethodNotAllowed) WithPayload(payload *models.Error) *RegisterInfraEnvMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env method not allowed response
func (o *RegisterInfraEnvMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInfraEnvConflictCode is the HTTP code returned for type RegisterInfraEnvConflict
const RegisterInfraEnvConflictCode int = 409

/*RegisterInfraEnvConflict Error.

swagger:response registerInfraEnvConflict
*/
type RegisterInfraEnvConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterInfraEnvConflict creates RegisterInfraEnvConflict with default headers values
func NewRegisterInfraEnvConflict() *RegisterInfraEnvConflict {

	return &RegisterInfraEnvConflict{}
}

// WithPayload adds the payload to the register infra env conflict response
func (o *RegisterInfraEnvConflict) WithPayload(payload *models.Error) *RegisterInfraEnvConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env conflict response
func (o *RegisterInfraEnvConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInfraEnvInternalServerErrorCode is the HTTP code returned for type RegisterInfraEnvInternalServerError
const RegisterInfraEnvInternalServerErrorCode int = 500

/*RegisterInfraEnvInternalServerError Error.

swagger:response registerInfraEnvInternalServerError
*/
type RegisterInfraEnvInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterInfraEnvInternalServerError creates RegisterInfraEnvInternalServerError with default headers values
func NewRegisterInfraEnvInternalServerError() *RegisterInfraEnvInternalServerError {

	return &RegisterInfraEnvInternalServerError{}
}

// WithPayload adds the payload to the register infra env internal server error response
func (o *RegisterInfraEnvInternalServerError) WithPayload(payload *models.Error) *RegisterInfraEnvInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env internal server error response
func (o *RegisterInfraEnvInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterInfraEnvNotImplementedCode is the HTTP code returned for type RegisterInfraEnvNotImplemented
const RegisterInfraEnvNotImplementedCode int = 501

/*RegisterInfraEnvNotImplemented Not implemented.

swagger:response registerInfraEnvNotImplemented
*/
type RegisterInfraEnvNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterInfraEnvNotImplemented creates RegisterInfraEnvNotImplemented with default headers values
func NewRegisterInfraEnvNotImplemented() *RegisterInfraEnvNotImplemented {

	return &RegisterInfraEnvNotImplemented{}
}

// WithPayload adds the payload to the register infra env not implemented response
func (o *RegisterInfraEnvNotImplemented) WithPayload(payload *models.Error) *RegisterInfraEnvNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register infra env not implemented response
func (o *RegisterInfraEnvNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterInfraEnvNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
