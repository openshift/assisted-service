// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// GetInfraEnvDownloadURLOKCode is the HTTP code returned for type GetInfraEnvDownloadURLOK
const GetInfraEnvDownloadURLOKCode int = 200

/*GetInfraEnvDownloadURLOK Success.

swagger:response getInfraEnvDownloadUrlOK
*/
type GetInfraEnvDownloadURLOK struct {

	/*
	  In: Body
	*/
	Payload *models.PresignedURL `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLOK creates GetInfraEnvDownloadURLOK with default headers values
func NewGetInfraEnvDownloadURLOK() *GetInfraEnvDownloadURLOK {

	return &GetInfraEnvDownloadURLOK{}
}

// WithPayload adds the payload to the get infra env download Url o k response
func (o *GetInfraEnvDownloadURLOK) WithPayload(payload *models.PresignedURL) *GetInfraEnvDownloadURLOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url o k response
func (o *GetInfraEnvDownloadURLOK) SetPayload(payload *models.PresignedURL) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInfraEnvDownloadURLBadRequestCode is the HTTP code returned for type GetInfraEnvDownloadURLBadRequest
const GetInfraEnvDownloadURLBadRequestCode int = 400

/*GetInfraEnvDownloadURLBadRequest Bad Request.

swagger:response getInfraEnvDownloadUrlBadRequest
*/
type GetInfraEnvDownloadURLBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLBadRequest creates GetInfraEnvDownloadURLBadRequest with default headers values
func NewGetInfraEnvDownloadURLBadRequest() *GetInfraEnvDownloadURLBadRequest {

	return &GetInfraEnvDownloadURLBadRequest{}
}

// WithPayload adds the payload to the get infra env download Url bad request response
func (o *GetInfraEnvDownloadURLBadRequest) WithPayload(payload *models.Error) *GetInfraEnvDownloadURLBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url bad request response
func (o *GetInfraEnvDownloadURLBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInfraEnvDownloadURLUnauthorizedCode is the HTTP code returned for type GetInfraEnvDownloadURLUnauthorized
const GetInfraEnvDownloadURLUnauthorizedCode int = 401

/*GetInfraEnvDownloadURLUnauthorized Unauthorized.

swagger:response getInfraEnvDownloadUrlUnauthorized
*/
type GetInfraEnvDownloadURLUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLUnauthorized creates GetInfraEnvDownloadURLUnauthorized with default headers values
func NewGetInfraEnvDownloadURLUnauthorized() *GetInfraEnvDownloadURLUnauthorized {

	return &GetInfraEnvDownloadURLUnauthorized{}
}

// WithPayload adds the payload to the get infra env download Url unauthorized response
func (o *GetInfraEnvDownloadURLUnauthorized) WithPayload(payload *models.InfraError) *GetInfraEnvDownloadURLUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url unauthorized response
func (o *GetInfraEnvDownloadURLUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInfraEnvDownloadURLForbiddenCode is the HTTP code returned for type GetInfraEnvDownloadURLForbidden
const GetInfraEnvDownloadURLForbiddenCode int = 403

/*GetInfraEnvDownloadURLForbidden Forbidden.

swagger:response getInfraEnvDownloadUrlForbidden
*/
type GetInfraEnvDownloadURLForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLForbidden creates GetInfraEnvDownloadURLForbidden with default headers values
func NewGetInfraEnvDownloadURLForbidden() *GetInfraEnvDownloadURLForbidden {

	return &GetInfraEnvDownloadURLForbidden{}
}

// WithPayload adds the payload to the get infra env download Url forbidden response
func (o *GetInfraEnvDownloadURLForbidden) WithPayload(payload *models.InfraError) *GetInfraEnvDownloadURLForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url forbidden response
func (o *GetInfraEnvDownloadURLForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInfraEnvDownloadURLNotFoundCode is the HTTP code returned for type GetInfraEnvDownloadURLNotFound
const GetInfraEnvDownloadURLNotFoundCode int = 404

/*GetInfraEnvDownloadURLNotFound Error.

swagger:response getInfraEnvDownloadUrlNotFound
*/
type GetInfraEnvDownloadURLNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLNotFound creates GetInfraEnvDownloadURLNotFound with default headers values
func NewGetInfraEnvDownloadURLNotFound() *GetInfraEnvDownloadURLNotFound {

	return &GetInfraEnvDownloadURLNotFound{}
}

// WithPayload adds the payload to the get infra env download Url not found response
func (o *GetInfraEnvDownloadURLNotFound) WithPayload(payload *models.Error) *GetInfraEnvDownloadURLNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url not found response
func (o *GetInfraEnvDownloadURLNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInfraEnvDownloadURLMethodNotAllowedCode is the HTTP code returned for type GetInfraEnvDownloadURLMethodNotAllowed
const GetInfraEnvDownloadURLMethodNotAllowedCode int = 405

/*GetInfraEnvDownloadURLMethodNotAllowed Method Not Allowed.

swagger:response getInfraEnvDownloadUrlMethodNotAllowed
*/
type GetInfraEnvDownloadURLMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLMethodNotAllowed creates GetInfraEnvDownloadURLMethodNotAllowed with default headers values
func NewGetInfraEnvDownloadURLMethodNotAllowed() *GetInfraEnvDownloadURLMethodNotAllowed {

	return &GetInfraEnvDownloadURLMethodNotAllowed{}
}

// WithPayload adds the payload to the get infra env download Url method not allowed response
func (o *GetInfraEnvDownloadURLMethodNotAllowed) WithPayload(payload *models.Error) *GetInfraEnvDownloadURLMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url method not allowed response
func (o *GetInfraEnvDownloadURLMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInfraEnvDownloadURLInternalServerErrorCode is the HTTP code returned for type GetInfraEnvDownloadURLInternalServerError
const GetInfraEnvDownloadURLInternalServerErrorCode int = 500

/*GetInfraEnvDownloadURLInternalServerError Error.

swagger:response getInfraEnvDownloadUrlInternalServerError
*/
type GetInfraEnvDownloadURLInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLInternalServerError creates GetInfraEnvDownloadURLInternalServerError with default headers values
func NewGetInfraEnvDownloadURLInternalServerError() *GetInfraEnvDownloadURLInternalServerError {

	return &GetInfraEnvDownloadURLInternalServerError{}
}

// WithPayload adds the payload to the get infra env download Url internal server error response
func (o *GetInfraEnvDownloadURLInternalServerError) WithPayload(payload *models.Error) *GetInfraEnvDownloadURLInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url internal server error response
func (o *GetInfraEnvDownloadURLInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInfraEnvDownloadURLNotImplementedCode is the HTTP code returned for type GetInfraEnvDownloadURLNotImplemented
const GetInfraEnvDownloadURLNotImplementedCode int = 501

/*GetInfraEnvDownloadURLNotImplemented Not implemented.

swagger:response getInfraEnvDownloadUrlNotImplemented
*/
type GetInfraEnvDownloadURLNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLNotImplemented creates GetInfraEnvDownloadURLNotImplemented with default headers values
func NewGetInfraEnvDownloadURLNotImplemented() *GetInfraEnvDownloadURLNotImplemented {

	return &GetInfraEnvDownloadURLNotImplemented{}
}

// WithPayload adds the payload to the get infra env download Url not implemented response
func (o *GetInfraEnvDownloadURLNotImplemented) WithPayload(payload *models.Error) *GetInfraEnvDownloadURLNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url not implemented response
func (o *GetInfraEnvDownloadURLNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetInfraEnvDownloadURLServiceUnavailableCode is the HTTP code returned for type GetInfraEnvDownloadURLServiceUnavailable
const GetInfraEnvDownloadURLServiceUnavailableCode int = 503

/*GetInfraEnvDownloadURLServiceUnavailable Unavailable.

swagger:response getInfraEnvDownloadUrlServiceUnavailable
*/
type GetInfraEnvDownloadURLServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetInfraEnvDownloadURLServiceUnavailable creates GetInfraEnvDownloadURLServiceUnavailable with default headers values
func NewGetInfraEnvDownloadURLServiceUnavailable() *GetInfraEnvDownloadURLServiceUnavailable {

	return &GetInfraEnvDownloadURLServiceUnavailable{}
}

// WithPayload adds the payload to the get infra env download Url service unavailable response
func (o *GetInfraEnvDownloadURLServiceUnavailable) WithPayload(payload *models.Error) *GetInfraEnvDownloadURLServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get infra env download Url service unavailable response
func (o *GetInfraEnvDownloadURLServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInfraEnvDownloadURLServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
