// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2GetHostOKCode is the HTTP code returned for type V2GetHostOK
const V2GetHostOKCode int = 200

/*V2GetHostOK Success.

swagger:response v2GetHostOK
*/
type V2GetHostOK struct {

	/*
	  In: Body
	*/
	Payload *models.Host `json:"body,omitempty"`
}

// NewV2GetHostOK creates V2GetHostOK with default headers values
func NewV2GetHostOK() *V2GetHostOK {

	return &V2GetHostOK{}
}

// WithPayload adds the payload to the v2 get host o k response
func (o *V2GetHostOK) WithPayload(payload *models.Host) *V2GetHostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 get host o k response
func (o *V2GetHostOK) SetPayload(payload *models.Host) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2GetHostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2GetHostUnauthorizedCode is the HTTP code returned for type V2GetHostUnauthorized
const V2GetHostUnauthorizedCode int = 401

/*V2GetHostUnauthorized Unauthorized.

swagger:response v2GetHostUnauthorized
*/
type V2GetHostUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2GetHostUnauthorized creates V2GetHostUnauthorized with default headers values
func NewV2GetHostUnauthorized() *V2GetHostUnauthorized {

	return &V2GetHostUnauthorized{}
}

// WithPayload adds the payload to the v2 get host unauthorized response
func (o *V2GetHostUnauthorized) WithPayload(payload *models.InfraError) *V2GetHostUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 get host unauthorized response
func (o *V2GetHostUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2GetHostUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2GetHostForbiddenCode is the HTTP code returned for type V2GetHostForbidden
const V2GetHostForbiddenCode int = 403

/*V2GetHostForbidden Forbidden.

swagger:response v2GetHostForbidden
*/
type V2GetHostForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2GetHostForbidden creates V2GetHostForbidden with default headers values
func NewV2GetHostForbidden() *V2GetHostForbidden {

	return &V2GetHostForbidden{}
}

// WithPayload adds the payload to the v2 get host forbidden response
func (o *V2GetHostForbidden) WithPayload(payload *models.InfraError) *V2GetHostForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 get host forbidden response
func (o *V2GetHostForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2GetHostForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2GetHostNotFoundCode is the HTTP code returned for type V2GetHostNotFound
const V2GetHostNotFoundCode int = 404

/*V2GetHostNotFound Error.

swagger:response v2GetHostNotFound
*/
type V2GetHostNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2GetHostNotFound creates V2GetHostNotFound with default headers values
func NewV2GetHostNotFound() *V2GetHostNotFound {

	return &V2GetHostNotFound{}
}

// WithPayload adds the payload to the v2 get host not found response
func (o *V2GetHostNotFound) WithPayload(payload *models.Error) *V2GetHostNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 get host not found response
func (o *V2GetHostNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2GetHostNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2GetHostMethodNotAllowedCode is the HTTP code returned for type V2GetHostMethodNotAllowed
const V2GetHostMethodNotAllowedCode int = 405

/*V2GetHostMethodNotAllowed Method Not Allowed.

swagger:response v2GetHostMethodNotAllowed
*/
type V2GetHostMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2GetHostMethodNotAllowed creates V2GetHostMethodNotAllowed with default headers values
func NewV2GetHostMethodNotAllowed() *V2GetHostMethodNotAllowed {

	return &V2GetHostMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 get host method not allowed response
func (o *V2GetHostMethodNotAllowed) WithPayload(payload *models.Error) *V2GetHostMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 get host method not allowed response
func (o *V2GetHostMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2GetHostMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2GetHostInternalServerErrorCode is the HTTP code returned for type V2GetHostInternalServerError
const V2GetHostInternalServerErrorCode int = 500

/*V2GetHostInternalServerError Error.

swagger:response v2GetHostInternalServerError
*/
type V2GetHostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2GetHostInternalServerError creates V2GetHostInternalServerError with default headers values
func NewV2GetHostInternalServerError() *V2GetHostInternalServerError {

	return &V2GetHostInternalServerError{}
}

// WithPayload adds the payload to the v2 get host internal server error response
func (o *V2GetHostInternalServerError) WithPayload(payload *models.Error) *V2GetHostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 get host internal server error response
func (o *V2GetHostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2GetHostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2GetHostNotImplementedCode is the HTTP code returned for type V2GetHostNotImplemented
const V2GetHostNotImplementedCode int = 501

/*V2GetHostNotImplemented Not implemented.

swagger:response v2GetHostNotImplemented
*/
type V2GetHostNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2GetHostNotImplemented creates V2GetHostNotImplemented with default headers values
func NewV2GetHostNotImplemented() *V2GetHostNotImplemented {

	return &V2GetHostNotImplemented{}
}

// WithPayload adds the payload to the v2 get host not implemented response
func (o *V2GetHostNotImplemented) WithPayload(payload *models.Error) *V2GetHostNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 get host not implemented response
func (o *V2GetHostNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2GetHostNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
