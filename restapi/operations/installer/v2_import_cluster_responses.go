// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2ImportClusterCreatedCode is the HTTP code returned for type V2ImportClusterCreated
const V2ImportClusterCreatedCode int = 201

/*V2ImportClusterCreated Success.

swagger:response v2ImportClusterCreated
*/
type V2ImportClusterCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewV2ImportClusterCreated creates V2ImportClusterCreated with default headers values
func NewV2ImportClusterCreated() *V2ImportClusterCreated {

	return &V2ImportClusterCreated{}
}

// WithPayload adds the payload to the v2 import cluster created response
func (o *V2ImportClusterCreated) WithPayload(payload *models.Cluster) *V2ImportClusterCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 import cluster created response
func (o *V2ImportClusterCreated) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ImportClusterCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ImportClusterBadRequestCode is the HTTP code returned for type V2ImportClusterBadRequest
const V2ImportClusterBadRequestCode int = 400

/*V2ImportClusterBadRequest Error.

swagger:response v2ImportClusterBadRequest
*/
type V2ImportClusterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ImportClusterBadRequest creates V2ImportClusterBadRequest with default headers values
func NewV2ImportClusterBadRequest() *V2ImportClusterBadRequest {

	return &V2ImportClusterBadRequest{}
}

// WithPayload adds the payload to the v2 import cluster bad request response
func (o *V2ImportClusterBadRequest) WithPayload(payload *models.Error) *V2ImportClusterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 import cluster bad request response
func (o *V2ImportClusterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ImportClusterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ImportClusterUnauthorizedCode is the HTTP code returned for type V2ImportClusterUnauthorized
const V2ImportClusterUnauthorizedCode int = 401

/*V2ImportClusterUnauthorized Unauthorized.

swagger:response v2ImportClusterUnauthorized
*/
type V2ImportClusterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2ImportClusterUnauthorized creates V2ImportClusterUnauthorized with default headers values
func NewV2ImportClusterUnauthorized() *V2ImportClusterUnauthorized {

	return &V2ImportClusterUnauthorized{}
}

// WithPayload adds the payload to the v2 import cluster unauthorized response
func (o *V2ImportClusterUnauthorized) WithPayload(payload *models.InfraError) *V2ImportClusterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 import cluster unauthorized response
func (o *V2ImportClusterUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ImportClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ImportClusterForbiddenCode is the HTTP code returned for type V2ImportClusterForbidden
const V2ImportClusterForbiddenCode int = 403

/*V2ImportClusterForbidden Forbidden.

swagger:response v2ImportClusterForbidden
*/
type V2ImportClusterForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2ImportClusterForbidden creates V2ImportClusterForbidden with default headers values
func NewV2ImportClusterForbidden() *V2ImportClusterForbidden {

	return &V2ImportClusterForbidden{}
}

// WithPayload adds the payload to the v2 import cluster forbidden response
func (o *V2ImportClusterForbidden) WithPayload(payload *models.InfraError) *V2ImportClusterForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 import cluster forbidden response
func (o *V2ImportClusterForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ImportClusterForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2ImportClusterInternalServerErrorCode is the HTTP code returned for type V2ImportClusterInternalServerError
const V2ImportClusterInternalServerErrorCode int = 500

/*V2ImportClusterInternalServerError Error.

swagger:response v2ImportClusterInternalServerError
*/
type V2ImportClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2ImportClusterInternalServerError creates V2ImportClusterInternalServerError with default headers values
func NewV2ImportClusterInternalServerError() *V2ImportClusterInternalServerError {

	return &V2ImportClusterInternalServerError{}
}

// WithPayload adds the payload to the v2 import cluster internal server error response
func (o *V2ImportClusterInternalServerError) WithPayload(payload *models.Error) *V2ImportClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 import cluster internal server error response
func (o *V2ImportClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2ImportClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
