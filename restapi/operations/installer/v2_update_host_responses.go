// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateHostCreatedCode is the HTTP code returned for type V2UpdateHostCreated
const V2UpdateHostCreatedCode int = 201

/*V2UpdateHostCreated Success.

swagger:response v2UpdateHostCreated
*/
type V2UpdateHostCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Host `json:"body,omitempty"`
}

// NewV2UpdateHostCreated creates V2UpdateHostCreated with default headers values
func NewV2UpdateHostCreated() *V2UpdateHostCreated {

	return &V2UpdateHostCreated{}
}

// WithPayload adds the payload to the v2 update host created response
func (o *V2UpdateHostCreated) WithPayload(payload *models.Host) *V2UpdateHostCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host created response
func (o *V2UpdateHostCreated) SetPayload(payload *models.Host) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostBadRequestCode is the HTTP code returned for type V2UpdateHostBadRequest
const V2UpdateHostBadRequestCode int = 400

/*V2UpdateHostBadRequest Error.

swagger:response v2UpdateHostBadRequest
*/
type V2UpdateHostBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostBadRequest creates V2UpdateHostBadRequest with default headers values
func NewV2UpdateHostBadRequest() *V2UpdateHostBadRequest {

	return &V2UpdateHostBadRequest{}
}

// WithPayload adds the payload to the v2 update host bad request response
func (o *V2UpdateHostBadRequest) WithPayload(payload *models.Error) *V2UpdateHostBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host bad request response
func (o *V2UpdateHostBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostUnauthorizedCode is the HTTP code returned for type V2UpdateHostUnauthorized
const V2UpdateHostUnauthorizedCode int = 401

/*V2UpdateHostUnauthorized Unauthorized.

swagger:response v2UpdateHostUnauthorized
*/
type V2UpdateHostUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateHostUnauthorized creates V2UpdateHostUnauthorized with default headers values
func NewV2UpdateHostUnauthorized() *V2UpdateHostUnauthorized {

	return &V2UpdateHostUnauthorized{}
}

// WithPayload adds the payload to the v2 update host unauthorized response
func (o *V2UpdateHostUnauthorized) WithPayload(payload *models.InfraError) *V2UpdateHostUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host unauthorized response
func (o *V2UpdateHostUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostForbiddenCode is the HTTP code returned for type V2UpdateHostForbidden
const V2UpdateHostForbiddenCode int = 403

/*V2UpdateHostForbidden Forbidden.

swagger:response v2UpdateHostForbidden
*/
type V2UpdateHostForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateHostForbidden creates V2UpdateHostForbidden with default headers values
func NewV2UpdateHostForbidden() *V2UpdateHostForbidden {

	return &V2UpdateHostForbidden{}
}

// WithPayload adds the payload to the v2 update host forbidden response
func (o *V2UpdateHostForbidden) WithPayload(payload *models.InfraError) *V2UpdateHostForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host forbidden response
func (o *V2UpdateHostForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostNotFoundCode is the HTTP code returned for type V2UpdateHostNotFound
const V2UpdateHostNotFoundCode int = 404

/*V2UpdateHostNotFound Error.

swagger:response v2UpdateHostNotFound
*/
type V2UpdateHostNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostNotFound creates V2UpdateHostNotFound with default headers values
func NewV2UpdateHostNotFound() *V2UpdateHostNotFound {

	return &V2UpdateHostNotFound{}
}

// WithPayload adds the payload to the v2 update host not found response
func (o *V2UpdateHostNotFound) WithPayload(payload *models.Error) *V2UpdateHostNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host not found response
func (o *V2UpdateHostNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostMethodNotAllowedCode is the HTTP code returned for type V2UpdateHostMethodNotAllowed
const V2UpdateHostMethodNotAllowedCode int = 405

/*V2UpdateHostMethodNotAllowed Method Not Allowed.

swagger:response v2UpdateHostMethodNotAllowed
*/
type V2UpdateHostMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostMethodNotAllowed creates V2UpdateHostMethodNotAllowed with default headers values
func NewV2UpdateHostMethodNotAllowed() *V2UpdateHostMethodNotAllowed {

	return &V2UpdateHostMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 update host method not allowed response
func (o *V2UpdateHostMethodNotAllowed) WithPayload(payload *models.Error) *V2UpdateHostMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host method not allowed response
func (o *V2UpdateHostMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostConflictCode is the HTTP code returned for type V2UpdateHostConflict
const V2UpdateHostConflictCode int = 409

/*V2UpdateHostConflict Error.

swagger:response v2UpdateHostConflict
*/
type V2UpdateHostConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostConflict creates V2UpdateHostConflict with default headers values
func NewV2UpdateHostConflict() *V2UpdateHostConflict {

	return &V2UpdateHostConflict{}
}

// WithPayload adds the payload to the v2 update host conflict response
func (o *V2UpdateHostConflict) WithPayload(payload *models.Error) *V2UpdateHostConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host conflict response
func (o *V2UpdateHostConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostInternalServerErrorCode is the HTTP code returned for type V2UpdateHostInternalServerError
const V2UpdateHostInternalServerErrorCode int = 500

/*V2UpdateHostInternalServerError Error.

swagger:response v2UpdateHostInternalServerError
*/
type V2UpdateHostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostInternalServerError creates V2UpdateHostInternalServerError with default headers values
func NewV2UpdateHostInternalServerError() *V2UpdateHostInternalServerError {

	return &V2UpdateHostInternalServerError{}
}

// WithPayload adds the payload to the v2 update host internal server error response
func (o *V2UpdateHostInternalServerError) WithPayload(payload *models.Error) *V2UpdateHostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host internal server error response
func (o *V2UpdateHostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
