// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateClusterLogsProgressNoContentCode is the HTTP code returned for type V2UpdateClusterLogsProgressNoContent
const V2UpdateClusterLogsProgressNoContentCode int = 204

/*V2UpdateClusterLogsProgressNoContent Update cluster install progress.

swagger:response v2UpdateClusterLogsProgressNoContent
*/
type V2UpdateClusterLogsProgressNoContent struct {
}

// NewV2UpdateClusterLogsProgressNoContent creates V2UpdateClusterLogsProgressNoContent with default headers values
func NewV2UpdateClusterLogsProgressNoContent() *V2UpdateClusterLogsProgressNoContent {

	return &V2UpdateClusterLogsProgressNoContent{}
}

// WriteResponse to the client
func (o *V2UpdateClusterLogsProgressNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// V2UpdateClusterLogsProgressUnauthorizedCode is the HTTP code returned for type V2UpdateClusterLogsProgressUnauthorized
const V2UpdateClusterLogsProgressUnauthorizedCode int = 401

/*V2UpdateClusterLogsProgressUnauthorized Unauthorized.

swagger:response v2UpdateClusterLogsProgressUnauthorized
*/
type V2UpdateClusterLogsProgressUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateClusterLogsProgressUnauthorized creates V2UpdateClusterLogsProgressUnauthorized with default headers values
func NewV2UpdateClusterLogsProgressUnauthorized() *V2UpdateClusterLogsProgressUnauthorized {

	return &V2UpdateClusterLogsProgressUnauthorized{}
}

// WithPayload adds the payload to the v2 update cluster logs progress unauthorized response
func (o *V2UpdateClusterLogsProgressUnauthorized) WithPayload(payload *models.InfraError) *V2UpdateClusterLogsProgressUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster logs progress unauthorized response
func (o *V2UpdateClusterLogsProgressUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterLogsProgressUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterLogsProgressForbiddenCode is the HTTP code returned for type V2UpdateClusterLogsProgressForbidden
const V2UpdateClusterLogsProgressForbiddenCode int = 403

/*V2UpdateClusterLogsProgressForbidden Forbidden.

swagger:response v2UpdateClusterLogsProgressForbidden
*/
type V2UpdateClusterLogsProgressForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateClusterLogsProgressForbidden creates V2UpdateClusterLogsProgressForbidden with default headers values
func NewV2UpdateClusterLogsProgressForbidden() *V2UpdateClusterLogsProgressForbidden {

	return &V2UpdateClusterLogsProgressForbidden{}
}

// WithPayload adds the payload to the v2 update cluster logs progress forbidden response
func (o *V2UpdateClusterLogsProgressForbidden) WithPayload(payload *models.InfraError) *V2UpdateClusterLogsProgressForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster logs progress forbidden response
func (o *V2UpdateClusterLogsProgressForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterLogsProgressForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterLogsProgressNotFoundCode is the HTTP code returned for type V2UpdateClusterLogsProgressNotFound
const V2UpdateClusterLogsProgressNotFoundCode int = 404

/*V2UpdateClusterLogsProgressNotFound Error.

swagger:response v2UpdateClusterLogsProgressNotFound
*/
type V2UpdateClusterLogsProgressNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterLogsProgressNotFound creates V2UpdateClusterLogsProgressNotFound with default headers values
func NewV2UpdateClusterLogsProgressNotFound() *V2UpdateClusterLogsProgressNotFound {

	return &V2UpdateClusterLogsProgressNotFound{}
}

// WithPayload adds the payload to the v2 update cluster logs progress not found response
func (o *V2UpdateClusterLogsProgressNotFound) WithPayload(payload *models.Error) *V2UpdateClusterLogsProgressNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster logs progress not found response
func (o *V2UpdateClusterLogsProgressNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterLogsProgressNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterLogsProgressMethodNotAllowedCode is the HTTP code returned for type V2UpdateClusterLogsProgressMethodNotAllowed
const V2UpdateClusterLogsProgressMethodNotAllowedCode int = 405

/*V2UpdateClusterLogsProgressMethodNotAllowed Method Not Allowed.

swagger:response v2UpdateClusterLogsProgressMethodNotAllowed
*/
type V2UpdateClusterLogsProgressMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterLogsProgressMethodNotAllowed creates V2UpdateClusterLogsProgressMethodNotAllowed with default headers values
func NewV2UpdateClusterLogsProgressMethodNotAllowed() *V2UpdateClusterLogsProgressMethodNotAllowed {

	return &V2UpdateClusterLogsProgressMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 update cluster logs progress method not allowed response
func (o *V2UpdateClusterLogsProgressMethodNotAllowed) WithPayload(payload *models.Error) *V2UpdateClusterLogsProgressMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster logs progress method not allowed response
func (o *V2UpdateClusterLogsProgressMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterLogsProgressMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterLogsProgressConflictCode is the HTTP code returned for type V2UpdateClusterLogsProgressConflict
const V2UpdateClusterLogsProgressConflictCode int = 409

/*V2UpdateClusterLogsProgressConflict Error.

swagger:response v2UpdateClusterLogsProgressConflict
*/
type V2UpdateClusterLogsProgressConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterLogsProgressConflict creates V2UpdateClusterLogsProgressConflict with default headers values
func NewV2UpdateClusterLogsProgressConflict() *V2UpdateClusterLogsProgressConflict {

	return &V2UpdateClusterLogsProgressConflict{}
}

// WithPayload adds the payload to the v2 update cluster logs progress conflict response
func (o *V2UpdateClusterLogsProgressConflict) WithPayload(payload *models.Error) *V2UpdateClusterLogsProgressConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster logs progress conflict response
func (o *V2UpdateClusterLogsProgressConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterLogsProgressConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterLogsProgressInternalServerErrorCode is the HTTP code returned for type V2UpdateClusterLogsProgressInternalServerError
const V2UpdateClusterLogsProgressInternalServerErrorCode int = 500

/*V2UpdateClusterLogsProgressInternalServerError Error.

swagger:response v2UpdateClusterLogsProgressInternalServerError
*/
type V2UpdateClusterLogsProgressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterLogsProgressInternalServerError creates V2UpdateClusterLogsProgressInternalServerError with default headers values
func NewV2UpdateClusterLogsProgressInternalServerError() *V2UpdateClusterLogsProgressInternalServerError {

	return &V2UpdateClusterLogsProgressInternalServerError{}
}

// WithPayload adds the payload to the v2 update cluster logs progress internal server error response
func (o *V2UpdateClusterLogsProgressInternalServerError) WithPayload(payload *models.Error) *V2UpdateClusterLogsProgressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster logs progress internal server error response
func (o *V2UpdateClusterLogsProgressInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterLogsProgressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterLogsProgressServiceUnavailableCode is the HTTP code returned for type V2UpdateClusterLogsProgressServiceUnavailable
const V2UpdateClusterLogsProgressServiceUnavailableCode int = 503

/*V2UpdateClusterLogsProgressServiceUnavailable Unavailable.

swagger:response v2UpdateClusterLogsProgressServiceUnavailable
*/
type V2UpdateClusterLogsProgressServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterLogsProgressServiceUnavailable creates V2UpdateClusterLogsProgressServiceUnavailable with default headers values
func NewV2UpdateClusterLogsProgressServiceUnavailable() *V2UpdateClusterLogsProgressServiceUnavailable {

	return &V2UpdateClusterLogsProgressServiceUnavailable{}
}

// WithPayload adds the payload to the v2 update cluster logs progress service unavailable response
func (o *V2UpdateClusterLogsProgressServiceUnavailable) WithPayload(payload *models.Error) *V2UpdateClusterLogsProgressServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster logs progress service unavailable response
func (o *V2UpdateClusterLogsProgressServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterLogsProgressServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
