// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2RegisterHostCreatedCode is the HTTP code returned for type V2RegisterHostCreated
const V2RegisterHostCreatedCode int = 201

/*V2RegisterHostCreated Success.

swagger:response v2RegisterHostCreated
*/
type V2RegisterHostCreated struct {

	/*
	  In: Body
	*/
	Payload *models.HostRegistrationResponse `json:"body,omitempty"`
}

// NewV2RegisterHostCreated creates V2RegisterHostCreated with default headers values
func NewV2RegisterHostCreated() *V2RegisterHostCreated {

	return &V2RegisterHostCreated{}
}

// WithPayload adds the payload to the v2 register host created response
func (o *V2RegisterHostCreated) WithPayload(payload *models.HostRegistrationResponse) *V2RegisterHostCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host created response
func (o *V2RegisterHostCreated) SetPayload(payload *models.HostRegistrationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostBadRequestCode is the HTTP code returned for type V2RegisterHostBadRequest
const V2RegisterHostBadRequestCode int = 400

/*V2RegisterHostBadRequest Error.

swagger:response v2RegisterHostBadRequest
*/
type V2RegisterHostBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2RegisterHostBadRequest creates V2RegisterHostBadRequest with default headers values
func NewV2RegisterHostBadRequest() *V2RegisterHostBadRequest {

	return &V2RegisterHostBadRequest{}
}

// WithPayload adds the payload to the v2 register host bad request response
func (o *V2RegisterHostBadRequest) WithPayload(payload *models.Error) *V2RegisterHostBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host bad request response
func (o *V2RegisterHostBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostUnauthorizedCode is the HTTP code returned for type V2RegisterHostUnauthorized
const V2RegisterHostUnauthorizedCode int = 401

/*V2RegisterHostUnauthorized Unauthorized.

swagger:response v2RegisterHostUnauthorized
*/
type V2RegisterHostUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2RegisterHostUnauthorized creates V2RegisterHostUnauthorized with default headers values
func NewV2RegisterHostUnauthorized() *V2RegisterHostUnauthorized {

	return &V2RegisterHostUnauthorized{}
}

// WithPayload adds the payload to the v2 register host unauthorized response
func (o *V2RegisterHostUnauthorized) WithPayload(payload *models.InfraError) *V2RegisterHostUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host unauthorized response
func (o *V2RegisterHostUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostForbiddenCode is the HTTP code returned for type V2RegisterHostForbidden
const V2RegisterHostForbiddenCode int = 403

/*V2RegisterHostForbidden Forbidden.

swagger:response v2RegisterHostForbidden
*/
type V2RegisterHostForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2RegisterHostForbidden creates V2RegisterHostForbidden with default headers values
func NewV2RegisterHostForbidden() *V2RegisterHostForbidden {

	return &V2RegisterHostForbidden{}
}

// WithPayload adds the payload to the v2 register host forbidden response
func (o *V2RegisterHostForbidden) WithPayload(payload *models.InfraError) *V2RegisterHostForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host forbidden response
func (o *V2RegisterHostForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostNotFoundCode is the HTTP code returned for type V2RegisterHostNotFound
const V2RegisterHostNotFoundCode int = 404

/*V2RegisterHostNotFound Error.

swagger:response v2RegisterHostNotFound
*/
type V2RegisterHostNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2RegisterHostNotFound creates V2RegisterHostNotFound with default headers values
func NewV2RegisterHostNotFound() *V2RegisterHostNotFound {

	return &V2RegisterHostNotFound{}
}

// WithPayload adds the payload to the v2 register host not found response
func (o *V2RegisterHostNotFound) WithPayload(payload *models.Error) *V2RegisterHostNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host not found response
func (o *V2RegisterHostNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostMethodNotAllowedCode is the HTTP code returned for type V2RegisterHostMethodNotAllowed
const V2RegisterHostMethodNotAllowedCode int = 405

/*V2RegisterHostMethodNotAllowed Method Not Allowed.

swagger:response v2RegisterHostMethodNotAllowed
*/
type V2RegisterHostMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2RegisterHostMethodNotAllowed creates V2RegisterHostMethodNotAllowed with default headers values
func NewV2RegisterHostMethodNotAllowed() *V2RegisterHostMethodNotAllowed {

	return &V2RegisterHostMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 register host method not allowed response
func (o *V2RegisterHostMethodNotAllowed) WithPayload(payload *models.Error) *V2RegisterHostMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host method not allowed response
func (o *V2RegisterHostMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostConflictCode is the HTTP code returned for type V2RegisterHostConflict
const V2RegisterHostConflictCode int = 409

/*V2RegisterHostConflict Cluster cannot accept new agents due to its current state.

swagger:response v2RegisterHostConflict
*/
type V2RegisterHostConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2RegisterHostConflict creates V2RegisterHostConflict with default headers values
func NewV2RegisterHostConflict() *V2RegisterHostConflict {

	return &V2RegisterHostConflict{}
}

// WithPayload adds the payload to the v2 register host conflict response
func (o *V2RegisterHostConflict) WithPayload(payload *models.Error) *V2RegisterHostConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host conflict response
func (o *V2RegisterHostConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostInternalServerErrorCode is the HTTP code returned for type V2RegisterHostInternalServerError
const V2RegisterHostInternalServerErrorCode int = 500

/*V2RegisterHostInternalServerError Error.

swagger:response v2RegisterHostInternalServerError
*/
type V2RegisterHostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2RegisterHostInternalServerError creates V2RegisterHostInternalServerError with default headers values
func NewV2RegisterHostInternalServerError() *V2RegisterHostInternalServerError {

	return &V2RegisterHostInternalServerError{}
}

// WithPayload adds the payload to the v2 register host internal server error response
func (o *V2RegisterHostInternalServerError) WithPayload(payload *models.Error) *V2RegisterHostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host internal server error response
func (o *V2RegisterHostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostNotImplementedCode is the HTTP code returned for type V2RegisterHostNotImplemented
const V2RegisterHostNotImplementedCode int = 501

/*V2RegisterHostNotImplemented Not implemented.

swagger:response v2RegisterHostNotImplemented
*/
type V2RegisterHostNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2RegisterHostNotImplemented creates V2RegisterHostNotImplemented with default headers values
func NewV2RegisterHostNotImplemented() *V2RegisterHostNotImplemented {

	return &V2RegisterHostNotImplemented{}
}

// WithPayload adds the payload to the v2 register host not implemented response
func (o *V2RegisterHostNotImplemented) WithPayload(payload *models.Error) *V2RegisterHostNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host not implemented response
func (o *V2RegisterHostNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2RegisterHostServiceUnavailableCode is the HTTP code returned for type V2RegisterHostServiceUnavailable
const V2RegisterHostServiceUnavailableCode int = 503

/*V2RegisterHostServiceUnavailable Unavailable.

swagger:response v2RegisterHostServiceUnavailable
*/
type V2RegisterHostServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2RegisterHostServiceUnavailable creates V2RegisterHostServiceUnavailable with default headers values
func NewV2RegisterHostServiceUnavailable() *V2RegisterHostServiceUnavailable {

	return &V2RegisterHostServiceUnavailable{}
}

// WithPayload adds the payload to the v2 register host service unavailable response
func (o *V2RegisterHostServiceUnavailable) WithPayload(payload *models.Error) *V2RegisterHostServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 register host service unavailable response
func (o *V2RegisterHostServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2RegisterHostServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
