// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateClusterFinalizingProgressOKCode is the HTTP code returned for type V2UpdateClusterFinalizingProgressOK
const V2UpdateClusterFinalizingProgressOKCode int = 200

/*
V2UpdateClusterFinalizingProgressOK Update install progress.

swagger:response v2UpdateClusterFinalizingProgressOK
*/
type V2UpdateClusterFinalizingProgressOK struct {
}

// NewV2UpdateClusterFinalizingProgressOK creates V2UpdateClusterFinalizingProgressOK with default headers values
func NewV2UpdateClusterFinalizingProgressOK() *V2UpdateClusterFinalizingProgressOK {

	return &V2UpdateClusterFinalizingProgressOK{}
}

// WriteResponse to the client
func (o *V2UpdateClusterFinalizingProgressOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// V2UpdateClusterFinalizingProgressUnauthorizedCode is the HTTP code returned for type V2UpdateClusterFinalizingProgressUnauthorized
const V2UpdateClusterFinalizingProgressUnauthorizedCode int = 401

/*
V2UpdateClusterFinalizingProgressUnauthorized Unauthorized.

swagger:response v2UpdateClusterFinalizingProgressUnauthorized
*/
type V2UpdateClusterFinalizingProgressUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateClusterFinalizingProgressUnauthorized creates V2UpdateClusterFinalizingProgressUnauthorized with default headers values
func NewV2UpdateClusterFinalizingProgressUnauthorized() *V2UpdateClusterFinalizingProgressUnauthorized {

	return &V2UpdateClusterFinalizingProgressUnauthorized{}
}

// WithPayload adds the payload to the v2 update cluster finalizing progress unauthorized response
func (o *V2UpdateClusterFinalizingProgressUnauthorized) WithPayload(payload *models.InfraError) *V2UpdateClusterFinalizingProgressUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster finalizing progress unauthorized response
func (o *V2UpdateClusterFinalizingProgressUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterFinalizingProgressUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterFinalizingProgressForbiddenCode is the HTTP code returned for type V2UpdateClusterFinalizingProgressForbidden
const V2UpdateClusterFinalizingProgressForbiddenCode int = 403

/*
V2UpdateClusterFinalizingProgressForbidden Forbidden.

swagger:response v2UpdateClusterFinalizingProgressForbidden
*/
type V2UpdateClusterFinalizingProgressForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateClusterFinalizingProgressForbidden creates V2UpdateClusterFinalizingProgressForbidden with default headers values
func NewV2UpdateClusterFinalizingProgressForbidden() *V2UpdateClusterFinalizingProgressForbidden {

	return &V2UpdateClusterFinalizingProgressForbidden{}
}

// WithPayload adds the payload to the v2 update cluster finalizing progress forbidden response
func (o *V2UpdateClusterFinalizingProgressForbidden) WithPayload(payload *models.InfraError) *V2UpdateClusterFinalizingProgressForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster finalizing progress forbidden response
func (o *V2UpdateClusterFinalizingProgressForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterFinalizingProgressForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterFinalizingProgressNotFoundCode is the HTTP code returned for type V2UpdateClusterFinalizingProgressNotFound
const V2UpdateClusterFinalizingProgressNotFoundCode int = 404

/*
V2UpdateClusterFinalizingProgressNotFound Error.

swagger:response v2UpdateClusterFinalizingProgressNotFound
*/
type V2UpdateClusterFinalizingProgressNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterFinalizingProgressNotFound creates V2UpdateClusterFinalizingProgressNotFound with default headers values
func NewV2UpdateClusterFinalizingProgressNotFound() *V2UpdateClusterFinalizingProgressNotFound {

	return &V2UpdateClusterFinalizingProgressNotFound{}
}

// WithPayload adds the payload to the v2 update cluster finalizing progress not found response
func (o *V2UpdateClusterFinalizingProgressNotFound) WithPayload(payload *models.Error) *V2UpdateClusterFinalizingProgressNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster finalizing progress not found response
func (o *V2UpdateClusterFinalizingProgressNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterFinalizingProgressNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterFinalizingProgressMethodNotAllowedCode is the HTTP code returned for type V2UpdateClusterFinalizingProgressMethodNotAllowed
const V2UpdateClusterFinalizingProgressMethodNotAllowedCode int = 405

/*
V2UpdateClusterFinalizingProgressMethodNotAllowed Method Not Allowed.

swagger:response v2UpdateClusterFinalizingProgressMethodNotAllowed
*/
type V2UpdateClusterFinalizingProgressMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterFinalizingProgressMethodNotAllowed creates V2UpdateClusterFinalizingProgressMethodNotAllowed with default headers values
func NewV2UpdateClusterFinalizingProgressMethodNotAllowed() *V2UpdateClusterFinalizingProgressMethodNotAllowed {

	return &V2UpdateClusterFinalizingProgressMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 update cluster finalizing progress method not allowed response
func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) WithPayload(payload *models.Error) *V2UpdateClusterFinalizingProgressMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster finalizing progress method not allowed response
func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterFinalizingProgressInternalServerErrorCode is the HTTP code returned for type V2UpdateClusterFinalizingProgressInternalServerError
const V2UpdateClusterFinalizingProgressInternalServerErrorCode int = 500

/*
V2UpdateClusterFinalizingProgressInternalServerError Error.

swagger:response v2UpdateClusterFinalizingProgressInternalServerError
*/
type V2UpdateClusterFinalizingProgressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterFinalizingProgressInternalServerError creates V2UpdateClusterFinalizingProgressInternalServerError with default headers values
func NewV2UpdateClusterFinalizingProgressInternalServerError() *V2UpdateClusterFinalizingProgressInternalServerError {

	return &V2UpdateClusterFinalizingProgressInternalServerError{}
}

// WithPayload adds the payload to the v2 update cluster finalizing progress internal server error response
func (o *V2UpdateClusterFinalizingProgressInternalServerError) WithPayload(payload *models.Error) *V2UpdateClusterFinalizingProgressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster finalizing progress internal server error response
func (o *V2UpdateClusterFinalizingProgressInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterFinalizingProgressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateClusterFinalizingProgressServiceUnavailableCode is the HTTP code returned for type V2UpdateClusterFinalizingProgressServiceUnavailable
const V2UpdateClusterFinalizingProgressServiceUnavailableCode int = 503

/*
V2UpdateClusterFinalizingProgressServiceUnavailable Unavailable.

swagger:response v2UpdateClusterFinalizingProgressServiceUnavailable
*/
type V2UpdateClusterFinalizingProgressServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateClusterFinalizingProgressServiceUnavailable creates V2UpdateClusterFinalizingProgressServiceUnavailable with default headers values
func NewV2UpdateClusterFinalizingProgressServiceUnavailable() *V2UpdateClusterFinalizingProgressServiceUnavailable {

	return &V2UpdateClusterFinalizingProgressServiceUnavailable{}
}

// WithPayload adds the payload to the v2 update cluster finalizing progress service unavailable response
func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) WithPayload(payload *models.Error) *V2UpdateClusterFinalizingProgressServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update cluster finalizing progress service unavailable response
func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
