// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// GetDiscoveryIgnitionOKCode is the HTTP code returned for type GetDiscoveryIgnitionOK
const GetDiscoveryIgnitionOKCode int = 200

/*GetDiscoveryIgnitionOK Success.

swagger:response getDiscoveryIgnitionOK
*/
type GetDiscoveryIgnitionOK struct {

	/*
	  In: Body
	*/
	Payload *models.DiscoveryIgnitionParams `json:"body,omitempty"`
}

// NewGetDiscoveryIgnitionOK creates GetDiscoveryIgnitionOK with default headers values
func NewGetDiscoveryIgnitionOK() *GetDiscoveryIgnitionOK {

	return &GetDiscoveryIgnitionOK{}
}

// WithPayload adds the payload to the get discovery ignition o k response
func (o *GetDiscoveryIgnitionOK) WithPayload(payload *models.DiscoveryIgnitionParams) *GetDiscoveryIgnitionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get discovery ignition o k response
func (o *GetDiscoveryIgnitionOK) SetPayload(payload *models.DiscoveryIgnitionParams) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiscoveryIgnitionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiscoveryIgnitionUnauthorizedCode is the HTTP code returned for type GetDiscoveryIgnitionUnauthorized
const GetDiscoveryIgnitionUnauthorizedCode int = 401

/*GetDiscoveryIgnitionUnauthorized Unauthorized.

swagger:response getDiscoveryIgnitionUnauthorized
*/
type GetDiscoveryIgnitionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetDiscoveryIgnitionUnauthorized creates GetDiscoveryIgnitionUnauthorized with default headers values
func NewGetDiscoveryIgnitionUnauthorized() *GetDiscoveryIgnitionUnauthorized {

	return &GetDiscoveryIgnitionUnauthorized{}
}

// WithPayload adds the payload to the get discovery ignition unauthorized response
func (o *GetDiscoveryIgnitionUnauthorized) WithPayload(payload *models.InfraError) *GetDiscoveryIgnitionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get discovery ignition unauthorized response
func (o *GetDiscoveryIgnitionUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiscoveryIgnitionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiscoveryIgnitionForbiddenCode is the HTTP code returned for type GetDiscoveryIgnitionForbidden
const GetDiscoveryIgnitionForbiddenCode int = 403

/*GetDiscoveryIgnitionForbidden Forbidden.

swagger:response getDiscoveryIgnitionForbidden
*/
type GetDiscoveryIgnitionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetDiscoveryIgnitionForbidden creates GetDiscoveryIgnitionForbidden with default headers values
func NewGetDiscoveryIgnitionForbidden() *GetDiscoveryIgnitionForbidden {

	return &GetDiscoveryIgnitionForbidden{}
}

// WithPayload adds the payload to the get discovery ignition forbidden response
func (o *GetDiscoveryIgnitionForbidden) WithPayload(payload *models.InfraError) *GetDiscoveryIgnitionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get discovery ignition forbidden response
func (o *GetDiscoveryIgnitionForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiscoveryIgnitionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiscoveryIgnitionNotFoundCode is the HTTP code returned for type GetDiscoveryIgnitionNotFound
const GetDiscoveryIgnitionNotFoundCode int = 404

/*GetDiscoveryIgnitionNotFound Error.

swagger:response getDiscoveryIgnitionNotFound
*/
type GetDiscoveryIgnitionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDiscoveryIgnitionNotFound creates GetDiscoveryIgnitionNotFound with default headers values
func NewGetDiscoveryIgnitionNotFound() *GetDiscoveryIgnitionNotFound {

	return &GetDiscoveryIgnitionNotFound{}
}

// WithPayload adds the payload to the get discovery ignition not found response
func (o *GetDiscoveryIgnitionNotFound) WithPayload(payload *models.Error) *GetDiscoveryIgnitionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get discovery ignition not found response
func (o *GetDiscoveryIgnitionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiscoveryIgnitionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiscoveryIgnitionMethodNotAllowedCode is the HTTP code returned for type GetDiscoveryIgnitionMethodNotAllowed
const GetDiscoveryIgnitionMethodNotAllowedCode int = 405

/*GetDiscoveryIgnitionMethodNotAllowed Method Not Allowed.

swagger:response getDiscoveryIgnitionMethodNotAllowed
*/
type GetDiscoveryIgnitionMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDiscoveryIgnitionMethodNotAllowed creates GetDiscoveryIgnitionMethodNotAllowed with default headers values
func NewGetDiscoveryIgnitionMethodNotAllowed() *GetDiscoveryIgnitionMethodNotAllowed {

	return &GetDiscoveryIgnitionMethodNotAllowed{}
}

// WithPayload adds the payload to the get discovery ignition method not allowed response
func (o *GetDiscoveryIgnitionMethodNotAllowed) WithPayload(payload *models.Error) *GetDiscoveryIgnitionMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get discovery ignition method not allowed response
func (o *GetDiscoveryIgnitionMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiscoveryIgnitionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiscoveryIgnitionInternalServerErrorCode is the HTTP code returned for type GetDiscoveryIgnitionInternalServerError
const GetDiscoveryIgnitionInternalServerErrorCode int = 500

/*GetDiscoveryIgnitionInternalServerError Error.

swagger:response getDiscoveryIgnitionInternalServerError
*/
type GetDiscoveryIgnitionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDiscoveryIgnitionInternalServerError creates GetDiscoveryIgnitionInternalServerError with default headers values
func NewGetDiscoveryIgnitionInternalServerError() *GetDiscoveryIgnitionInternalServerError {

	return &GetDiscoveryIgnitionInternalServerError{}
}

// WithPayload adds the payload to the get discovery ignition internal server error response
func (o *GetDiscoveryIgnitionInternalServerError) WithPayload(payload *models.Error) *GetDiscoveryIgnitionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get discovery ignition internal server error response
func (o *GetDiscoveryIgnitionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiscoveryIgnitionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
