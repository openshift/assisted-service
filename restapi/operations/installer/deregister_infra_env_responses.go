// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// DeregisterInfraEnvNoContentCode is the HTTP code returned for type DeregisterInfraEnvNoContent
const DeregisterInfraEnvNoContentCode int = 204

/*DeregisterInfraEnvNoContent Success.

swagger:response deregisterInfraEnvNoContent
*/
type DeregisterInfraEnvNoContent struct {
}

// NewDeregisterInfraEnvNoContent creates DeregisterInfraEnvNoContent with default headers values
func NewDeregisterInfraEnvNoContent() *DeregisterInfraEnvNoContent {

	return &DeregisterInfraEnvNoContent{}
}

// WriteResponse to the client
func (o *DeregisterInfraEnvNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeregisterInfraEnvUnauthorizedCode is the HTTP code returned for type DeregisterInfraEnvUnauthorized
const DeregisterInfraEnvUnauthorizedCode int = 401

/*DeregisterInfraEnvUnauthorized Unauthorized.

swagger:response deregisterInfraEnvUnauthorized
*/
type DeregisterInfraEnvUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDeregisterInfraEnvUnauthorized creates DeregisterInfraEnvUnauthorized with default headers values
func NewDeregisterInfraEnvUnauthorized() *DeregisterInfraEnvUnauthorized {

	return &DeregisterInfraEnvUnauthorized{}
}

// WithPayload adds the payload to the deregister infra env unauthorized response
func (o *DeregisterInfraEnvUnauthorized) WithPayload(payload *models.InfraError) *DeregisterInfraEnvUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister infra env unauthorized response
func (o *DeregisterInfraEnvUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterInfraEnvUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeregisterInfraEnvForbiddenCode is the HTTP code returned for type DeregisterInfraEnvForbidden
const DeregisterInfraEnvForbiddenCode int = 403

/*DeregisterInfraEnvForbidden Forbidden.

swagger:response deregisterInfraEnvForbidden
*/
type DeregisterInfraEnvForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDeregisterInfraEnvForbidden creates DeregisterInfraEnvForbidden with default headers values
func NewDeregisterInfraEnvForbidden() *DeregisterInfraEnvForbidden {

	return &DeregisterInfraEnvForbidden{}
}

// WithPayload adds the payload to the deregister infra env forbidden response
func (o *DeregisterInfraEnvForbidden) WithPayload(payload *models.InfraError) *DeregisterInfraEnvForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister infra env forbidden response
func (o *DeregisterInfraEnvForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterInfraEnvForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeregisterInfraEnvNotFoundCode is the HTTP code returned for type DeregisterInfraEnvNotFound
const DeregisterInfraEnvNotFoundCode int = 404

/*DeregisterInfraEnvNotFound Error.

swagger:response deregisterInfraEnvNotFound
*/
type DeregisterInfraEnvNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeregisterInfraEnvNotFound creates DeregisterInfraEnvNotFound with default headers values
func NewDeregisterInfraEnvNotFound() *DeregisterInfraEnvNotFound {

	return &DeregisterInfraEnvNotFound{}
}

// WithPayload adds the payload to the deregister infra env not found response
func (o *DeregisterInfraEnvNotFound) WithPayload(payload *models.Error) *DeregisterInfraEnvNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister infra env not found response
func (o *DeregisterInfraEnvNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterInfraEnvNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeregisterInfraEnvMethodNotAllowedCode is the HTTP code returned for type DeregisterInfraEnvMethodNotAllowed
const DeregisterInfraEnvMethodNotAllowedCode int = 405

/*DeregisterInfraEnvMethodNotAllowed Method Not Allowed.

swagger:response deregisterInfraEnvMethodNotAllowed
*/
type DeregisterInfraEnvMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeregisterInfraEnvMethodNotAllowed creates DeregisterInfraEnvMethodNotAllowed with default headers values
func NewDeregisterInfraEnvMethodNotAllowed() *DeregisterInfraEnvMethodNotAllowed {

	return &DeregisterInfraEnvMethodNotAllowed{}
}

// WithPayload adds the payload to the deregister infra env method not allowed response
func (o *DeregisterInfraEnvMethodNotAllowed) WithPayload(payload *models.Error) *DeregisterInfraEnvMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister infra env method not allowed response
func (o *DeregisterInfraEnvMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterInfraEnvMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeregisterInfraEnvConflictCode is the HTTP code returned for type DeregisterInfraEnvConflict
const DeregisterInfraEnvConflictCode int = 409

/*DeregisterInfraEnvConflict Error.

swagger:response deregisterInfraEnvConflict
*/
type DeregisterInfraEnvConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeregisterInfraEnvConflict creates DeregisterInfraEnvConflict with default headers values
func NewDeregisterInfraEnvConflict() *DeregisterInfraEnvConflict {

	return &DeregisterInfraEnvConflict{}
}

// WithPayload adds the payload to the deregister infra env conflict response
func (o *DeregisterInfraEnvConflict) WithPayload(payload *models.Error) *DeregisterInfraEnvConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister infra env conflict response
func (o *DeregisterInfraEnvConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterInfraEnvConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeregisterInfraEnvInternalServerErrorCode is the HTTP code returned for type DeregisterInfraEnvInternalServerError
const DeregisterInfraEnvInternalServerErrorCode int = 500

/*DeregisterInfraEnvInternalServerError Error.

swagger:response deregisterInfraEnvInternalServerError
*/
type DeregisterInfraEnvInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeregisterInfraEnvInternalServerError creates DeregisterInfraEnvInternalServerError with default headers values
func NewDeregisterInfraEnvInternalServerError() *DeregisterInfraEnvInternalServerError {

	return &DeregisterInfraEnvInternalServerError{}
}

// WithPayload adds the payload to the deregister infra env internal server error response
func (o *DeregisterInfraEnvInternalServerError) WithPayload(payload *models.Error) *DeregisterInfraEnvInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister infra env internal server error response
func (o *DeregisterInfraEnvInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterInfraEnvInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeregisterInfraEnvNotImplementedCode is the HTTP code returned for type DeregisterInfraEnvNotImplemented
const DeregisterInfraEnvNotImplementedCode int = 501

/*DeregisterInfraEnvNotImplemented Not implemented.

swagger:response deregisterInfraEnvNotImplemented
*/
type DeregisterInfraEnvNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeregisterInfraEnvNotImplemented creates DeregisterInfraEnvNotImplemented with default headers values
func NewDeregisterInfraEnvNotImplemented() *DeregisterInfraEnvNotImplemented {

	return &DeregisterInfraEnvNotImplemented{}
}

// WithPayload adds the payload to the deregister infra env not implemented response
func (o *DeregisterInfraEnvNotImplemented) WithPayload(payload *models.Error) *DeregisterInfraEnvNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deregister infra env not implemented response
func (o *DeregisterInfraEnvNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeregisterInfraEnvNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
