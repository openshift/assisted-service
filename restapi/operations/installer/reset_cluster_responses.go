// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// ResetClusterAcceptedCode is the HTTP code returned for type ResetClusterAccepted
const ResetClusterAcceptedCode int = 202

/*ResetClusterAccepted Success.

swagger:response resetClusterAccepted
*/
type ResetClusterAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewResetClusterAccepted creates ResetClusterAccepted with default headers values
func NewResetClusterAccepted() *ResetClusterAccepted {

	return &ResetClusterAccepted{}
}

// WithPayload adds the payload to the reset cluster accepted response
func (o *ResetClusterAccepted) WithPayload(payload *models.Cluster) *ResetClusterAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reset cluster accepted response
func (o *ResetClusterAccepted) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResetClusterAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ResetClusterUnauthorizedCode is the HTTP code returned for type ResetClusterUnauthorized
const ResetClusterUnauthorizedCode int = 401

/*ResetClusterUnauthorized Unauthorized.

swagger:response resetClusterUnauthorized
*/
type ResetClusterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewResetClusterUnauthorized creates ResetClusterUnauthorized with default headers values
func NewResetClusterUnauthorized() *ResetClusterUnauthorized {

	return &ResetClusterUnauthorized{}
}

// WithPayload adds the payload to the reset cluster unauthorized response
func (o *ResetClusterUnauthorized) WithPayload(payload *models.InfraError) *ResetClusterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reset cluster unauthorized response
func (o *ResetClusterUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResetClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ResetClusterForbiddenCode is the HTTP code returned for type ResetClusterForbidden
const ResetClusterForbiddenCode int = 403

/*ResetClusterForbidden Forbidden.

swagger:response resetClusterForbidden
*/
type ResetClusterForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewResetClusterForbidden creates ResetClusterForbidden with default headers values
func NewResetClusterForbidden() *ResetClusterForbidden {

	return &ResetClusterForbidden{}
}

// WithPayload adds the payload to the reset cluster forbidden response
func (o *ResetClusterForbidden) WithPayload(payload *models.InfraError) *ResetClusterForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reset cluster forbidden response
func (o *ResetClusterForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResetClusterForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ResetClusterNotFoundCode is the HTTP code returned for type ResetClusterNotFound
const ResetClusterNotFoundCode int = 404

/*ResetClusterNotFound Error.

swagger:response resetClusterNotFound
*/
type ResetClusterNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewResetClusterNotFound creates ResetClusterNotFound with default headers values
func NewResetClusterNotFound() *ResetClusterNotFound {

	return &ResetClusterNotFound{}
}

// WithPayload adds the payload to the reset cluster not found response
func (o *ResetClusterNotFound) WithPayload(payload *models.Error) *ResetClusterNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reset cluster not found response
func (o *ResetClusterNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResetClusterNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ResetClusterMethodNotAllowedCode is the HTTP code returned for type ResetClusterMethodNotAllowed
const ResetClusterMethodNotAllowedCode int = 405

/*ResetClusterMethodNotAllowed Method Not Allowed.

swagger:response resetClusterMethodNotAllowed
*/
type ResetClusterMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewResetClusterMethodNotAllowed creates ResetClusterMethodNotAllowed with default headers values
func NewResetClusterMethodNotAllowed() *ResetClusterMethodNotAllowed {

	return &ResetClusterMethodNotAllowed{}
}

// WithPayload adds the payload to the reset cluster method not allowed response
func (o *ResetClusterMethodNotAllowed) WithPayload(payload *models.Error) *ResetClusterMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reset cluster method not allowed response
func (o *ResetClusterMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResetClusterMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ResetClusterConflictCode is the HTTP code returned for type ResetClusterConflict
const ResetClusterConflictCode int = 409

/*ResetClusterConflict Error.

swagger:response resetClusterConflict
*/
type ResetClusterConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewResetClusterConflict creates ResetClusterConflict with default headers values
func NewResetClusterConflict() *ResetClusterConflict {

	return &ResetClusterConflict{}
}

// WithPayload adds the payload to the reset cluster conflict response
func (o *ResetClusterConflict) WithPayload(payload *models.Error) *ResetClusterConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reset cluster conflict response
func (o *ResetClusterConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResetClusterConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ResetClusterInternalServerErrorCode is the HTTP code returned for type ResetClusterInternalServerError
const ResetClusterInternalServerErrorCode int = 500

/*ResetClusterInternalServerError Error.

swagger:response resetClusterInternalServerError
*/
type ResetClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewResetClusterInternalServerError creates ResetClusterInternalServerError with default headers values
func NewResetClusterInternalServerError() *ResetClusterInternalServerError {

	return &ResetClusterInternalServerError{}
}

// WithPayload adds the payload to the reset cluster internal server error response
func (o *ResetClusterInternalServerError) WithPayload(payload *models.Error) *ResetClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the reset cluster internal server error response
func (o *ResetClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResetClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
