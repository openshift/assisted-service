// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// DownloadClusterLogsOKCode is the HTTP code returned for type DownloadClusterLogsOK
const DownloadClusterLogsOKCode int = 200

/*DownloadClusterLogsOK Success.

swagger:response downloadClusterLogsOK
*/
type DownloadClusterLogsOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewDownloadClusterLogsOK creates DownloadClusterLogsOK with default headers values
func NewDownloadClusterLogsOK() *DownloadClusterLogsOK {

	return &DownloadClusterLogsOK{}
}

// WithPayload adds the payload to the download cluster logs o k response
func (o *DownloadClusterLogsOK) WithPayload(payload io.ReadCloser) *DownloadClusterLogsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster logs o k response
func (o *DownloadClusterLogsOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterLogsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DownloadClusterLogsUnauthorizedCode is the HTTP code returned for type DownloadClusterLogsUnauthorized
const DownloadClusterLogsUnauthorizedCode int = 401

/*DownloadClusterLogsUnauthorized Unauthorized.

swagger:response downloadClusterLogsUnauthorized
*/
type DownloadClusterLogsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterLogsUnauthorized creates DownloadClusterLogsUnauthorized with default headers values
func NewDownloadClusterLogsUnauthorized() *DownloadClusterLogsUnauthorized {

	return &DownloadClusterLogsUnauthorized{}
}

// WithPayload adds the payload to the download cluster logs unauthorized response
func (o *DownloadClusterLogsUnauthorized) WithPayload(payload *models.Error) *DownloadClusterLogsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster logs unauthorized response
func (o *DownloadClusterLogsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterLogsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterLogsForbiddenCode is the HTTP code returned for type DownloadClusterLogsForbidden
const DownloadClusterLogsForbiddenCode int = 403

/*DownloadClusterLogsForbidden Forbidden.

swagger:response downloadClusterLogsForbidden
*/
type DownloadClusterLogsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterLogsForbidden creates DownloadClusterLogsForbidden with default headers values
func NewDownloadClusterLogsForbidden() *DownloadClusterLogsForbidden {

	return &DownloadClusterLogsForbidden{}
}

// WithPayload adds the payload to the download cluster logs forbidden response
func (o *DownloadClusterLogsForbidden) WithPayload(payload *models.Error) *DownloadClusterLogsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster logs forbidden response
func (o *DownloadClusterLogsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterLogsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterLogsNotFoundCode is the HTTP code returned for type DownloadClusterLogsNotFound
const DownloadClusterLogsNotFoundCode int = 404

/*DownloadClusterLogsNotFound Error.

swagger:response downloadClusterLogsNotFound
*/
type DownloadClusterLogsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterLogsNotFound creates DownloadClusterLogsNotFound with default headers values
func NewDownloadClusterLogsNotFound() *DownloadClusterLogsNotFound {

	return &DownloadClusterLogsNotFound{}
}

// WithPayload adds the payload to the download cluster logs not found response
func (o *DownloadClusterLogsNotFound) WithPayload(payload *models.Error) *DownloadClusterLogsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster logs not found response
func (o *DownloadClusterLogsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterLogsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterLogsMethodNotAllowedCode is the HTTP code returned for type DownloadClusterLogsMethodNotAllowed
const DownloadClusterLogsMethodNotAllowedCode int = 405

/*DownloadClusterLogsMethodNotAllowed Method Not Allowed.

swagger:response downloadClusterLogsMethodNotAllowed
*/
type DownloadClusterLogsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterLogsMethodNotAllowed creates DownloadClusterLogsMethodNotAllowed with default headers values
func NewDownloadClusterLogsMethodNotAllowed() *DownloadClusterLogsMethodNotAllowed {

	return &DownloadClusterLogsMethodNotAllowed{}
}

// WithPayload adds the payload to the download cluster logs method not allowed response
func (o *DownloadClusterLogsMethodNotAllowed) WithPayload(payload *models.Error) *DownloadClusterLogsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster logs method not allowed response
func (o *DownloadClusterLogsMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterLogsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterLogsConflictCode is the HTTP code returned for type DownloadClusterLogsConflict
const DownloadClusterLogsConflictCode int = 409

/*DownloadClusterLogsConflict Error.

swagger:response downloadClusterLogsConflict
*/
type DownloadClusterLogsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterLogsConflict creates DownloadClusterLogsConflict with default headers values
func NewDownloadClusterLogsConflict() *DownloadClusterLogsConflict {

	return &DownloadClusterLogsConflict{}
}

// WithPayload adds the payload to the download cluster logs conflict response
func (o *DownloadClusterLogsConflict) WithPayload(payload *models.Error) *DownloadClusterLogsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster logs conflict response
func (o *DownloadClusterLogsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterLogsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterLogsInternalServerErrorCode is the HTTP code returned for type DownloadClusterLogsInternalServerError
const DownloadClusterLogsInternalServerErrorCode int = 500

/*DownloadClusterLogsInternalServerError Error.

swagger:response downloadClusterLogsInternalServerError
*/
type DownloadClusterLogsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterLogsInternalServerError creates DownloadClusterLogsInternalServerError with default headers values
func NewDownloadClusterLogsInternalServerError() *DownloadClusterLogsInternalServerError {

	return &DownloadClusterLogsInternalServerError{}
}

// WithPayload adds the payload to the download cluster logs internal server error response
func (o *DownloadClusterLogsInternalServerError) WithPayload(payload *models.Error) *DownloadClusterLogsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster logs internal server error response
func (o *DownloadClusterLogsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterLogsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
