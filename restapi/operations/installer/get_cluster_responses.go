// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// GetClusterOKCode is the HTTP code returned for type GetClusterOK
const GetClusterOKCode int = 200

/*GetClusterOK Success.

swagger:response getClusterOK
*/
type GetClusterOK struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewGetClusterOK creates GetClusterOK with default headers values
func NewGetClusterOK() *GetClusterOK {

	return &GetClusterOK{}
}

// WithPayload adds the payload to the get cluster o k response
func (o *GetClusterOK) WithPayload(payload *models.Cluster) *GetClusterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster o k response
func (o *GetClusterOK) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterUnauthorizedCode is the HTTP code returned for type GetClusterUnauthorized
const GetClusterUnauthorizedCode int = 401

/*GetClusterUnauthorized Unauthorized.

swagger:response getClusterUnauthorized
*/
type GetClusterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetClusterUnauthorized creates GetClusterUnauthorized with default headers values
func NewGetClusterUnauthorized() *GetClusterUnauthorized {

	return &GetClusterUnauthorized{}
}

// WithPayload adds the payload to the get cluster unauthorized response
func (o *GetClusterUnauthorized) WithPayload(payload *models.InfraError) *GetClusterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster unauthorized response
func (o *GetClusterUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterForbiddenCode is the HTTP code returned for type GetClusterForbidden
const GetClusterForbiddenCode int = 403

/*GetClusterForbidden Forbidden.

swagger:response getClusterForbidden
*/
type GetClusterForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetClusterForbidden creates GetClusterForbidden with default headers values
func NewGetClusterForbidden() *GetClusterForbidden {

	return &GetClusterForbidden{}
}

// WithPayload adds the payload to the get cluster forbidden response
func (o *GetClusterForbidden) WithPayload(payload *models.InfraError) *GetClusterForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster forbidden response
func (o *GetClusterForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterNotFoundCode is the HTTP code returned for type GetClusterNotFound
const GetClusterNotFoundCode int = 404

/*GetClusterNotFound Error.

swagger:response getClusterNotFound
*/
type GetClusterNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterNotFound creates GetClusterNotFound with default headers values
func NewGetClusterNotFound() *GetClusterNotFound {

	return &GetClusterNotFound{}
}

// WithPayload adds the payload to the get cluster not found response
func (o *GetClusterNotFound) WithPayload(payload *models.Error) *GetClusterNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster not found response
func (o *GetClusterNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterMethodNotAllowedCode is the HTTP code returned for type GetClusterMethodNotAllowed
const GetClusterMethodNotAllowedCode int = 405

/*GetClusterMethodNotAllowed Method Not Allowed.

swagger:response getClusterMethodNotAllowed
*/
type GetClusterMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterMethodNotAllowed creates GetClusterMethodNotAllowed with default headers values
func NewGetClusterMethodNotAllowed() *GetClusterMethodNotAllowed {

	return &GetClusterMethodNotAllowed{}
}

// WithPayload adds the payload to the get cluster method not allowed response
func (o *GetClusterMethodNotAllowed) WithPayload(payload *models.Error) *GetClusterMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster method not allowed response
func (o *GetClusterMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterInternalServerErrorCode is the HTTP code returned for type GetClusterInternalServerError
const GetClusterInternalServerErrorCode int = 500

/*GetClusterInternalServerError Error.

swagger:response getClusterInternalServerError
*/
type GetClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterInternalServerError creates GetClusterInternalServerError with default headers values
func NewGetClusterInternalServerError() *GetClusterInternalServerError {

	return &GetClusterInternalServerError{}
}

// WithPayload adds the payload to the get cluster internal server error response
func (o *GetClusterInternalServerError) WithPayload(payload *models.Error) *GetClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster internal server error response
func (o *GetClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterServiceUnavailableCode is the HTTP code returned for type GetClusterServiceUnavailable
const GetClusterServiceUnavailableCode int = 503

/*GetClusterServiceUnavailable Unavailable.

swagger:response getClusterServiceUnavailable
*/
type GetClusterServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterServiceUnavailable creates GetClusterServiceUnavailable with default headers values
func NewGetClusterServiceUnavailable() *GetClusterServiceUnavailable {

	return &GetClusterServiceUnavailable{}
}

// WithPayload adds the payload to the get cluster service unavailable response
func (o *GetClusterServiceUnavailable) WithPayload(payload *models.Error) *GetClusterServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster service unavailable response
func (o *GetClusterServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
