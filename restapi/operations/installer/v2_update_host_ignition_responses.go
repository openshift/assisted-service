// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateHostIgnitionCreatedCode is the HTTP code returned for type V2UpdateHostIgnitionCreated
const V2UpdateHostIgnitionCreatedCode int = 201

/*V2UpdateHostIgnitionCreated Success.

swagger:response v2UpdateHostIgnitionCreated
*/
type V2UpdateHostIgnitionCreated struct {
}

// NewV2UpdateHostIgnitionCreated creates V2UpdateHostIgnitionCreated with default headers values
func NewV2UpdateHostIgnitionCreated() *V2UpdateHostIgnitionCreated {

	return &V2UpdateHostIgnitionCreated{}
}

// WriteResponse to the client
func (o *V2UpdateHostIgnitionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// V2UpdateHostIgnitionBadRequestCode is the HTTP code returned for type V2UpdateHostIgnitionBadRequest
const V2UpdateHostIgnitionBadRequestCode int = 400

/*V2UpdateHostIgnitionBadRequest Error.

swagger:response v2UpdateHostIgnitionBadRequest
*/
type V2UpdateHostIgnitionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostIgnitionBadRequest creates V2UpdateHostIgnitionBadRequest with default headers values
func NewV2UpdateHostIgnitionBadRequest() *V2UpdateHostIgnitionBadRequest {

	return &V2UpdateHostIgnitionBadRequest{}
}

// WithPayload adds the payload to the v2 update host ignition bad request response
func (o *V2UpdateHostIgnitionBadRequest) WithPayload(payload *models.Error) *V2UpdateHostIgnitionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host ignition bad request response
func (o *V2UpdateHostIgnitionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostIgnitionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostIgnitionUnauthorizedCode is the HTTP code returned for type V2UpdateHostIgnitionUnauthorized
const V2UpdateHostIgnitionUnauthorizedCode int = 401

/*V2UpdateHostIgnitionUnauthorized Unauthorized.

swagger:response v2UpdateHostIgnitionUnauthorized
*/
type V2UpdateHostIgnitionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateHostIgnitionUnauthorized creates V2UpdateHostIgnitionUnauthorized with default headers values
func NewV2UpdateHostIgnitionUnauthorized() *V2UpdateHostIgnitionUnauthorized {

	return &V2UpdateHostIgnitionUnauthorized{}
}

// WithPayload adds the payload to the v2 update host ignition unauthorized response
func (o *V2UpdateHostIgnitionUnauthorized) WithPayload(payload *models.InfraError) *V2UpdateHostIgnitionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host ignition unauthorized response
func (o *V2UpdateHostIgnitionUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostIgnitionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostIgnitionForbiddenCode is the HTTP code returned for type V2UpdateHostIgnitionForbidden
const V2UpdateHostIgnitionForbiddenCode int = 403

/*V2UpdateHostIgnitionForbidden Forbidden.

swagger:response v2UpdateHostIgnitionForbidden
*/
type V2UpdateHostIgnitionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2UpdateHostIgnitionForbidden creates V2UpdateHostIgnitionForbidden with default headers values
func NewV2UpdateHostIgnitionForbidden() *V2UpdateHostIgnitionForbidden {

	return &V2UpdateHostIgnitionForbidden{}
}

// WithPayload adds the payload to the v2 update host ignition forbidden response
func (o *V2UpdateHostIgnitionForbidden) WithPayload(payload *models.InfraError) *V2UpdateHostIgnitionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host ignition forbidden response
func (o *V2UpdateHostIgnitionForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostIgnitionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostIgnitionNotFoundCode is the HTTP code returned for type V2UpdateHostIgnitionNotFound
const V2UpdateHostIgnitionNotFoundCode int = 404

/*V2UpdateHostIgnitionNotFound Error.

swagger:response v2UpdateHostIgnitionNotFound
*/
type V2UpdateHostIgnitionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostIgnitionNotFound creates V2UpdateHostIgnitionNotFound with default headers values
func NewV2UpdateHostIgnitionNotFound() *V2UpdateHostIgnitionNotFound {

	return &V2UpdateHostIgnitionNotFound{}
}

// WithPayload adds the payload to the v2 update host ignition not found response
func (o *V2UpdateHostIgnitionNotFound) WithPayload(payload *models.Error) *V2UpdateHostIgnitionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host ignition not found response
func (o *V2UpdateHostIgnitionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostIgnitionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostIgnitionMethodNotAllowedCode is the HTTP code returned for type V2UpdateHostIgnitionMethodNotAllowed
const V2UpdateHostIgnitionMethodNotAllowedCode int = 405

/*V2UpdateHostIgnitionMethodNotAllowed Method Not Allowed.

swagger:response v2UpdateHostIgnitionMethodNotAllowed
*/
type V2UpdateHostIgnitionMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostIgnitionMethodNotAllowed creates V2UpdateHostIgnitionMethodNotAllowed with default headers values
func NewV2UpdateHostIgnitionMethodNotAllowed() *V2UpdateHostIgnitionMethodNotAllowed {

	return &V2UpdateHostIgnitionMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 update host ignition method not allowed response
func (o *V2UpdateHostIgnitionMethodNotAllowed) WithPayload(payload *models.Error) *V2UpdateHostIgnitionMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host ignition method not allowed response
func (o *V2UpdateHostIgnitionMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostIgnitionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostIgnitionInternalServerErrorCode is the HTTP code returned for type V2UpdateHostIgnitionInternalServerError
const V2UpdateHostIgnitionInternalServerErrorCode int = 500

/*V2UpdateHostIgnitionInternalServerError Error.

swagger:response v2UpdateHostIgnitionInternalServerError
*/
type V2UpdateHostIgnitionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostIgnitionInternalServerError creates V2UpdateHostIgnitionInternalServerError with default headers values
func NewV2UpdateHostIgnitionInternalServerError() *V2UpdateHostIgnitionInternalServerError {

	return &V2UpdateHostIgnitionInternalServerError{}
}

// WithPayload adds the payload to the v2 update host ignition internal server error response
func (o *V2UpdateHostIgnitionInternalServerError) WithPayload(payload *models.Error) *V2UpdateHostIgnitionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host ignition internal server error response
func (o *V2UpdateHostIgnitionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostIgnitionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2UpdateHostIgnitionNotImplementedCode is the HTTP code returned for type V2UpdateHostIgnitionNotImplemented
const V2UpdateHostIgnitionNotImplementedCode int = 501

/*V2UpdateHostIgnitionNotImplemented Not implemented.

swagger:response v2UpdateHostIgnitionNotImplemented
*/
type V2UpdateHostIgnitionNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2UpdateHostIgnitionNotImplemented creates V2UpdateHostIgnitionNotImplemented with default headers values
func NewV2UpdateHostIgnitionNotImplemented() *V2UpdateHostIgnitionNotImplemented {

	return &V2UpdateHostIgnitionNotImplemented{}
}

// WithPayload adds the payload to the v2 update host ignition not implemented response
func (o *V2UpdateHostIgnitionNotImplemented) WithPayload(payload *models.Error) *V2UpdateHostIgnitionNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 update host ignition not implemented response
func (o *V2UpdateHostIgnitionNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2UpdateHostIgnitionNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
