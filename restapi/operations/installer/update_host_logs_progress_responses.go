// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// UpdateHostLogsProgressNoContentCode is the HTTP code returned for type UpdateHostLogsProgressNoContent
const UpdateHostLogsProgressNoContentCode int = 204

/*UpdateHostLogsProgressNoContent Update cluster install progress.

swagger:response updateHostLogsProgressNoContent
*/
type UpdateHostLogsProgressNoContent struct {
}

// NewUpdateHostLogsProgressNoContent creates UpdateHostLogsProgressNoContent with default headers values
func NewUpdateHostLogsProgressNoContent() *UpdateHostLogsProgressNoContent {

	return &UpdateHostLogsProgressNoContent{}
}

// WriteResponse to the client
func (o *UpdateHostLogsProgressNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// UpdateHostLogsProgressUnauthorizedCode is the HTTP code returned for type UpdateHostLogsProgressUnauthorized
const UpdateHostLogsProgressUnauthorizedCode int = 401

/*UpdateHostLogsProgressUnauthorized Unauthorized.

swagger:response updateHostLogsProgressUnauthorized
*/
type UpdateHostLogsProgressUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewUpdateHostLogsProgressUnauthorized creates UpdateHostLogsProgressUnauthorized with default headers values
func NewUpdateHostLogsProgressUnauthorized() *UpdateHostLogsProgressUnauthorized {

	return &UpdateHostLogsProgressUnauthorized{}
}

// WithPayload adds the payload to the update host logs progress unauthorized response
func (o *UpdateHostLogsProgressUnauthorized) WithPayload(payload *models.InfraError) *UpdateHostLogsProgressUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host logs progress unauthorized response
func (o *UpdateHostLogsProgressUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostLogsProgressUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostLogsProgressForbiddenCode is the HTTP code returned for type UpdateHostLogsProgressForbidden
const UpdateHostLogsProgressForbiddenCode int = 403

/*UpdateHostLogsProgressForbidden Forbidden.

swagger:response updateHostLogsProgressForbidden
*/
type UpdateHostLogsProgressForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewUpdateHostLogsProgressForbidden creates UpdateHostLogsProgressForbidden with default headers values
func NewUpdateHostLogsProgressForbidden() *UpdateHostLogsProgressForbidden {

	return &UpdateHostLogsProgressForbidden{}
}

// WithPayload adds the payload to the update host logs progress forbidden response
func (o *UpdateHostLogsProgressForbidden) WithPayload(payload *models.InfraError) *UpdateHostLogsProgressForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host logs progress forbidden response
func (o *UpdateHostLogsProgressForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostLogsProgressForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostLogsProgressNotFoundCode is the HTTP code returned for type UpdateHostLogsProgressNotFound
const UpdateHostLogsProgressNotFoundCode int = 404

/*UpdateHostLogsProgressNotFound Error.

swagger:response updateHostLogsProgressNotFound
*/
type UpdateHostLogsProgressNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostLogsProgressNotFound creates UpdateHostLogsProgressNotFound with default headers values
func NewUpdateHostLogsProgressNotFound() *UpdateHostLogsProgressNotFound {

	return &UpdateHostLogsProgressNotFound{}
}

// WithPayload adds the payload to the update host logs progress not found response
func (o *UpdateHostLogsProgressNotFound) WithPayload(payload *models.Error) *UpdateHostLogsProgressNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host logs progress not found response
func (o *UpdateHostLogsProgressNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostLogsProgressNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostLogsProgressMethodNotAllowedCode is the HTTP code returned for type UpdateHostLogsProgressMethodNotAllowed
const UpdateHostLogsProgressMethodNotAllowedCode int = 405

/*UpdateHostLogsProgressMethodNotAllowed Method Not Allowed.

swagger:response updateHostLogsProgressMethodNotAllowed
*/
type UpdateHostLogsProgressMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostLogsProgressMethodNotAllowed creates UpdateHostLogsProgressMethodNotAllowed with default headers values
func NewUpdateHostLogsProgressMethodNotAllowed() *UpdateHostLogsProgressMethodNotAllowed {

	return &UpdateHostLogsProgressMethodNotAllowed{}
}

// WithPayload adds the payload to the update host logs progress method not allowed response
func (o *UpdateHostLogsProgressMethodNotAllowed) WithPayload(payload *models.Error) *UpdateHostLogsProgressMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host logs progress method not allowed response
func (o *UpdateHostLogsProgressMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostLogsProgressMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostLogsProgressConflictCode is the HTTP code returned for type UpdateHostLogsProgressConflict
const UpdateHostLogsProgressConflictCode int = 409

/*UpdateHostLogsProgressConflict Error.

swagger:response updateHostLogsProgressConflict
*/
type UpdateHostLogsProgressConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostLogsProgressConflict creates UpdateHostLogsProgressConflict with default headers values
func NewUpdateHostLogsProgressConflict() *UpdateHostLogsProgressConflict {

	return &UpdateHostLogsProgressConflict{}
}

// WithPayload adds the payload to the update host logs progress conflict response
func (o *UpdateHostLogsProgressConflict) WithPayload(payload *models.Error) *UpdateHostLogsProgressConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host logs progress conflict response
func (o *UpdateHostLogsProgressConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostLogsProgressConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostLogsProgressInternalServerErrorCode is the HTTP code returned for type UpdateHostLogsProgressInternalServerError
const UpdateHostLogsProgressInternalServerErrorCode int = 500

/*UpdateHostLogsProgressInternalServerError Error.

swagger:response updateHostLogsProgressInternalServerError
*/
type UpdateHostLogsProgressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostLogsProgressInternalServerError creates UpdateHostLogsProgressInternalServerError with default headers values
func NewUpdateHostLogsProgressInternalServerError() *UpdateHostLogsProgressInternalServerError {

	return &UpdateHostLogsProgressInternalServerError{}
}

// WithPayload adds the payload to the update host logs progress internal server error response
func (o *UpdateHostLogsProgressInternalServerError) WithPayload(payload *models.Error) *UpdateHostLogsProgressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host logs progress internal server error response
func (o *UpdateHostLogsProgressInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostLogsProgressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostLogsProgressServiceUnavailableCode is the HTTP code returned for type UpdateHostLogsProgressServiceUnavailable
const UpdateHostLogsProgressServiceUnavailableCode int = 503

/*UpdateHostLogsProgressServiceUnavailable Unavailable.

swagger:response updateHostLogsProgressServiceUnavailable
*/
type UpdateHostLogsProgressServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateHostLogsProgressServiceUnavailable creates UpdateHostLogsProgressServiceUnavailable with default headers values
func NewUpdateHostLogsProgressServiceUnavailable() *UpdateHostLogsProgressServiceUnavailable {

	return &UpdateHostLogsProgressServiceUnavailable{}
}

// WithPayload adds the payload to the update host logs progress service unavailable response
func (o *UpdateHostLogsProgressServiceUnavailable) WithPayload(payload *models.Error) *UpdateHostLogsProgressServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host logs progress service unavailable response
func (o *UpdateHostLogsProgressServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostLogsProgressServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
