// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// PostStepReplyNoContentCode is the HTTP code returned for type PostStepReplyNoContent
const PostStepReplyNoContentCode int = 204

/*PostStepReplyNoContent Success.

swagger:response postStepReplyNoContent
*/
type PostStepReplyNoContent struct {
}

// NewPostStepReplyNoContent creates PostStepReplyNoContent with default headers values
func NewPostStepReplyNoContent() *PostStepReplyNoContent {

	return &PostStepReplyNoContent{}
}

// WriteResponse to the client
func (o *PostStepReplyNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostStepReplyBadRequestCode is the HTTP code returned for type PostStepReplyBadRequest
const PostStepReplyBadRequestCode int = 400

/*PostStepReplyBadRequest Error.

swagger:response postStepReplyBadRequest
*/
type PostStepReplyBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostStepReplyBadRequest creates PostStepReplyBadRequest with default headers values
func NewPostStepReplyBadRequest() *PostStepReplyBadRequest {

	return &PostStepReplyBadRequest{}
}

// WithPayload adds the payload to the post step reply bad request response
func (o *PostStepReplyBadRequest) WithPayload(payload *models.Error) *PostStepReplyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post step reply bad request response
func (o *PostStepReplyBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStepReplyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStepReplyUnauthorizedCode is the HTTP code returned for type PostStepReplyUnauthorized
const PostStepReplyUnauthorizedCode int = 401

/*PostStepReplyUnauthorized Unauthorized.

swagger:response postStepReplyUnauthorized
*/
type PostStepReplyUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewPostStepReplyUnauthorized creates PostStepReplyUnauthorized with default headers values
func NewPostStepReplyUnauthorized() *PostStepReplyUnauthorized {

	return &PostStepReplyUnauthorized{}
}

// WithPayload adds the payload to the post step reply unauthorized response
func (o *PostStepReplyUnauthorized) WithPayload(payload *models.InfraError) *PostStepReplyUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post step reply unauthorized response
func (o *PostStepReplyUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStepReplyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStepReplyForbiddenCode is the HTTP code returned for type PostStepReplyForbidden
const PostStepReplyForbiddenCode int = 403

/*PostStepReplyForbidden Forbidden.

swagger:response postStepReplyForbidden
*/
type PostStepReplyForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewPostStepReplyForbidden creates PostStepReplyForbidden with default headers values
func NewPostStepReplyForbidden() *PostStepReplyForbidden {

	return &PostStepReplyForbidden{}
}

// WithPayload adds the payload to the post step reply forbidden response
func (o *PostStepReplyForbidden) WithPayload(payload *models.InfraError) *PostStepReplyForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post step reply forbidden response
func (o *PostStepReplyForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStepReplyForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStepReplyNotFoundCode is the HTTP code returned for type PostStepReplyNotFound
const PostStepReplyNotFoundCode int = 404

/*PostStepReplyNotFound Error.

swagger:response postStepReplyNotFound
*/
type PostStepReplyNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostStepReplyNotFound creates PostStepReplyNotFound with default headers values
func NewPostStepReplyNotFound() *PostStepReplyNotFound {

	return &PostStepReplyNotFound{}
}

// WithPayload adds the payload to the post step reply not found response
func (o *PostStepReplyNotFound) WithPayload(payload *models.Error) *PostStepReplyNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post step reply not found response
func (o *PostStepReplyNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStepReplyNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStepReplyMethodNotAllowedCode is the HTTP code returned for type PostStepReplyMethodNotAllowed
const PostStepReplyMethodNotAllowedCode int = 405

/*PostStepReplyMethodNotAllowed Method Not Allowed.

swagger:response postStepReplyMethodNotAllowed
*/
type PostStepReplyMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostStepReplyMethodNotAllowed creates PostStepReplyMethodNotAllowed with default headers values
func NewPostStepReplyMethodNotAllowed() *PostStepReplyMethodNotAllowed {

	return &PostStepReplyMethodNotAllowed{}
}

// WithPayload adds the payload to the post step reply method not allowed response
func (o *PostStepReplyMethodNotAllowed) WithPayload(payload *models.Error) *PostStepReplyMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post step reply method not allowed response
func (o *PostStepReplyMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStepReplyMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStepReplyInternalServerErrorCode is the HTTP code returned for type PostStepReplyInternalServerError
const PostStepReplyInternalServerErrorCode int = 500

/*PostStepReplyInternalServerError Error.

swagger:response postStepReplyInternalServerError
*/
type PostStepReplyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostStepReplyInternalServerError creates PostStepReplyInternalServerError with default headers values
func NewPostStepReplyInternalServerError() *PostStepReplyInternalServerError {

	return &PostStepReplyInternalServerError{}
}

// WithPayload adds the payload to the post step reply internal server error response
func (o *PostStepReplyInternalServerError) WithPayload(payload *models.Error) *PostStepReplyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post step reply internal server error response
func (o *PostStepReplyInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStepReplyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostStepReplyServiceUnavailableCode is the HTTP code returned for type PostStepReplyServiceUnavailable
const PostStepReplyServiceUnavailableCode int = 503

/*PostStepReplyServiceUnavailable Unavailable.

swagger:response postStepReplyServiceUnavailable
*/
type PostStepReplyServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostStepReplyServiceUnavailable creates PostStepReplyServiceUnavailable with default headers values
func NewPostStepReplyServiceUnavailable() *PostStepReplyServiceUnavailable {

	return &PostStepReplyServiceUnavailable{}
}

// WithPayload adds the payload to the post step reply service unavailable response
func (o *PostStepReplyServiceUnavailable) WithPayload(payload *models.Error) *PostStepReplyServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post step reply service unavailable response
func (o *PostStepReplyServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostStepReplyServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
