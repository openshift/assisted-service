// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// UploadClusterIngressCertCreatedCode is the HTTP code returned for type UploadClusterIngressCertCreated
const UploadClusterIngressCertCreatedCode int = 201

/*UploadClusterIngressCertCreated Success.

swagger:response uploadClusterIngressCertCreated
*/
type UploadClusterIngressCertCreated struct {
}

// NewUploadClusterIngressCertCreated creates UploadClusterIngressCertCreated with default headers values
func NewUploadClusterIngressCertCreated() *UploadClusterIngressCertCreated {

	return &UploadClusterIngressCertCreated{}
}

// WriteResponse to the client
func (o *UploadClusterIngressCertCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// UploadClusterIngressCertBadRequestCode is the HTTP code returned for type UploadClusterIngressCertBadRequest
const UploadClusterIngressCertBadRequestCode int = 400

/*UploadClusterIngressCertBadRequest Error.

swagger:response uploadClusterIngressCertBadRequest
*/
type UploadClusterIngressCertBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadClusterIngressCertBadRequest creates UploadClusterIngressCertBadRequest with default headers values
func NewUploadClusterIngressCertBadRequest() *UploadClusterIngressCertBadRequest {

	return &UploadClusterIngressCertBadRequest{}
}

// WithPayload adds the payload to the upload cluster ingress cert bad request response
func (o *UploadClusterIngressCertBadRequest) WithPayload(payload *models.Error) *UploadClusterIngressCertBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload cluster ingress cert bad request response
func (o *UploadClusterIngressCertBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadClusterIngressCertBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadClusterIngressCertNotFoundCode is the HTTP code returned for type UploadClusterIngressCertNotFound
const UploadClusterIngressCertNotFoundCode int = 404

/*UploadClusterIngressCertNotFound Error.

swagger:response uploadClusterIngressCertNotFound
*/
type UploadClusterIngressCertNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadClusterIngressCertNotFound creates UploadClusterIngressCertNotFound with default headers values
func NewUploadClusterIngressCertNotFound() *UploadClusterIngressCertNotFound {

	return &UploadClusterIngressCertNotFound{}
}

// WithPayload adds the payload to the upload cluster ingress cert not found response
func (o *UploadClusterIngressCertNotFound) WithPayload(payload *models.Error) *UploadClusterIngressCertNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload cluster ingress cert not found response
func (o *UploadClusterIngressCertNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadClusterIngressCertNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadClusterIngressCertInternalServerErrorCode is the HTTP code returned for type UploadClusterIngressCertInternalServerError
const UploadClusterIngressCertInternalServerErrorCode int = 500

/*UploadClusterIngressCertInternalServerError Error.

swagger:response uploadClusterIngressCertInternalServerError
*/
type UploadClusterIngressCertInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadClusterIngressCertInternalServerError creates UploadClusterIngressCertInternalServerError with default headers values
func NewUploadClusterIngressCertInternalServerError() *UploadClusterIngressCertInternalServerError {

	return &UploadClusterIngressCertInternalServerError{}
}

// WithPayload adds the payload to the upload cluster ingress cert internal server error response
func (o *UploadClusterIngressCertInternalServerError) WithPayload(payload *models.Error) *UploadClusterIngressCertInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload cluster ingress cert internal server error response
func (o *UploadClusterIngressCertInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadClusterIngressCertInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
