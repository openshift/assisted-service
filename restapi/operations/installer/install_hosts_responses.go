// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// InstallHostsAcceptedCode is the HTTP code returned for type InstallHostsAccepted
const InstallHostsAcceptedCode int = 202

/*InstallHostsAccepted Success.

swagger:response installHostsAccepted
*/
type InstallHostsAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewInstallHostsAccepted creates InstallHostsAccepted with default headers values
func NewInstallHostsAccepted() *InstallHostsAccepted {

	return &InstallHostsAccepted{}
}

// WithPayload adds the payload to the install hosts accepted response
func (o *InstallHostsAccepted) WithPayload(payload *models.Cluster) *InstallHostsAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install hosts accepted response
func (o *InstallHostsAccepted) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostsAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostsBadRequestCode is the HTTP code returned for type InstallHostsBadRequest
const InstallHostsBadRequestCode int = 400

/*InstallHostsBadRequest Error.

swagger:response installHostsBadRequest
*/
type InstallHostsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInstallHostsBadRequest creates InstallHostsBadRequest with default headers values
func NewInstallHostsBadRequest() *InstallHostsBadRequest {

	return &InstallHostsBadRequest{}
}

// WithPayload adds the payload to the install hosts bad request response
func (o *InstallHostsBadRequest) WithPayload(payload *models.Error) *InstallHostsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install hosts bad request response
func (o *InstallHostsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostsUnauthorizedCode is the HTTP code returned for type InstallHostsUnauthorized
const InstallHostsUnauthorizedCode int = 401

/*InstallHostsUnauthorized Unauthorized.

swagger:response installHostsUnauthorized
*/
type InstallHostsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewInstallHostsUnauthorized creates InstallHostsUnauthorized with default headers values
func NewInstallHostsUnauthorized() *InstallHostsUnauthorized {

	return &InstallHostsUnauthorized{}
}

// WithPayload adds the payload to the install hosts unauthorized response
func (o *InstallHostsUnauthorized) WithPayload(payload *models.InfraError) *InstallHostsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install hosts unauthorized response
func (o *InstallHostsUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostsForbiddenCode is the HTTP code returned for type InstallHostsForbidden
const InstallHostsForbiddenCode int = 403

/*InstallHostsForbidden Forbidden.

swagger:response installHostsForbidden
*/
type InstallHostsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewInstallHostsForbidden creates InstallHostsForbidden with default headers values
func NewInstallHostsForbidden() *InstallHostsForbidden {

	return &InstallHostsForbidden{}
}

// WithPayload adds the payload to the install hosts forbidden response
func (o *InstallHostsForbidden) WithPayload(payload *models.InfraError) *InstallHostsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install hosts forbidden response
func (o *InstallHostsForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostsNotFoundCode is the HTTP code returned for type InstallHostsNotFound
const InstallHostsNotFoundCode int = 404

/*InstallHostsNotFound Error.

swagger:response installHostsNotFound
*/
type InstallHostsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInstallHostsNotFound creates InstallHostsNotFound with default headers values
func NewInstallHostsNotFound() *InstallHostsNotFound {

	return &InstallHostsNotFound{}
}

// WithPayload adds the payload to the install hosts not found response
func (o *InstallHostsNotFound) WithPayload(payload *models.Error) *InstallHostsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install hosts not found response
func (o *InstallHostsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostsMethodNotAllowedCode is the HTTP code returned for type InstallHostsMethodNotAllowed
const InstallHostsMethodNotAllowedCode int = 405

/*InstallHostsMethodNotAllowed Method Not Allowed.

swagger:response installHostsMethodNotAllowed
*/
type InstallHostsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInstallHostsMethodNotAllowed creates InstallHostsMethodNotAllowed with default headers values
func NewInstallHostsMethodNotAllowed() *InstallHostsMethodNotAllowed {

	return &InstallHostsMethodNotAllowed{}
}

// WithPayload adds the payload to the install hosts method not allowed response
func (o *InstallHostsMethodNotAllowed) WithPayload(payload *models.Error) *InstallHostsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install hosts method not allowed response
func (o *InstallHostsMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostsConflictCode is the HTTP code returned for type InstallHostsConflict
const InstallHostsConflictCode int = 409

/*InstallHostsConflict Error.

swagger:response installHostsConflict
*/
type InstallHostsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInstallHostsConflict creates InstallHostsConflict with default headers values
func NewInstallHostsConflict() *InstallHostsConflict {

	return &InstallHostsConflict{}
}

// WithPayload adds the payload to the install hosts conflict response
func (o *InstallHostsConflict) WithPayload(payload *models.Error) *InstallHostsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install hosts conflict response
func (o *InstallHostsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InstallHostsInternalServerErrorCode is the HTTP code returned for type InstallHostsInternalServerError
const InstallHostsInternalServerErrorCode int = 500

/*InstallHostsInternalServerError Error.

swagger:response installHostsInternalServerError
*/
type InstallHostsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInstallHostsInternalServerError creates InstallHostsInternalServerError with default headers values
func NewInstallHostsInternalServerError() *InstallHostsInternalServerError {

	return &InstallHostsInternalServerError{}
}

// WithPayload adds the payload to the install hosts internal server error response
func (o *InstallHostsInternalServerError) WithPayload(payload *models.Error) *InstallHostsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the install hosts internal server error response
func (o *InstallHostsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InstallHostsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
