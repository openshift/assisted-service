// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// GetClusterInstallConfigOKCode is the HTTP code returned for type GetClusterInstallConfigOK
const GetClusterInstallConfigOKCode int = 200

/*GetClusterInstallConfigOK Success.

swagger:response getClusterInstallConfigOK
*/
type GetClusterInstallConfigOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetClusterInstallConfigOK creates GetClusterInstallConfigOK with default headers values
func NewGetClusterInstallConfigOK() *GetClusterInstallConfigOK {

	return &GetClusterInstallConfigOK{}
}

// WithPayload adds the payload to the get cluster install config o k response
func (o *GetClusterInstallConfigOK) WithPayload(payload string) *GetClusterInstallConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster install config o k response
func (o *GetClusterInstallConfigOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterInstallConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetClusterInstallConfigUnauthorizedCode is the HTTP code returned for type GetClusterInstallConfigUnauthorized
const GetClusterInstallConfigUnauthorizedCode int = 401

/*GetClusterInstallConfigUnauthorized Unauthorized.

swagger:response getClusterInstallConfigUnauthorized
*/
type GetClusterInstallConfigUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetClusterInstallConfigUnauthorized creates GetClusterInstallConfigUnauthorized with default headers values
func NewGetClusterInstallConfigUnauthorized() *GetClusterInstallConfigUnauthorized {

	return &GetClusterInstallConfigUnauthorized{}
}

// WithPayload adds the payload to the get cluster install config unauthorized response
func (o *GetClusterInstallConfigUnauthorized) WithPayload(payload *models.InfraError) *GetClusterInstallConfigUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster install config unauthorized response
func (o *GetClusterInstallConfigUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterInstallConfigUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterInstallConfigForbiddenCode is the HTTP code returned for type GetClusterInstallConfigForbidden
const GetClusterInstallConfigForbiddenCode int = 403

/*GetClusterInstallConfigForbidden Forbidden.

swagger:response getClusterInstallConfigForbidden
*/
type GetClusterInstallConfigForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetClusterInstallConfigForbidden creates GetClusterInstallConfigForbidden with default headers values
func NewGetClusterInstallConfigForbidden() *GetClusterInstallConfigForbidden {

	return &GetClusterInstallConfigForbidden{}
}

// WithPayload adds the payload to the get cluster install config forbidden response
func (o *GetClusterInstallConfigForbidden) WithPayload(payload *models.InfraError) *GetClusterInstallConfigForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster install config forbidden response
func (o *GetClusterInstallConfigForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterInstallConfigForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterInstallConfigNotFoundCode is the HTTP code returned for type GetClusterInstallConfigNotFound
const GetClusterInstallConfigNotFoundCode int = 404

/*GetClusterInstallConfigNotFound Error.

swagger:response getClusterInstallConfigNotFound
*/
type GetClusterInstallConfigNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterInstallConfigNotFound creates GetClusterInstallConfigNotFound with default headers values
func NewGetClusterInstallConfigNotFound() *GetClusterInstallConfigNotFound {

	return &GetClusterInstallConfigNotFound{}
}

// WithPayload adds the payload to the get cluster install config not found response
func (o *GetClusterInstallConfigNotFound) WithPayload(payload *models.Error) *GetClusterInstallConfigNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster install config not found response
func (o *GetClusterInstallConfigNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterInstallConfigNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterInstallConfigMethodNotAllowedCode is the HTTP code returned for type GetClusterInstallConfigMethodNotAllowed
const GetClusterInstallConfigMethodNotAllowedCode int = 405

/*GetClusterInstallConfigMethodNotAllowed Method Not Allowed.

swagger:response getClusterInstallConfigMethodNotAllowed
*/
type GetClusterInstallConfigMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterInstallConfigMethodNotAllowed creates GetClusterInstallConfigMethodNotAllowed with default headers values
func NewGetClusterInstallConfigMethodNotAllowed() *GetClusterInstallConfigMethodNotAllowed {

	return &GetClusterInstallConfigMethodNotAllowed{}
}

// WithPayload adds the payload to the get cluster install config method not allowed response
func (o *GetClusterInstallConfigMethodNotAllowed) WithPayload(payload *models.Error) *GetClusterInstallConfigMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster install config method not allowed response
func (o *GetClusterInstallConfigMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterInstallConfigMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClusterInstallConfigInternalServerErrorCode is the HTTP code returned for type GetClusterInstallConfigInternalServerError
const GetClusterInstallConfigInternalServerErrorCode int = 500

/*GetClusterInstallConfigInternalServerError Error.

swagger:response getClusterInstallConfigInternalServerError
*/
type GetClusterInstallConfigInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterInstallConfigInternalServerError creates GetClusterInstallConfigInternalServerError with default headers values
func NewGetClusterInstallConfigInternalServerError() *GetClusterInstallConfigInternalServerError {

	return &GetClusterInstallConfigInternalServerError{}
}

// WithPayload adds the payload to the get cluster install config internal server error response
func (o *GetClusterInstallConfigInternalServerError) WithPayload(payload *models.Error) *GetClusterInstallConfigInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster install config internal server error response
func (o *GetClusterInstallConfigInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterInstallConfigInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
