// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// UpdateLogsProgressNoContentCode is the HTTP code returned for type UpdateLogsProgressNoContent
const UpdateLogsProgressNoContentCode int = 204

/*UpdateLogsProgressNoContent Update cluster install progress.

swagger:response updateLogsProgressNoContent
*/
type UpdateLogsProgressNoContent struct {
}

// NewUpdateLogsProgressNoContent creates UpdateLogsProgressNoContent with default headers values
func NewUpdateLogsProgressNoContent() *UpdateLogsProgressNoContent {

	return &UpdateLogsProgressNoContent{}
}

// WriteResponse to the client
func (o *UpdateLogsProgressNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// UpdateLogsProgressUnauthorizedCode is the HTTP code returned for type UpdateLogsProgressUnauthorized
const UpdateLogsProgressUnauthorizedCode int = 401

/*UpdateLogsProgressUnauthorized Unauthorized.

swagger:response updateLogsProgressUnauthorized
*/
type UpdateLogsProgressUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewUpdateLogsProgressUnauthorized creates UpdateLogsProgressUnauthorized with default headers values
func NewUpdateLogsProgressUnauthorized() *UpdateLogsProgressUnauthorized {

	return &UpdateLogsProgressUnauthorized{}
}

// WithPayload adds the payload to the update logs progress unauthorized response
func (o *UpdateLogsProgressUnauthorized) WithPayload(payload *models.InfraError) *UpdateLogsProgressUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update logs progress unauthorized response
func (o *UpdateLogsProgressUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLogsProgressUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateLogsProgressForbiddenCode is the HTTP code returned for type UpdateLogsProgressForbidden
const UpdateLogsProgressForbiddenCode int = 403

/*UpdateLogsProgressForbidden Forbidden.

swagger:response updateLogsProgressForbidden
*/
type UpdateLogsProgressForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewUpdateLogsProgressForbidden creates UpdateLogsProgressForbidden with default headers values
func NewUpdateLogsProgressForbidden() *UpdateLogsProgressForbidden {

	return &UpdateLogsProgressForbidden{}
}

// WithPayload adds the payload to the update logs progress forbidden response
func (o *UpdateLogsProgressForbidden) WithPayload(payload *models.InfraError) *UpdateLogsProgressForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update logs progress forbidden response
func (o *UpdateLogsProgressForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLogsProgressForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateLogsProgressNotFoundCode is the HTTP code returned for type UpdateLogsProgressNotFound
const UpdateLogsProgressNotFoundCode int = 404

/*UpdateLogsProgressNotFound Error.

swagger:response updateLogsProgressNotFound
*/
type UpdateLogsProgressNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateLogsProgressNotFound creates UpdateLogsProgressNotFound with default headers values
func NewUpdateLogsProgressNotFound() *UpdateLogsProgressNotFound {

	return &UpdateLogsProgressNotFound{}
}

// WithPayload adds the payload to the update logs progress not found response
func (o *UpdateLogsProgressNotFound) WithPayload(payload *models.Error) *UpdateLogsProgressNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update logs progress not found response
func (o *UpdateLogsProgressNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLogsProgressNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateLogsProgressMethodNotAllowedCode is the HTTP code returned for type UpdateLogsProgressMethodNotAllowed
const UpdateLogsProgressMethodNotAllowedCode int = 405

/*UpdateLogsProgressMethodNotAllowed Method Not Allowed.

swagger:response updateLogsProgressMethodNotAllowed
*/
type UpdateLogsProgressMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateLogsProgressMethodNotAllowed creates UpdateLogsProgressMethodNotAllowed with default headers values
func NewUpdateLogsProgressMethodNotAllowed() *UpdateLogsProgressMethodNotAllowed {

	return &UpdateLogsProgressMethodNotAllowed{}
}

// WithPayload adds the payload to the update logs progress method not allowed response
func (o *UpdateLogsProgressMethodNotAllowed) WithPayload(payload *models.Error) *UpdateLogsProgressMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update logs progress method not allowed response
func (o *UpdateLogsProgressMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLogsProgressMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateLogsProgressConflictCode is the HTTP code returned for type UpdateLogsProgressConflict
const UpdateLogsProgressConflictCode int = 409

/*UpdateLogsProgressConflict Error.

swagger:response updateLogsProgressConflict
*/
type UpdateLogsProgressConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateLogsProgressConflict creates UpdateLogsProgressConflict with default headers values
func NewUpdateLogsProgressConflict() *UpdateLogsProgressConflict {

	return &UpdateLogsProgressConflict{}
}

// WithPayload adds the payload to the update logs progress conflict response
func (o *UpdateLogsProgressConflict) WithPayload(payload *models.Error) *UpdateLogsProgressConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update logs progress conflict response
func (o *UpdateLogsProgressConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLogsProgressConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateLogsProgressInternalServerErrorCode is the HTTP code returned for type UpdateLogsProgressInternalServerError
const UpdateLogsProgressInternalServerErrorCode int = 500

/*UpdateLogsProgressInternalServerError Error.

swagger:response updateLogsProgressInternalServerError
*/
type UpdateLogsProgressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateLogsProgressInternalServerError creates UpdateLogsProgressInternalServerError with default headers values
func NewUpdateLogsProgressInternalServerError() *UpdateLogsProgressInternalServerError {

	return &UpdateLogsProgressInternalServerError{}
}

// WithPayload adds the payload to the update logs progress internal server error response
func (o *UpdateLogsProgressInternalServerError) WithPayload(payload *models.Error) *UpdateLogsProgressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update logs progress internal server error response
func (o *UpdateLogsProgressInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLogsProgressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateLogsProgressServiceUnavailableCode is the HTTP code returned for type UpdateLogsProgressServiceUnavailable
const UpdateLogsProgressServiceUnavailableCode int = 503

/*UpdateLogsProgressServiceUnavailable Unavailable.

swagger:response updateLogsProgressServiceUnavailable
*/
type UpdateLogsProgressServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateLogsProgressServiceUnavailable creates UpdateLogsProgressServiceUnavailable with default headers values
func NewUpdateLogsProgressServiceUnavailable() *UpdateLogsProgressServiceUnavailable {

	return &UpdateLogsProgressServiceUnavailable{}
}

// WithPayload adds the payload to the update logs progress service unavailable response
func (o *UpdateLogsProgressServiceUnavailable) WithPayload(payload *models.Error) *UpdateLogsProgressServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update logs progress service unavailable response
func (o *UpdateLogsProgressServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLogsProgressServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
