// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2DownloadInfraEnvFilesOKCode is the HTTP code returned for type V2DownloadInfraEnvFilesOK
const V2DownloadInfraEnvFilesOKCode int = 200

/*V2DownloadInfraEnvFilesOK Success.

swagger:response v2DownloadInfraEnvFilesOK
*/
type V2DownloadInfraEnvFilesOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesOK creates V2DownloadInfraEnvFilesOK with default headers values
func NewV2DownloadInfraEnvFilesOK() *V2DownloadInfraEnvFilesOK {

	return &V2DownloadInfraEnvFilesOK{}
}

// WithPayload adds the payload to the v2 download infra env files o k response
func (o *V2DownloadInfraEnvFilesOK) WithPayload(payload io.ReadCloser) *V2DownloadInfraEnvFilesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files o k response
func (o *V2DownloadInfraEnvFilesOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// V2DownloadInfraEnvFilesBadRequestCode is the HTTP code returned for type V2DownloadInfraEnvFilesBadRequest
const V2DownloadInfraEnvFilesBadRequestCode int = 400

/*V2DownloadInfraEnvFilesBadRequest Bad Request.

swagger:response v2DownloadInfraEnvFilesBadRequest
*/
type V2DownloadInfraEnvFilesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesBadRequest creates V2DownloadInfraEnvFilesBadRequest with default headers values
func NewV2DownloadInfraEnvFilesBadRequest() *V2DownloadInfraEnvFilesBadRequest {

	return &V2DownloadInfraEnvFilesBadRequest{}
}

// WithPayload adds the payload to the v2 download infra env files bad request response
func (o *V2DownloadInfraEnvFilesBadRequest) WithPayload(payload *models.Error) *V2DownloadInfraEnvFilesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files bad request response
func (o *V2DownloadInfraEnvFilesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2DownloadInfraEnvFilesUnauthorizedCode is the HTTP code returned for type V2DownloadInfraEnvFilesUnauthorized
const V2DownloadInfraEnvFilesUnauthorizedCode int = 401

/*V2DownloadInfraEnvFilesUnauthorized Unauthorized.

swagger:response v2DownloadInfraEnvFilesUnauthorized
*/
type V2DownloadInfraEnvFilesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesUnauthorized creates V2DownloadInfraEnvFilesUnauthorized with default headers values
func NewV2DownloadInfraEnvFilesUnauthorized() *V2DownloadInfraEnvFilesUnauthorized {

	return &V2DownloadInfraEnvFilesUnauthorized{}
}

// WithPayload adds the payload to the v2 download infra env files unauthorized response
func (o *V2DownloadInfraEnvFilesUnauthorized) WithPayload(payload *models.InfraError) *V2DownloadInfraEnvFilesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files unauthorized response
func (o *V2DownloadInfraEnvFilesUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2DownloadInfraEnvFilesForbiddenCode is the HTTP code returned for type V2DownloadInfraEnvFilesForbidden
const V2DownloadInfraEnvFilesForbiddenCode int = 403

/*V2DownloadInfraEnvFilesForbidden Forbidden.

swagger:response v2DownloadInfraEnvFilesForbidden
*/
type V2DownloadInfraEnvFilesForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesForbidden creates V2DownloadInfraEnvFilesForbidden with default headers values
func NewV2DownloadInfraEnvFilesForbidden() *V2DownloadInfraEnvFilesForbidden {

	return &V2DownloadInfraEnvFilesForbidden{}
}

// WithPayload adds the payload to the v2 download infra env files forbidden response
func (o *V2DownloadInfraEnvFilesForbidden) WithPayload(payload *models.InfraError) *V2DownloadInfraEnvFilesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files forbidden response
func (o *V2DownloadInfraEnvFilesForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2DownloadInfraEnvFilesNotFoundCode is the HTTP code returned for type V2DownloadInfraEnvFilesNotFound
const V2DownloadInfraEnvFilesNotFoundCode int = 404

/*V2DownloadInfraEnvFilesNotFound Error.

swagger:response v2DownloadInfraEnvFilesNotFound
*/
type V2DownloadInfraEnvFilesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesNotFound creates V2DownloadInfraEnvFilesNotFound with default headers values
func NewV2DownloadInfraEnvFilesNotFound() *V2DownloadInfraEnvFilesNotFound {

	return &V2DownloadInfraEnvFilesNotFound{}
}

// WithPayload adds the payload to the v2 download infra env files not found response
func (o *V2DownloadInfraEnvFilesNotFound) WithPayload(payload *models.Error) *V2DownloadInfraEnvFilesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files not found response
func (o *V2DownloadInfraEnvFilesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2DownloadInfraEnvFilesMethodNotAllowedCode is the HTTP code returned for type V2DownloadInfraEnvFilesMethodNotAllowed
const V2DownloadInfraEnvFilesMethodNotAllowedCode int = 405

/*V2DownloadInfraEnvFilesMethodNotAllowed Method Not Allowed.

swagger:response v2DownloadInfraEnvFilesMethodNotAllowed
*/
type V2DownloadInfraEnvFilesMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesMethodNotAllowed creates V2DownloadInfraEnvFilesMethodNotAllowed with default headers values
func NewV2DownloadInfraEnvFilesMethodNotAllowed() *V2DownloadInfraEnvFilesMethodNotAllowed {

	return &V2DownloadInfraEnvFilesMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 download infra env files method not allowed response
func (o *V2DownloadInfraEnvFilesMethodNotAllowed) WithPayload(payload *models.Error) *V2DownloadInfraEnvFilesMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files method not allowed response
func (o *V2DownloadInfraEnvFilesMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2DownloadInfraEnvFilesConflictCode is the HTTP code returned for type V2DownloadInfraEnvFilesConflict
const V2DownloadInfraEnvFilesConflictCode int = 409

/*V2DownloadInfraEnvFilesConflict Error.

swagger:response v2DownloadInfraEnvFilesConflict
*/
type V2DownloadInfraEnvFilesConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesConflict creates V2DownloadInfraEnvFilesConflict with default headers values
func NewV2DownloadInfraEnvFilesConflict() *V2DownloadInfraEnvFilesConflict {

	return &V2DownloadInfraEnvFilesConflict{}
}

// WithPayload adds the payload to the v2 download infra env files conflict response
func (o *V2DownloadInfraEnvFilesConflict) WithPayload(payload *models.Error) *V2DownloadInfraEnvFilesConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files conflict response
func (o *V2DownloadInfraEnvFilesConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2DownloadInfraEnvFilesInternalServerErrorCode is the HTTP code returned for type V2DownloadInfraEnvFilesInternalServerError
const V2DownloadInfraEnvFilesInternalServerErrorCode int = 500

/*V2DownloadInfraEnvFilesInternalServerError Error.

swagger:response v2DownloadInfraEnvFilesInternalServerError
*/
type V2DownloadInfraEnvFilesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesInternalServerError creates V2DownloadInfraEnvFilesInternalServerError with default headers values
func NewV2DownloadInfraEnvFilesInternalServerError() *V2DownloadInfraEnvFilesInternalServerError {

	return &V2DownloadInfraEnvFilesInternalServerError{}
}

// WithPayload adds the payload to the v2 download infra env files internal server error response
func (o *V2DownloadInfraEnvFilesInternalServerError) WithPayload(payload *models.Error) *V2DownloadInfraEnvFilesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files internal server error response
func (o *V2DownloadInfraEnvFilesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2DownloadInfraEnvFilesNotImplementedCode is the HTTP code returned for type V2DownloadInfraEnvFilesNotImplemented
const V2DownloadInfraEnvFilesNotImplementedCode int = 501

/*V2DownloadInfraEnvFilesNotImplemented Not implemented.

swagger:response v2DownloadInfraEnvFilesNotImplemented
*/
type V2DownloadInfraEnvFilesNotImplemented struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesNotImplemented creates V2DownloadInfraEnvFilesNotImplemented with default headers values
func NewV2DownloadInfraEnvFilesNotImplemented() *V2DownloadInfraEnvFilesNotImplemented {

	return &V2DownloadInfraEnvFilesNotImplemented{}
}

// WithPayload adds the payload to the v2 download infra env files not implemented response
func (o *V2DownloadInfraEnvFilesNotImplemented) WithPayload(payload *models.Error) *V2DownloadInfraEnvFilesNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files not implemented response
func (o *V2DownloadInfraEnvFilesNotImplemented) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2DownloadInfraEnvFilesServiceUnavailableCode is the HTTP code returned for type V2DownloadInfraEnvFilesServiceUnavailable
const V2DownloadInfraEnvFilesServiceUnavailableCode int = 503

/*V2DownloadInfraEnvFilesServiceUnavailable Unavailable.

swagger:response v2DownloadInfraEnvFilesServiceUnavailable
*/
type V2DownloadInfraEnvFilesServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2DownloadInfraEnvFilesServiceUnavailable creates V2DownloadInfraEnvFilesServiceUnavailable with default headers values
func NewV2DownloadInfraEnvFilesServiceUnavailable() *V2DownloadInfraEnvFilesServiceUnavailable {

	return &V2DownloadInfraEnvFilesServiceUnavailable{}
}

// WithPayload adds the payload to the v2 download infra env files service unavailable response
func (o *V2DownloadInfraEnvFilesServiceUnavailable) WithPayload(payload *models.Error) *V2DownloadInfraEnvFilesServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 download infra env files service unavailable response
func (o *V2DownloadInfraEnvFilesServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2DownloadInfraEnvFilesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
