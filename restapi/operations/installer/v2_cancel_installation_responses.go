// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// V2CancelInstallationAcceptedCode is the HTTP code returned for type V2CancelInstallationAccepted
const V2CancelInstallationAcceptedCode int = 202

/*V2CancelInstallationAccepted Success.

swagger:response v2CancelInstallationAccepted
*/
type V2CancelInstallationAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewV2CancelInstallationAccepted creates V2CancelInstallationAccepted with default headers values
func NewV2CancelInstallationAccepted() *V2CancelInstallationAccepted {

	return &V2CancelInstallationAccepted{}
}

// WithPayload adds the payload to the v2 cancel installation accepted response
func (o *V2CancelInstallationAccepted) WithPayload(payload *models.Cluster) *V2CancelInstallationAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 cancel installation accepted response
func (o *V2CancelInstallationAccepted) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2CancelInstallationAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2CancelInstallationUnauthorizedCode is the HTTP code returned for type V2CancelInstallationUnauthorized
const V2CancelInstallationUnauthorizedCode int = 401

/*V2CancelInstallationUnauthorized Unauthorized.

swagger:response v2CancelInstallationUnauthorized
*/
type V2CancelInstallationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2CancelInstallationUnauthorized creates V2CancelInstallationUnauthorized with default headers values
func NewV2CancelInstallationUnauthorized() *V2CancelInstallationUnauthorized {

	return &V2CancelInstallationUnauthorized{}
}

// WithPayload adds the payload to the v2 cancel installation unauthorized response
func (o *V2CancelInstallationUnauthorized) WithPayload(payload *models.InfraError) *V2CancelInstallationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 cancel installation unauthorized response
func (o *V2CancelInstallationUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2CancelInstallationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2CancelInstallationForbiddenCode is the HTTP code returned for type V2CancelInstallationForbidden
const V2CancelInstallationForbiddenCode int = 403

/*V2CancelInstallationForbidden Forbidden.

swagger:response v2CancelInstallationForbidden
*/
type V2CancelInstallationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewV2CancelInstallationForbidden creates V2CancelInstallationForbidden with default headers values
func NewV2CancelInstallationForbidden() *V2CancelInstallationForbidden {

	return &V2CancelInstallationForbidden{}
}

// WithPayload adds the payload to the v2 cancel installation forbidden response
func (o *V2CancelInstallationForbidden) WithPayload(payload *models.InfraError) *V2CancelInstallationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 cancel installation forbidden response
func (o *V2CancelInstallationForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2CancelInstallationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2CancelInstallationNotFoundCode is the HTTP code returned for type V2CancelInstallationNotFound
const V2CancelInstallationNotFoundCode int = 404

/*V2CancelInstallationNotFound Error.

swagger:response v2CancelInstallationNotFound
*/
type V2CancelInstallationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2CancelInstallationNotFound creates V2CancelInstallationNotFound with default headers values
func NewV2CancelInstallationNotFound() *V2CancelInstallationNotFound {

	return &V2CancelInstallationNotFound{}
}

// WithPayload adds the payload to the v2 cancel installation not found response
func (o *V2CancelInstallationNotFound) WithPayload(payload *models.Error) *V2CancelInstallationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 cancel installation not found response
func (o *V2CancelInstallationNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2CancelInstallationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2CancelInstallationMethodNotAllowedCode is the HTTP code returned for type V2CancelInstallationMethodNotAllowed
const V2CancelInstallationMethodNotAllowedCode int = 405

/*V2CancelInstallationMethodNotAllowed Method Not Allowed.

swagger:response v2CancelInstallationMethodNotAllowed
*/
type V2CancelInstallationMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2CancelInstallationMethodNotAllowed creates V2CancelInstallationMethodNotAllowed with default headers values
func NewV2CancelInstallationMethodNotAllowed() *V2CancelInstallationMethodNotAllowed {

	return &V2CancelInstallationMethodNotAllowed{}
}

// WithPayload adds the payload to the v2 cancel installation method not allowed response
func (o *V2CancelInstallationMethodNotAllowed) WithPayload(payload *models.Error) *V2CancelInstallationMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 cancel installation method not allowed response
func (o *V2CancelInstallationMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2CancelInstallationMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2CancelInstallationConflictCode is the HTTP code returned for type V2CancelInstallationConflict
const V2CancelInstallationConflictCode int = 409

/*V2CancelInstallationConflict Error.

swagger:response v2CancelInstallationConflict
*/
type V2CancelInstallationConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2CancelInstallationConflict creates V2CancelInstallationConflict with default headers values
func NewV2CancelInstallationConflict() *V2CancelInstallationConflict {

	return &V2CancelInstallationConflict{}
}

// WithPayload adds the payload to the v2 cancel installation conflict response
func (o *V2CancelInstallationConflict) WithPayload(payload *models.Error) *V2CancelInstallationConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 cancel installation conflict response
func (o *V2CancelInstallationConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2CancelInstallationConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// V2CancelInstallationInternalServerErrorCode is the HTTP code returned for type V2CancelInstallationInternalServerError
const V2CancelInstallationInternalServerErrorCode int = 500

/*V2CancelInstallationInternalServerError Error.

swagger:response v2CancelInstallationInternalServerError
*/
type V2CancelInstallationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewV2CancelInstallationInternalServerError creates V2CancelInstallationInternalServerError with default headers values
func NewV2CancelInstallationInternalServerError() *V2CancelInstallationInternalServerError {

	return &V2CancelInstallationInternalServerError{}
}

// WithPayload adds the payload to the v2 cancel installation internal server error response
func (o *V2CancelInstallationInternalServerError) WithPayload(payload *models.Error) *V2CancelInstallationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the v2 cancel installation internal server error response
func (o *V2CancelInstallationInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *V2CancelInstallationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
