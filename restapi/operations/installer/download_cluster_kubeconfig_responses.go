// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// DownloadClusterKubeconfigOKCode is the HTTP code returned for type DownloadClusterKubeconfigOK
const DownloadClusterKubeconfigOKCode int = 200

/*DownloadClusterKubeconfigOK Success.

swagger:response downloadClusterKubeconfigOK
*/
type DownloadClusterKubeconfigOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewDownloadClusterKubeconfigOK creates DownloadClusterKubeconfigOK with default headers values
func NewDownloadClusterKubeconfigOK() *DownloadClusterKubeconfigOK {

	return &DownloadClusterKubeconfigOK{}
}

// WithPayload adds the payload to the download cluster kubeconfig o k response
func (o *DownloadClusterKubeconfigOK) WithPayload(payload io.ReadCloser) *DownloadClusterKubeconfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster kubeconfig o k response
func (o *DownloadClusterKubeconfigOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterKubeconfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DownloadClusterKubeconfigUnauthorizedCode is the HTTP code returned for type DownloadClusterKubeconfigUnauthorized
const DownloadClusterKubeconfigUnauthorizedCode int = 401

/*DownloadClusterKubeconfigUnauthorized Unauthorized.

swagger:response downloadClusterKubeconfigUnauthorized
*/
type DownloadClusterKubeconfigUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDownloadClusterKubeconfigUnauthorized creates DownloadClusterKubeconfigUnauthorized with default headers values
func NewDownloadClusterKubeconfigUnauthorized() *DownloadClusterKubeconfigUnauthorized {

	return &DownloadClusterKubeconfigUnauthorized{}
}

// WithPayload adds the payload to the download cluster kubeconfig unauthorized response
func (o *DownloadClusterKubeconfigUnauthorized) WithPayload(payload *models.InfraError) *DownloadClusterKubeconfigUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster kubeconfig unauthorized response
func (o *DownloadClusterKubeconfigUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterKubeconfigUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterKubeconfigForbiddenCode is the HTTP code returned for type DownloadClusterKubeconfigForbidden
const DownloadClusterKubeconfigForbiddenCode int = 403

/*DownloadClusterKubeconfigForbidden Forbidden.

swagger:response downloadClusterKubeconfigForbidden
*/
type DownloadClusterKubeconfigForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewDownloadClusterKubeconfigForbidden creates DownloadClusterKubeconfigForbidden with default headers values
func NewDownloadClusterKubeconfigForbidden() *DownloadClusterKubeconfigForbidden {

	return &DownloadClusterKubeconfigForbidden{}
}

// WithPayload adds the payload to the download cluster kubeconfig forbidden response
func (o *DownloadClusterKubeconfigForbidden) WithPayload(payload *models.InfraError) *DownloadClusterKubeconfigForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster kubeconfig forbidden response
func (o *DownloadClusterKubeconfigForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterKubeconfigForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterKubeconfigNotFoundCode is the HTTP code returned for type DownloadClusterKubeconfigNotFound
const DownloadClusterKubeconfigNotFoundCode int = 404

/*DownloadClusterKubeconfigNotFound Error.

swagger:response downloadClusterKubeconfigNotFound
*/
type DownloadClusterKubeconfigNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterKubeconfigNotFound creates DownloadClusterKubeconfigNotFound with default headers values
func NewDownloadClusterKubeconfigNotFound() *DownloadClusterKubeconfigNotFound {

	return &DownloadClusterKubeconfigNotFound{}
}

// WithPayload adds the payload to the download cluster kubeconfig not found response
func (o *DownloadClusterKubeconfigNotFound) WithPayload(payload *models.Error) *DownloadClusterKubeconfigNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster kubeconfig not found response
func (o *DownloadClusterKubeconfigNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterKubeconfigNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterKubeconfigMethodNotAllowedCode is the HTTP code returned for type DownloadClusterKubeconfigMethodNotAllowed
const DownloadClusterKubeconfigMethodNotAllowedCode int = 405

/*DownloadClusterKubeconfigMethodNotAllowed Method Not Allowed.

swagger:response downloadClusterKubeconfigMethodNotAllowed
*/
type DownloadClusterKubeconfigMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterKubeconfigMethodNotAllowed creates DownloadClusterKubeconfigMethodNotAllowed with default headers values
func NewDownloadClusterKubeconfigMethodNotAllowed() *DownloadClusterKubeconfigMethodNotAllowed {

	return &DownloadClusterKubeconfigMethodNotAllowed{}
}

// WithPayload adds the payload to the download cluster kubeconfig method not allowed response
func (o *DownloadClusterKubeconfigMethodNotAllowed) WithPayload(payload *models.Error) *DownloadClusterKubeconfigMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster kubeconfig method not allowed response
func (o *DownloadClusterKubeconfigMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterKubeconfigMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterKubeconfigConflictCode is the HTTP code returned for type DownloadClusterKubeconfigConflict
const DownloadClusterKubeconfigConflictCode int = 409

/*DownloadClusterKubeconfigConflict Error.

swagger:response downloadClusterKubeconfigConflict
*/
type DownloadClusterKubeconfigConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterKubeconfigConflict creates DownloadClusterKubeconfigConflict with default headers values
func NewDownloadClusterKubeconfigConflict() *DownloadClusterKubeconfigConflict {

	return &DownloadClusterKubeconfigConflict{}
}

// WithPayload adds the payload to the download cluster kubeconfig conflict response
func (o *DownloadClusterKubeconfigConflict) WithPayload(payload *models.Error) *DownloadClusterKubeconfigConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster kubeconfig conflict response
func (o *DownloadClusterKubeconfigConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterKubeconfigConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadClusterKubeconfigInternalServerErrorCode is the HTTP code returned for type DownloadClusterKubeconfigInternalServerError
const DownloadClusterKubeconfigInternalServerErrorCode int = 500

/*DownloadClusterKubeconfigInternalServerError Error.

swagger:response downloadClusterKubeconfigInternalServerError
*/
type DownloadClusterKubeconfigInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDownloadClusterKubeconfigInternalServerError creates DownloadClusterKubeconfigInternalServerError with default headers values
func NewDownloadClusterKubeconfigInternalServerError() *DownloadClusterKubeconfigInternalServerError {

	return &DownloadClusterKubeconfigInternalServerError{}
}

// WithPayload adds the payload to the download cluster kubeconfig internal server error response
func (o *DownloadClusterKubeconfigInternalServerError) WithPayload(payload *models.Error) *DownloadClusterKubeconfigInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download cluster kubeconfig internal server error response
func (o *DownloadClusterKubeconfigInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadClusterKubeconfigInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
