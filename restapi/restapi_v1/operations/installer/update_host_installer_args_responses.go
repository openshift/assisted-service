// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	v1 "github.com/openshift/assisted-service/models/v1"
)

// UpdateHostInstallerArgsCreatedCode is the HTTP code returned for type UpdateHostInstallerArgsCreated
const UpdateHostInstallerArgsCreatedCode int = 201

/*UpdateHostInstallerArgsCreated Success.

swagger:response updateHostInstallerArgsCreated
*/
type UpdateHostInstallerArgsCreated struct {

	/*
	  In: Body
	*/
	Payload *v1.Host `json:"body,omitempty"`
}

// NewUpdateHostInstallerArgsCreated creates UpdateHostInstallerArgsCreated with default headers values
func NewUpdateHostInstallerArgsCreated() *UpdateHostInstallerArgsCreated {

	return &UpdateHostInstallerArgsCreated{}
}

// WithPayload adds the payload to the update host installer args created response
func (o *UpdateHostInstallerArgsCreated) WithPayload(payload *v1.Host) *UpdateHostInstallerArgsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host installer args created response
func (o *UpdateHostInstallerArgsCreated) SetPayload(payload *v1.Host) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostInstallerArgsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostInstallerArgsBadRequestCode is the HTTP code returned for type UpdateHostInstallerArgsBadRequest
const UpdateHostInstallerArgsBadRequestCode int = 400

/*UpdateHostInstallerArgsBadRequest Error.

swagger:response updateHostInstallerArgsBadRequest
*/
type UpdateHostInstallerArgsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateHostInstallerArgsBadRequest creates UpdateHostInstallerArgsBadRequest with default headers values
func NewUpdateHostInstallerArgsBadRequest() *UpdateHostInstallerArgsBadRequest {

	return &UpdateHostInstallerArgsBadRequest{}
}

// WithPayload adds the payload to the update host installer args bad request response
func (o *UpdateHostInstallerArgsBadRequest) WithPayload(payload *v1.Error) *UpdateHostInstallerArgsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host installer args bad request response
func (o *UpdateHostInstallerArgsBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostInstallerArgsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostInstallerArgsUnauthorizedCode is the HTTP code returned for type UpdateHostInstallerArgsUnauthorized
const UpdateHostInstallerArgsUnauthorizedCode int = 401

/*UpdateHostInstallerArgsUnauthorized Unauthorized.

swagger:response updateHostInstallerArgsUnauthorized
*/
type UpdateHostInstallerArgsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.InfraError `json:"body,omitempty"`
}

// NewUpdateHostInstallerArgsUnauthorized creates UpdateHostInstallerArgsUnauthorized with default headers values
func NewUpdateHostInstallerArgsUnauthorized() *UpdateHostInstallerArgsUnauthorized {

	return &UpdateHostInstallerArgsUnauthorized{}
}

// WithPayload adds the payload to the update host installer args unauthorized response
func (o *UpdateHostInstallerArgsUnauthorized) WithPayload(payload *v1.InfraError) *UpdateHostInstallerArgsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host installer args unauthorized response
func (o *UpdateHostInstallerArgsUnauthorized) SetPayload(payload *v1.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostInstallerArgsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostInstallerArgsForbiddenCode is the HTTP code returned for type UpdateHostInstallerArgsForbidden
const UpdateHostInstallerArgsForbiddenCode int = 403

/*UpdateHostInstallerArgsForbidden Forbidden.

swagger:response updateHostInstallerArgsForbidden
*/
type UpdateHostInstallerArgsForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.InfraError `json:"body,omitempty"`
}

// NewUpdateHostInstallerArgsForbidden creates UpdateHostInstallerArgsForbidden with default headers values
func NewUpdateHostInstallerArgsForbidden() *UpdateHostInstallerArgsForbidden {

	return &UpdateHostInstallerArgsForbidden{}
}

// WithPayload adds the payload to the update host installer args forbidden response
func (o *UpdateHostInstallerArgsForbidden) WithPayload(payload *v1.InfraError) *UpdateHostInstallerArgsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host installer args forbidden response
func (o *UpdateHostInstallerArgsForbidden) SetPayload(payload *v1.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostInstallerArgsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostInstallerArgsNotFoundCode is the HTTP code returned for type UpdateHostInstallerArgsNotFound
const UpdateHostInstallerArgsNotFoundCode int = 404

/*UpdateHostInstallerArgsNotFound Error.

swagger:response updateHostInstallerArgsNotFound
*/
type UpdateHostInstallerArgsNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateHostInstallerArgsNotFound creates UpdateHostInstallerArgsNotFound with default headers values
func NewUpdateHostInstallerArgsNotFound() *UpdateHostInstallerArgsNotFound {

	return &UpdateHostInstallerArgsNotFound{}
}

// WithPayload adds the payload to the update host installer args not found response
func (o *UpdateHostInstallerArgsNotFound) WithPayload(payload *v1.Error) *UpdateHostInstallerArgsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host installer args not found response
func (o *UpdateHostInstallerArgsNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostInstallerArgsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostInstallerArgsMethodNotAllowedCode is the HTTP code returned for type UpdateHostInstallerArgsMethodNotAllowed
const UpdateHostInstallerArgsMethodNotAllowedCode int = 405

/*UpdateHostInstallerArgsMethodNotAllowed Method Not Allowed.

swagger:response updateHostInstallerArgsMethodNotAllowed
*/
type UpdateHostInstallerArgsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateHostInstallerArgsMethodNotAllowed creates UpdateHostInstallerArgsMethodNotAllowed with default headers values
func NewUpdateHostInstallerArgsMethodNotAllowed() *UpdateHostInstallerArgsMethodNotAllowed {

	return &UpdateHostInstallerArgsMethodNotAllowed{}
}

// WithPayload adds the payload to the update host installer args method not allowed response
func (o *UpdateHostInstallerArgsMethodNotAllowed) WithPayload(payload *v1.Error) *UpdateHostInstallerArgsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host installer args method not allowed response
func (o *UpdateHostInstallerArgsMethodNotAllowed) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostInstallerArgsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostInstallerArgsConflictCode is the HTTP code returned for type UpdateHostInstallerArgsConflict
const UpdateHostInstallerArgsConflictCode int = 409

/*UpdateHostInstallerArgsConflict Error.

swagger:response updateHostInstallerArgsConflict
*/
type UpdateHostInstallerArgsConflict struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateHostInstallerArgsConflict creates UpdateHostInstallerArgsConflict with default headers values
func NewUpdateHostInstallerArgsConflict() *UpdateHostInstallerArgsConflict {

	return &UpdateHostInstallerArgsConflict{}
}

// WithPayload adds the payload to the update host installer args conflict response
func (o *UpdateHostInstallerArgsConflict) WithPayload(payload *v1.Error) *UpdateHostInstallerArgsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host installer args conflict response
func (o *UpdateHostInstallerArgsConflict) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostInstallerArgsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateHostInstallerArgsInternalServerErrorCode is the HTTP code returned for type UpdateHostInstallerArgsInternalServerError
const UpdateHostInstallerArgsInternalServerErrorCode int = 500

/*UpdateHostInstallerArgsInternalServerError Error.

swagger:response updateHostInstallerArgsInternalServerError
*/
type UpdateHostInstallerArgsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateHostInstallerArgsInternalServerError creates UpdateHostInstallerArgsInternalServerError with default headers values
func NewUpdateHostInstallerArgsInternalServerError() *UpdateHostInstallerArgsInternalServerError {

	return &UpdateHostInstallerArgsInternalServerError{}
}

// WithPayload adds the payload to the update host installer args internal server error response
func (o *UpdateHostInstallerArgsInternalServerError) WithPayload(payload *v1.Error) *UpdateHostInstallerArgsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update host installer args internal server error response
func (o *UpdateHostInstallerArgsInternalServerError) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateHostInstallerArgsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
