// Code generated by go-swagger; DO NOT EDIT.

package manifests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	v1 "github.com/openshift/assisted-service/models/v1"
)

// DeleteClusterManifestOKCode is the HTTP code returned for type DeleteClusterManifestOK
const DeleteClusterManifestOKCode int = 200

/*DeleteClusterManifestOK Success.

swagger:response deleteClusterManifestOK
*/
type DeleteClusterManifestOK struct {
}

// NewDeleteClusterManifestOK creates DeleteClusterManifestOK with default headers values
func NewDeleteClusterManifestOK() *DeleteClusterManifestOK {

	return &DeleteClusterManifestOK{}
}

// WriteResponse to the client
func (o *DeleteClusterManifestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteClusterManifestUnauthorizedCode is the HTTP code returned for type DeleteClusterManifestUnauthorized
const DeleteClusterManifestUnauthorizedCode int = 401

/*DeleteClusterManifestUnauthorized Unauthorized.

swagger:response deleteClusterManifestUnauthorized
*/
type DeleteClusterManifestUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.InfraError `json:"body,omitempty"`
}

// NewDeleteClusterManifestUnauthorized creates DeleteClusterManifestUnauthorized with default headers values
func NewDeleteClusterManifestUnauthorized() *DeleteClusterManifestUnauthorized {

	return &DeleteClusterManifestUnauthorized{}
}

// WithPayload adds the payload to the delete cluster manifest unauthorized response
func (o *DeleteClusterManifestUnauthorized) WithPayload(payload *v1.InfraError) *DeleteClusterManifestUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cluster manifest unauthorized response
func (o *DeleteClusterManifestUnauthorized) SetPayload(payload *v1.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteClusterManifestUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteClusterManifestForbiddenCode is the HTTP code returned for type DeleteClusterManifestForbidden
const DeleteClusterManifestForbiddenCode int = 403

/*DeleteClusterManifestForbidden Forbidden.

swagger:response deleteClusterManifestForbidden
*/
type DeleteClusterManifestForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.InfraError `json:"body,omitempty"`
}

// NewDeleteClusterManifestForbidden creates DeleteClusterManifestForbidden with default headers values
func NewDeleteClusterManifestForbidden() *DeleteClusterManifestForbidden {

	return &DeleteClusterManifestForbidden{}
}

// WithPayload adds the payload to the delete cluster manifest forbidden response
func (o *DeleteClusterManifestForbidden) WithPayload(payload *v1.InfraError) *DeleteClusterManifestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cluster manifest forbidden response
func (o *DeleteClusterManifestForbidden) SetPayload(payload *v1.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteClusterManifestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteClusterManifestNotFoundCode is the HTTP code returned for type DeleteClusterManifestNotFound
const DeleteClusterManifestNotFoundCode int = 404

/*DeleteClusterManifestNotFound Error.

swagger:response deleteClusterManifestNotFound
*/
type DeleteClusterManifestNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteClusterManifestNotFound creates DeleteClusterManifestNotFound with default headers values
func NewDeleteClusterManifestNotFound() *DeleteClusterManifestNotFound {

	return &DeleteClusterManifestNotFound{}
}

// WithPayload adds the payload to the delete cluster manifest not found response
func (o *DeleteClusterManifestNotFound) WithPayload(payload *v1.Error) *DeleteClusterManifestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cluster manifest not found response
func (o *DeleteClusterManifestNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteClusterManifestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteClusterManifestMethodNotAllowedCode is the HTTP code returned for type DeleteClusterManifestMethodNotAllowed
const DeleteClusterManifestMethodNotAllowedCode int = 405

/*DeleteClusterManifestMethodNotAllowed Method Not Allowed.

swagger:response deleteClusterManifestMethodNotAllowed
*/
type DeleteClusterManifestMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteClusterManifestMethodNotAllowed creates DeleteClusterManifestMethodNotAllowed with default headers values
func NewDeleteClusterManifestMethodNotAllowed() *DeleteClusterManifestMethodNotAllowed {

	return &DeleteClusterManifestMethodNotAllowed{}
}

// WithPayload adds the payload to the delete cluster manifest method not allowed response
func (o *DeleteClusterManifestMethodNotAllowed) WithPayload(payload *v1.Error) *DeleteClusterManifestMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cluster manifest method not allowed response
func (o *DeleteClusterManifestMethodNotAllowed) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteClusterManifestMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteClusterManifestConflictCode is the HTTP code returned for type DeleteClusterManifestConflict
const DeleteClusterManifestConflictCode int = 409

/*DeleteClusterManifestConflict Error.

swagger:response deleteClusterManifestConflict
*/
type DeleteClusterManifestConflict struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteClusterManifestConflict creates DeleteClusterManifestConflict with default headers values
func NewDeleteClusterManifestConflict() *DeleteClusterManifestConflict {

	return &DeleteClusterManifestConflict{}
}

// WithPayload adds the payload to the delete cluster manifest conflict response
func (o *DeleteClusterManifestConflict) WithPayload(payload *v1.Error) *DeleteClusterManifestConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cluster manifest conflict response
func (o *DeleteClusterManifestConflict) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteClusterManifestConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteClusterManifestInternalServerErrorCode is the HTTP code returned for type DeleteClusterManifestInternalServerError
const DeleteClusterManifestInternalServerErrorCode int = 500

/*DeleteClusterManifestInternalServerError Error.

swagger:response deleteClusterManifestInternalServerError
*/
type DeleteClusterManifestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteClusterManifestInternalServerError creates DeleteClusterManifestInternalServerError with default headers values
func NewDeleteClusterManifestInternalServerError() *DeleteClusterManifestInternalServerError {

	return &DeleteClusterManifestInternalServerError{}
}

// WithPayload adds the payload to the delete cluster manifest internal server error response
func (o *DeleteClusterManifestInternalServerError) WithPayload(payload *v1.Error) *DeleteClusterManifestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cluster manifest internal server error response
func (o *DeleteClusterManifestInternalServerError) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteClusterManifestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
