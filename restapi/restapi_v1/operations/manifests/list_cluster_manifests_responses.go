// Code generated by go-swagger; DO NOT EDIT.

package manifests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	v1 "github.com/openshift/assisted-service/models/v1"
)

// ListClusterManifestsOKCode is the HTTP code returned for type ListClusterManifestsOK
const ListClusterManifestsOKCode int = 200

/*ListClusterManifestsOK Success.

swagger:response listClusterManifestsOK
*/
type ListClusterManifestsOK struct {

	/*
	  In: Body
	*/
	Payload v1.ListManifests `json:"body,omitempty"`
}

// NewListClusterManifestsOK creates ListClusterManifestsOK with default headers values
func NewListClusterManifestsOK() *ListClusterManifestsOK {

	return &ListClusterManifestsOK{}
}

// WithPayload adds the payload to the list cluster manifests o k response
func (o *ListClusterManifestsOK) WithPayload(payload v1.ListManifests) *ListClusterManifestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cluster manifests o k response
func (o *ListClusterManifestsOK) SetPayload(payload v1.ListManifests) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListClusterManifestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = v1.ListManifests{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListClusterManifestsUnauthorizedCode is the HTTP code returned for type ListClusterManifestsUnauthorized
const ListClusterManifestsUnauthorizedCode int = 401

/*ListClusterManifestsUnauthorized Unauthorized.

swagger:response listClusterManifestsUnauthorized
*/
type ListClusterManifestsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.InfraError `json:"body,omitempty"`
}

// NewListClusterManifestsUnauthorized creates ListClusterManifestsUnauthorized with default headers values
func NewListClusterManifestsUnauthorized() *ListClusterManifestsUnauthorized {

	return &ListClusterManifestsUnauthorized{}
}

// WithPayload adds the payload to the list cluster manifests unauthorized response
func (o *ListClusterManifestsUnauthorized) WithPayload(payload *v1.InfraError) *ListClusterManifestsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cluster manifests unauthorized response
func (o *ListClusterManifestsUnauthorized) SetPayload(payload *v1.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListClusterManifestsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListClusterManifestsForbiddenCode is the HTTP code returned for type ListClusterManifestsForbidden
const ListClusterManifestsForbiddenCode int = 403

/*ListClusterManifestsForbidden Forbidden.

swagger:response listClusterManifestsForbidden
*/
type ListClusterManifestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.InfraError `json:"body,omitempty"`
}

// NewListClusterManifestsForbidden creates ListClusterManifestsForbidden with default headers values
func NewListClusterManifestsForbidden() *ListClusterManifestsForbidden {

	return &ListClusterManifestsForbidden{}
}

// WithPayload adds the payload to the list cluster manifests forbidden response
func (o *ListClusterManifestsForbidden) WithPayload(payload *v1.InfraError) *ListClusterManifestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cluster manifests forbidden response
func (o *ListClusterManifestsForbidden) SetPayload(payload *v1.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListClusterManifestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListClusterManifestsNotFoundCode is the HTTP code returned for type ListClusterManifestsNotFound
const ListClusterManifestsNotFoundCode int = 404

/*ListClusterManifestsNotFound Error.

swagger:response listClusterManifestsNotFound
*/
type ListClusterManifestsNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewListClusterManifestsNotFound creates ListClusterManifestsNotFound with default headers values
func NewListClusterManifestsNotFound() *ListClusterManifestsNotFound {

	return &ListClusterManifestsNotFound{}
}

// WithPayload adds the payload to the list cluster manifests not found response
func (o *ListClusterManifestsNotFound) WithPayload(payload *v1.Error) *ListClusterManifestsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cluster manifests not found response
func (o *ListClusterManifestsNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListClusterManifestsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListClusterManifestsMethodNotAllowedCode is the HTTP code returned for type ListClusterManifestsMethodNotAllowed
const ListClusterManifestsMethodNotAllowedCode int = 405

/*ListClusterManifestsMethodNotAllowed Method Not Allowed.

swagger:response listClusterManifestsMethodNotAllowed
*/
type ListClusterManifestsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewListClusterManifestsMethodNotAllowed creates ListClusterManifestsMethodNotAllowed with default headers values
func NewListClusterManifestsMethodNotAllowed() *ListClusterManifestsMethodNotAllowed {

	return &ListClusterManifestsMethodNotAllowed{}
}

// WithPayload adds the payload to the list cluster manifests method not allowed response
func (o *ListClusterManifestsMethodNotAllowed) WithPayload(payload *v1.Error) *ListClusterManifestsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cluster manifests method not allowed response
func (o *ListClusterManifestsMethodNotAllowed) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListClusterManifestsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListClusterManifestsConflictCode is the HTTP code returned for type ListClusterManifestsConflict
const ListClusterManifestsConflictCode int = 409

/*ListClusterManifestsConflict Error.

swagger:response listClusterManifestsConflict
*/
type ListClusterManifestsConflict struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewListClusterManifestsConflict creates ListClusterManifestsConflict with default headers values
func NewListClusterManifestsConflict() *ListClusterManifestsConflict {

	return &ListClusterManifestsConflict{}
}

// WithPayload adds the payload to the list cluster manifests conflict response
func (o *ListClusterManifestsConflict) WithPayload(payload *v1.Error) *ListClusterManifestsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cluster manifests conflict response
func (o *ListClusterManifestsConflict) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListClusterManifestsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListClusterManifestsInternalServerErrorCode is the HTTP code returned for type ListClusterManifestsInternalServerError
const ListClusterManifestsInternalServerErrorCode int = 500

/*ListClusterManifestsInternalServerError Error.

swagger:response listClusterManifestsInternalServerError
*/
type ListClusterManifestsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewListClusterManifestsInternalServerError creates ListClusterManifestsInternalServerError with default headers values
func NewListClusterManifestsInternalServerError() *ListClusterManifestsInternalServerError {

	return &ListClusterManifestsInternalServerError{}
}

// WithPayload adds the payload to the list cluster manifests internal server error response
func (o *ListClusterManifestsInternalServerError) WithPayload(payload *v1.Error) *ListClusterManifestsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cluster manifests internal server error response
func (o *ListClusterManifestsInternalServerError) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListClusterManifestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
