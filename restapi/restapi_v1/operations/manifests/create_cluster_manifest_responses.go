// Code generated by go-swagger; DO NOT EDIT.

package manifests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	v1 "github.com/openshift/assisted-service/models/v1"
)

// CreateClusterManifestCreatedCode is the HTTP code returned for type CreateClusterManifestCreated
const CreateClusterManifestCreatedCode int = 201

/*CreateClusterManifestCreated Success.

swagger:response createClusterManifestCreated
*/
type CreateClusterManifestCreated struct {

	/*
	  In: Body
	*/
	Payload *v1.Manifest `json:"body,omitempty"`
}

// NewCreateClusterManifestCreated creates CreateClusterManifestCreated with default headers values
func NewCreateClusterManifestCreated() *CreateClusterManifestCreated {

	return &CreateClusterManifestCreated{}
}

// WithPayload adds the payload to the create cluster manifest created response
func (o *CreateClusterManifestCreated) WithPayload(payload *v1.Manifest) *CreateClusterManifestCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster manifest created response
func (o *CreateClusterManifestCreated) SetPayload(payload *v1.Manifest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterManifestCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateClusterManifestBadRequestCode is the HTTP code returned for type CreateClusterManifestBadRequest
const CreateClusterManifestBadRequestCode int = 400

/*CreateClusterManifestBadRequest Error.

swagger:response createClusterManifestBadRequest
*/
type CreateClusterManifestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewCreateClusterManifestBadRequest creates CreateClusterManifestBadRequest with default headers values
func NewCreateClusterManifestBadRequest() *CreateClusterManifestBadRequest {

	return &CreateClusterManifestBadRequest{}
}

// WithPayload adds the payload to the create cluster manifest bad request response
func (o *CreateClusterManifestBadRequest) WithPayload(payload *v1.Error) *CreateClusterManifestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster manifest bad request response
func (o *CreateClusterManifestBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterManifestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateClusterManifestUnauthorizedCode is the HTTP code returned for type CreateClusterManifestUnauthorized
const CreateClusterManifestUnauthorizedCode int = 401

/*CreateClusterManifestUnauthorized Unauthorized.

swagger:response createClusterManifestUnauthorized
*/
type CreateClusterManifestUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.InfraError `json:"body,omitempty"`
}

// NewCreateClusterManifestUnauthorized creates CreateClusterManifestUnauthorized with default headers values
func NewCreateClusterManifestUnauthorized() *CreateClusterManifestUnauthorized {

	return &CreateClusterManifestUnauthorized{}
}

// WithPayload adds the payload to the create cluster manifest unauthorized response
func (o *CreateClusterManifestUnauthorized) WithPayload(payload *v1.InfraError) *CreateClusterManifestUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster manifest unauthorized response
func (o *CreateClusterManifestUnauthorized) SetPayload(payload *v1.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterManifestUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateClusterManifestForbiddenCode is the HTTP code returned for type CreateClusterManifestForbidden
const CreateClusterManifestForbiddenCode int = 403

/*CreateClusterManifestForbidden Forbidden.

swagger:response createClusterManifestForbidden
*/
type CreateClusterManifestForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.InfraError `json:"body,omitempty"`
}

// NewCreateClusterManifestForbidden creates CreateClusterManifestForbidden with default headers values
func NewCreateClusterManifestForbidden() *CreateClusterManifestForbidden {

	return &CreateClusterManifestForbidden{}
}

// WithPayload adds the payload to the create cluster manifest forbidden response
func (o *CreateClusterManifestForbidden) WithPayload(payload *v1.InfraError) *CreateClusterManifestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster manifest forbidden response
func (o *CreateClusterManifestForbidden) SetPayload(payload *v1.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterManifestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateClusterManifestNotFoundCode is the HTTP code returned for type CreateClusterManifestNotFound
const CreateClusterManifestNotFoundCode int = 404

/*CreateClusterManifestNotFound Error.

swagger:response createClusterManifestNotFound
*/
type CreateClusterManifestNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewCreateClusterManifestNotFound creates CreateClusterManifestNotFound with default headers values
func NewCreateClusterManifestNotFound() *CreateClusterManifestNotFound {

	return &CreateClusterManifestNotFound{}
}

// WithPayload adds the payload to the create cluster manifest not found response
func (o *CreateClusterManifestNotFound) WithPayload(payload *v1.Error) *CreateClusterManifestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster manifest not found response
func (o *CreateClusterManifestNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterManifestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateClusterManifestMethodNotAllowedCode is the HTTP code returned for type CreateClusterManifestMethodNotAllowed
const CreateClusterManifestMethodNotAllowedCode int = 405

/*CreateClusterManifestMethodNotAllowed Method Not Allowed.

swagger:response createClusterManifestMethodNotAllowed
*/
type CreateClusterManifestMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewCreateClusterManifestMethodNotAllowed creates CreateClusterManifestMethodNotAllowed with default headers values
func NewCreateClusterManifestMethodNotAllowed() *CreateClusterManifestMethodNotAllowed {

	return &CreateClusterManifestMethodNotAllowed{}
}

// WithPayload adds the payload to the create cluster manifest method not allowed response
func (o *CreateClusterManifestMethodNotAllowed) WithPayload(payload *v1.Error) *CreateClusterManifestMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster manifest method not allowed response
func (o *CreateClusterManifestMethodNotAllowed) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterManifestMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateClusterManifestConflictCode is the HTTP code returned for type CreateClusterManifestConflict
const CreateClusterManifestConflictCode int = 409

/*CreateClusterManifestConflict Error.

swagger:response createClusterManifestConflict
*/
type CreateClusterManifestConflict struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewCreateClusterManifestConflict creates CreateClusterManifestConflict with default headers values
func NewCreateClusterManifestConflict() *CreateClusterManifestConflict {

	return &CreateClusterManifestConflict{}
}

// WithPayload adds the payload to the create cluster manifest conflict response
func (o *CreateClusterManifestConflict) WithPayload(payload *v1.Error) *CreateClusterManifestConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster manifest conflict response
func (o *CreateClusterManifestConflict) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterManifestConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateClusterManifestInternalServerErrorCode is the HTTP code returned for type CreateClusterManifestInternalServerError
const CreateClusterManifestInternalServerErrorCode int = 500

/*CreateClusterManifestInternalServerError Error.

swagger:response createClusterManifestInternalServerError
*/
type CreateClusterManifestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewCreateClusterManifestInternalServerError creates CreateClusterManifestInternalServerError with default headers values
func NewCreateClusterManifestInternalServerError() *CreateClusterManifestInternalServerError {

	return &CreateClusterManifestInternalServerError{}
}

// WithPayload adds the payload to the create cluster manifest internal server error response
func (o *CreateClusterManifestInternalServerError) WithPayload(payload *v1.Error) *CreateClusterManifestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cluster manifest internal server error response
func (o *CreateClusterManifestInternalServerError) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateClusterManifestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
