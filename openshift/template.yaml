---
parameters:
- name: ASSISTED_SERVICE_IMAGE
  value: quay.io/app-sre/assisted-service
- name: IMAGE_TAG
  value: ''
  required: true
- name: SERVICE_BASE_URL
  value: ''
  required: true
- name: IMAGE_SERVICE_BASE_URL
  value: ""
- name: BASE_DNS_DOMAINS # example: name1:id1/provider1,name2:id2/provider2
  value: ''
  required: false
- name: OS_IMAGES
  value: '[{"openshift_version":"4.9","cpu_architecture":"x86_64","url":"https://mirror.openshift.com/pub/openshift-v4/x86_64/dependencies/rhcos/4.9/4.9.45/rhcos-4.9.45-x86_64-live.x86_64.iso","version":"49.84.202207192205-0"},{"openshift_version":"4.10","cpu_architecture":"x86_64","url":"https://mirror.openshift.com/pub/openshift-v4/x86_64/dependencies/rhcos/4.10/4.10.37/rhcos-4.10.37-x86_64-live.x86_64.iso","version":"410.84.202210040010-0"},{"openshift_version":"4.10","cpu_architecture":"arm64","url":"https://mirror.openshift.com/pub/openshift-v4/aarch64/dependencies/rhcos/4.10/4.10.37/rhcos-4.10.37-aarch64-live.aarch64.iso","version":"410.84.202210040011-0"},{"openshift_version":"4.11","cpu_architecture":"x86_64","url":"https://mirror.openshift.com/pub/openshift-v4/x86_64/dependencies/rhcos/4.11/4.11.48/rhcos-4.11.48-x86_64-live.x86_64.iso","version":"411.86.202308081056-0"},{"openshift_version":"4.11","cpu_architecture":"arm64","url":"https://mirror.openshift.com/pub/openshift-v4/aarch64/dependencies/rhcos/4.11/4.11.48/rhcos-4.11.48-aarch64-live.aarch64.iso","version":"411.86.202308081056-0"},{"openshift_version":"4.11","cpu_architecture":"s390x","url":"https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/4.11/4.11.48/rhcos-4.11.48-s390x-live.s390x.iso","version":"411.86.202308081056-0"},{"openshift_version":"4.11","cpu_architecture":"ppc64le","url":"https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/4.11/4.11.48/rhcos-4.11.48-ppc64le-live.ppc64le.iso","version":"411.86.202308081056-0"},{"openshift_version":"4.12","cpu_architecture":"x86_64","url":"https://mirror.openshift.com/pub/openshift-v4/x86_64/dependencies/rhcos/4.12/4.12.30/rhcos-4.12.30-x86_64-live.x86_64.iso","version":"412.86.202308081039-0"},{"openshift_version":"4.12","cpu_architecture":"arm64","url":"https://mirror.openshift.com/pub/openshift-v4/aarch64/dependencies/rhcos/4.12/4.12.30/rhcos-4.12.30-aarch64-live.aarch64.iso","version":"412.86.202308081039-0"},{"openshift_version":"4.12","cpu_architecture":"s390x","url":"https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/4.12/4.12.30/rhcos-4.12.30-s390x-live.s390x.iso","version":"412.86.202308081039-0"},{"openshift_version":"4.12","cpu_architecture":"ppc64le","url":"https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/4.12/4.12.30/rhcos-4.12.30-ppc64le-live.ppc64le.iso","version":"412.86.202308081039-0"},{"openshift_version":"4.13","cpu_architecture":"x86_64","url":"https://mirror.openshift.com/pub/openshift-v4/x86_64/dependencies/rhcos/4.13/4.13.10/rhcos-4.13.10-x86_64-live.x86_64.iso","version":"413.92.202307260246-0"},{"openshift_version":"4.13","cpu_architecture":"arm64","url":"https://mirror.openshift.com/pub/openshift-v4/aarch64/dependencies/rhcos/4.13/4.13.10/rhcos-4.13.10-aarch64-live.aarch64.iso","version":"413.92.202307260246-0"},{"openshift_version":"4.13","cpu_architecture":"ppc64le","url":"https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/4.13/4.13.10/rhcos-4.13.10-ppc64le-live.ppc64le.iso","version":"413.92.202307260246-0"},{"openshift_version":"4.13","cpu_architecture":"s390x","url":"https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/4.13/4.13.10/rhcos-4.13.10-s390x-live.s390x.iso","version":"413.92.202307260246-0"},{"openshift_version":"4.14","cpu_architecture":"x86_64","url":"https://mirror.openshift.com/pub/openshift-v4/x86_64/dependencies/rhcos/pre-release/4.14.0-rc.0/rhcos-4.14.0-rc.0-x86_64-live.x86_64.iso","version":"414.92.202308032115-0"},{"openshift_version":"4.14","cpu_architecture":"arm64","url":"https://mirror.openshift.com/pub/openshift-v4/aarch64/dependencies/rhcos/pre-release/4.14.0-rc.0/rhcos-4.14.0-rc.0-aarch64-live.aarch64.iso","version":"414.92.202308032115-0"},{"openshift_version":"4.14","cpu_architecture":"ppc64le","url":"https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/pre-release/4.14.0-rc.0/rhcos-4.14.0-rc.0-ppc64le-live.ppc64le.iso","version":"414.92.202308032115-0"},{"openshift_version":"4.14","cpu_architecture":"s390x","url":"https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/pre-release/4.14.0-rc.0/rhcos-4.14.0-rc.0-s390x-live.s390x.iso","version":"414.92.202308032115-0"}]' # os images
  required: false
- name: RELEASE_IMAGES
  value: '[{"openshift_version":"4.9","cpu_architecture":"x86_64","cpu_architectures":["x86_64"],"url":"quay.io/openshift-release-dev/ocp-release:4.9.59-x86_64","version":"4.9.59"},{"openshift_version":"4.10","cpu_architecture":"x86_64","cpu_architectures":["x86_64"],"url":"quay.io/openshift-release-dev/ocp-release:4.10.67-x86_64","version":"4.10.67"},{"openshift_version":"4.10","cpu_architecture":"arm64","cpu_architectures":["arm64"],"url":"quay.io/openshift-release-dev/ocp-release:4.10.67-aarch64","version":"4.10.67"},{"openshift_version":"4.11","cpu_architecture":"x86_64","cpu_architectures":["x86_64"],"url":"quay.io/openshift-release-dev/ocp-release:4.11.50-x86_64","version":"4.11.50"},{"openshift_version":"4.11","cpu_architecture":"arm64","cpu_architectures":["arm64"],"url":"quay.io/openshift-release-dev/ocp-release:4.11.50-aarch64","version":"4.11.50"},{"openshift_version":"4.11.0-multi","cpu_architecture":"multi","cpu_architectures":["x86_64","arm64","ppc64le","s390x"],"url":"quay.io/openshift-release-dev/ocp-release:4.11.0-multi","version":"4.11.0-multi"},{"openshift_version":"4.12","cpu_architecture":"x86_64","cpu_architectures":["x86_64"],"url":"quay.io/openshift-release-dev/ocp-release:4.12.37-x86_64","version":"4.12.37"},{"openshift_version":"4.12","cpu_architecture":"arm64","cpu_architectures":["arm64"],"url":"quay.io/openshift-release-dev/ocp-release:4.12.37-aarch64","version":"4.12.37"},{"openshift_version":"4.12-multi","cpu_architecture":"multi","cpu_architectures":["x86_64","arm64","ppc64le","s390x"],"url":"quay.io/openshift-release-dev/ocp-release:4.12.37-multi","version":"4.12.37-multi"},{"openshift_version":"4.13","cpu_architecture":"x86_64","cpu_architectures":["x86_64"],"url":"quay.io/openshift-release-dev/ocp-release:4.13.15-x86_64","version":"4.13.15","default":true},{"openshift_version":"4.13","cpu_architecture":"arm64","cpu_architectures":["arm64"],"url":"quay.io/openshift-release-dev/ocp-release:4.13.15-aarch64","version":"4.13.15"},{"openshift_version":"4.13-multi","cpu_architecture":"multi","cpu_architectures":["x86_64","arm64","ppc64le","s390x"],"url":"quay.io/openshift-release-dev/ocp-release:4.13.15-multi","version":"4.13.15-multi"},{"openshift_version":"4.14","cpu_architecture":"x86_64","cpu_architectures":["x86_64"],"url":"quay.io/openshift-release-dev/ocp-release:4.14.0-rc.6-x86_64","support_level":"beta","version":"4.14.0-rc.6"},{"openshift_version":"4.14","cpu_architecture":"arm64","cpu_architectures":["arm64"],"url":"quay.io/openshift-release-dev/ocp-release:4.14.0-rc.6-aarch64","support_level":"beta","version":"4.14.0-rc.6"},{"openshift_version":"4.14-multi","cpu_architecture":"multi","cpu_architectures":["x86_64","arm64","ppc64le","s390x"],"url":"quay.io/openshift-release-dev/ocp-release:4.14.0-rc.6-multi","support_level":"beta","version":"4.14.0-rc.6-multi"}]' # release images
  required: false
- name: MUST_GATHER_IMAGES
  value: '{"4.8-x86_64":{"cnv":"registry.redhat.io/container-native-virtualization/cnv-must-gather-rhel8:v2.6.5","ocs":"registry.redhat.io/ocs4/ocs-must-gather-rhel8:v4.8","lso":"registry.redhat.io/openshift4/ose-local-storage-mustgather-rhel8:v4.8"},"4.9-x86_64":{"cnv":"registry.redhat.io/container-native-virtualization/cnv-must-gather-rhel8:v4.9.3","ocs":"registry.redhat.io/odf4/ocs-must-gather-rhel8:v4.9","lso":"registry.redhat.io/openshift4/ose-local-storage-mustgather-rhel8:v4.9"},"4.10-x86_64":{"cnv":"registry.redhat.io/container-native-virtualization/cnv-must-gather-rhel8:v4.10.0","ocs":"registry.redhat.io/odf4/ocs-must-gather-rhel8:v4.10","lso":"registry.redhat.io/openshift4/ose-local-storage-mustgather-rhel8:v4.10"},"4.10-arm64":{"ocs":"registry.redhat.io/odf4/ocs-must-gather-rhel8:v4.10","lso":"registry.redhat.io/openshift4/ose-local-storage-mustgather-rhel8:v4.10"}}' # must-gather images
  required: false
- name: JWKS_URL # example https://example.com/.well-known/jwks.json
  value: ''
  required: true
- name: ALLOWED_DOMAINS
  value: ''
  required: true
- name: AUTH_TYPE
  value: ''
  required: true
- name: OCM_BASE_URL
  value: ''
  required: true
- name: S3_USE_SSL
  value: "true"
- name: ENABLE_AUTO_ASSIGN
  value: "true"
  required: false
- name: HW_VALIDATOR_REQUIREMENTS
  value: ''
  required: true
- name: INSTALLER_IMAGE
  value: ''
  required: true
- name: CONTROLLER_IMAGE
  value: ''
  required: true
- name: AGENT_DOCKER_IMAGE
  value: ''
  required: true
- name: INSTALL_RH_CA
  value: "false"
  required: true
- name: REGISTRY_CREDS
  value: ""
- name: LOG_LEVEL
  value: "info"
  required: true
- name: REPLICAS_COUNT
  value: "3"
- name: RELEASE_TAG
  value: ''
- name: AGENT_TIMEOUT_START
  value: '3m'
- name: ADMIN_USERS
  value: ''
  required: false
- name: PUBLIC_CONTAINER_REGISTRIES
  value: ""
- name: CHECK_CLUSTER_VERSION
  value: "true"
- name: IPV6_SUPPORT
  value: "true"
  required: false
- name: ENABLE_SINGLE_NODE_DNSMASQ
  value: "true"
  required: false
- name: DISK_ENCRYPTION_SUPPORT
  value: "true"
  required: false
- name: ENABLE_DEREGISTER_INACTIVE_GC
  value: "false"
- name: ENABLE_DELETE_UNREGISTER_GC
  value: "true"
- name: DB_MAX_IDLE_CONNECTIONS
  value: "50"
  required: false
- name: DB_MAX_OPEN_CONNECTIONS
  value: "600"
- name: DISABLED_HOST_VALIDATIONS
  value: ""
  required: false
- name: LIVENESS_VALIDATION_TIMEOUT
  value: "5m"
  required: false
- name: DISABLED_STEPS
  value: ""
  required: false
- name: MAX_GC_INFRAENVS_PER_INTERVAL
  value: "100"
  required: false
- name: INFRAENV_DELETED_INACTIVE_AFTER
  value: "480h"
  required: false
- name: INFRAENV_DELETION_WORKER_INTERVAL
  value: "1h"
  required: false
- name: CNV_SNO_INSTALL_HPP
  value: "true"
  required: false
- name: ENABLE_ORG_TENANCY
  value: "false"
  required: false
- name: ENABLE_ORG_BASED_FEATURE_GATES
  value: "false"
  required: false
- name: WORK_DIR
  value: "/data/"
  required: false
- name: MEMORY_LIMIT
  value: "2.55G"
  required: false
- name: CPU_LIMIT
  value: "500m"
  required: false
- name: EPHEMERAL_STORAGE_LIMIT
  value: "6G"
  required: false
- name: MEMORY_REQUEST
  value: "1.7G"
  required: false
- name: CPU_REQUEST
  value: "300m"
  required: false
- name: EPHEMERAL_STORAGE_REQUEST
  value: "5G"
  required: false
- name: ISO_IMAGE_TYPE
  value: "minimal-iso"
  required: false
- name: ENABLE_UPGRADE_AGENT
  value: "true"
  required: false
- name: READINESS_PROBE_INITIAL_DELAY_SECONDS
  value: "15"
  required: false
- name: LIVENESS_PROBE_INITIAL_DELAY_SECONDS
  value: "30"
  required: false
- name: ENVOY_IMAGE
  value: "quay.io/app-sre/envoyproxy"
  required: false
- name: ENVOY_TAG
  value: "v1.24.0"
  required: false
- name: ENVOY_MEMORY_REQUEST
  value: 256Mi
- name: ENVOY_CPU_REQUEST
  value: 10m
- name: ENVOY_MEMORY_LIMIT
  value: 512Mi
- name: ENVOY_TIMEOUT
  value: "15s"
- name: SVC_TARGET_PORT
  value: "8900"
- name: KAFKA_SASL_MECHANISM
  value: "PLAIN"
- name: KAFKA_CREDENTIALS_SECRET_NAME
  required: false
  value: assisted-installer-event-stream
- name: KAFKA_EVENT_STREAM_TOPIC
  required: false
  value: events-stream
- name: KAFKA_BOOTSTRAP_SERVER_SECRET_KEY
  value: bootstrap_server_host
- name: KAFKA_BOOTSTRAP_SERVER_SECRET_NAME
  value: assisted-installer-event-stream
- name: KAFKA_PASSWORD_SECRET_KEY
  value: client_secret
- name: KAFKA_PASSWORD_SECRET_NAME
  value: assisted-installer-event-stream
- name: KAFKA_USERNAME_SECRET_KEY
  value: client_id
- name: KAFKA_USERNAME_SECRET_NAME
  value: assisted-installer-event-stream
- name: ENABLE_EVENT_STREAMING
  required: false
  value: "true"
- name: ENABLE_REJECT_UNKNOWN_FIELDS
  required: false
  value: "true"
- name: ENABLE_DATA_COLLECTION
  value: "false"
  required: false
- name: INSTALLER_CACHE_CAPACITY
  value: "6442450944"
  required: false
- name: ENABLE_OKD_SUPPORT
  value: "false"
- name: ENVOY_CONFIGMAP_NAME
  value: assisted-service-envoy-config
apiVersion: v1
kind: Template
metadata:
  name: assisted-installer
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: assisted-service
  spec:
    selector:
      matchLabels:
        app: assisted-service
    replicas: ${{REPLICAS_COUNT}}
    template:
      metadata:
        labels:
          app: assisted-service
      spec:
        serviceAccountName: assisted-service
        containers:
          - name: envoy-sidecar
            image: ${ENVOY_IMAGE}:${ENVOY_TAG}
            imagePullPolicy: IfNotPresent
            command:
            - envoy
            - --config-path
            - /configs/envoy/main.yaml
            ports:
            - name: api-envoy
              protocol: TCP
              containerPort: 8900
            - name: metrics-envoy
              protocol: TCP
              containerPort: 9000
            volumeMounts:
            - name: envoy-config
              mountPath: /configs/envoy
            livenessProbe:
              httpGet:
                path: /health
                port: 8900
              initialDelaySeconds: ${{LIVENESS_PROBE_INITIAL_DELAY_SECONDS}}
            readinessProbe:
              httpGet:
                path: /ready
                port: 8900
              initialDelaySeconds: ${{READINESS_PROBE_INITIAL_DELAY_SECONDS}}
            resources:
              requests:
                memory: ${ENVOY_MEMORY_REQUEST}
                cpu: ${ENVOY_CPU_REQUEST}
              limits:
                memory: ${ENVOY_MEMORY_LIMIT}
          - name: assisted-service
            image: ${ASSISTED_SERVICE_IMAGE}:${IMAGE_TAG}
            imagePullPolicy: Always
            resources:
              limits:
                cpu: ${{CPU_LIMIT}}
                memory: ${MEMORY_LIMIT}
                ephemeral-storage: ${EPHEMERAL_STORAGE_LIMIT}
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
                ephemeral-storage: ${EPHEMERAL_STORAGE_REQUEST}
            ports:
              - name: assisted-svc
                containerPort: 8090
            livenessProbe:
              httpGet:
                path: /health
                port: 8090
              initialDelaySeconds: ${{LIVENESS_PROBE_INITIAL_DELAY_SECONDS}}
            readinessProbe:
              httpGet:
                path: /ready
                port: 8090
              initialDelaySeconds: ${{READINESS_PROBE_INITIAL_DELAY_SECONDS}}
            env:
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    key: aws_secret_access_key
                    name: assisted-installer-s3
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    key: aws_access_key_id
                    name: assisted-installer-s3
              - name: S3_REGION
                valueFrom:
                  secretKeyRef:
                    key: aws_region
                    name: assisted-installer-s3
              - name: S3_BUCKET
                valueFrom:
                  secretKeyRef:
                    key: bucket
                    name: assisted-installer-s3
              - name: S3_ENDPOINT_URL
                valueFrom:
                  secretKeyRef:
                    key: endpoint
                    name: assisted-installer-s3
              - name: S3_USE_SSL
                value: ${S3_USE_SSL}
              - name: DB_HOST
                valueFrom:
                  secretKeyRef:
                    key: db.host
                    name: assisted-installer-rds
              - name: DB_NAME
                valueFrom:
                  secretKeyRef:
                    key: db.name
                    name: assisted-installer-rds
              - name: DB_PASS
                valueFrom:
                  secretKeyRef:
                    key: db.password
                    name: assisted-installer-rds
              - name: DB_PORT
                valueFrom:
                  secretKeyRef:
                    key: db.port
                    name: assisted-installer-rds
              - name: DB_USER
                valueFrom:
                  secretKeyRef:
                    key: db.user
                    name: assisted-installer-rds
              - name: OCM_SERVICE_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    key: ocm-service.clientId
                    name: assisted-installer-sso
              - name: OCM_SERVICE_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    key: ocm-service.clientSecret
                    name: assisted-installer-sso
              - name: KAFKA_BOOTSTRAP_SERVER
                valueFrom:
                  secretKeyRef:
                    key: ${KAFKA_BOOTSTRAP_SERVER_SECRET_KEY}
                    name: ${KAFKA_BOOTSTRAP_SERVER_SECRET_NAME}
              - name: KAFKA_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    key: ${KAFKA_USERNAME_SECRET_KEY}
                    name: ${KAFKA_USERNAME_SECRET_NAME}
              - name: KAFKA_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    key: ${KAFKA_PASSWORD_SECRET_KEY}
                    name: ${KAFKA_PASSWORD_SECRET_NAME}
              - name: ENABLE_EVENT_STREAMING
                value: ${ENABLE_EVENT_STREAMING}
              - name: KAFKA_EVENT_STREAM_TOPIC
                value: ${KAFKA_EVENT_STREAM_TOPIC}
              - name: KAFKA_SASL_MECHANISM
                value: ${KAFKA_SASL_MECHANISM}
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: SERVICE_BASE_URL
                value: ${SERVICE_BASE_URL}
              - name: IMAGE_SERVICE_BASE_URL
                value: ${IMAGE_SERVICE_BASE_URL}
              - name: BASE_DNS_DOMAINS
                value: ${BASE_DNS_DOMAINS}
              - name: OS_IMAGES
                value: ${OS_IMAGES}
              - name: RELEASE_IMAGES
                value: ${RELEASE_IMAGES}
              - name: MUST_GATHER_IMAGES
                value: ${MUST_GATHER_IMAGES}
              - name: AUTH_TYPE
                value: ${AUTH_TYPE}
              - name: JWKS_URL
                value: ${JWKS_URL}
              - name: ALLOWED_DOMAINS
                value: ${ALLOWED_DOMAINS}
              - name: OCM_BASE_URL
                value: ${OCM_BASE_URL}
              - name: HW_VALIDATOR_REQUIREMENTS
                value: ${HW_VALIDATOR_REQUIREMENTS}
              - name: INSTALLER_IMAGE
                value: ${INSTALLER_IMAGE}
              - name: SELF_VERSION
                value: ${ASSISTED_SERVICE_IMAGE}:${IMAGE_TAG}
              - name: CONTROLLER_IMAGE
                value: ${CONTROLLER_IMAGE}
              - name: AGENT_DOCKER_IMAGE
                value: ${AGENT_DOCKER_IMAGE}
              - name: LOG_LEVEL
                value: ${LOG_LEVEL}
              - name: INSTALL_RH_CA
                value: ${INSTALL_RH_CA}
              - name: REGISTRY_CREDS
                value: ${REGISTRY_CREDS}
              - name: RELEASE_TAG
                value: ${RELEASE_TAG}
              - name: AGENT_TIMEOUT_START
                value: ${AGENT_TIMEOUT_START}
              - name: AWS_SHARED_CREDENTIALS_FILE
                value: /etc/.aws/credentials
              - name: ADMIN_USERS
                value: ${ADMIN_USERS}
              - name: LIVENESS_VALIDATION_TIMEOUT
                value: ${LIVENESS_VALIDATION_TIMEOUT}
              - name: PUBLIC_CONTAINER_REGISTRIES
                value: ${PUBLIC_CONTAINER_REGISTRIES}
              - name: CHECK_CLUSTER_VERSION
                value: ${CHECK_CLUSTER_VERSION}
              - name: IPV6_SUPPORT
                value: ${IPV6_SUPPORT}
              - name: ENABLE_SINGLE_NODE_DNSMASQ
                value: ${ENABLE_SINGLE_NODE_DNSMASQ}
              - name: DB_MAX_IDLE_CONNECTIONS
                value: ${DB_MAX_IDLE_CONNECTIONS}
              - name: DB_MAX_OPEN_CONNECTIONS
                value: ${DB_MAX_OPEN_CONNECTIONS}
              - name: DISABLED_HOST_VALIDATIONS
                value: ${DISABLED_HOST_VALIDATIONS}
              - name: DISABLED_STEPS
                value: ${DISABLED_STEPS}
              - name: ENABLE_AUTO_ASSIGN
                value: ${ENABLE_AUTO_ASSIGN}
              - name: DISK_ENCRYPTION_SUPPORT
                value: ${DISK_ENCRYPTION_SUPPORT}
              - name: MAX_GC_INFRAENVS_PER_INTERVAL
                value: ${MAX_GC_INFRAENVS_PER_INTERVAL}
              - name: INFRAENV_DELETION_WORKER_INTERVAL
                value: ${INFRAENV_DELETION_WORKER_INTERVAL}
              - name: INFRAENV_DELETED_INACTIVE_AFTER
                value: ${INFRAENV_DELETED_INACTIVE_AFTER}
              - name: CNV_SNO_INSTALL_HPP
                value: ${CNV_SNO_INSTALL_HPP}
              - name: ENABLE_ORG_TENANCY
                value: ${ENABLE_ORG_TENANCY}
              - name: ENABLE_ORG_BASED_FEATURE_GATES
                value: ${ENABLE_ORG_BASED_FEATURE_GATES}
              - name: ISO_IMAGE_TYPE
                value: ${ISO_IMAGE_TYPE}
              - name: ENABLE_UPGRADE_AGENT
                value: ${ENABLE_UPGRADE_AGENT}
              - name: WORK_DIR
                value: ${WORK_DIR}
              - name: ENABLE_REJECT_UNKNOWN_FIELDS
                value: ${ENABLE_REJECT_UNKNOWN_FIELDS}
              - name: ENABLE_DATA_COLLECTION
                value: ${ENABLE_DATA_COLLECTION}
              - name: INSTALLER_CACHE_CAPACITY
                value: ${INSTALLER_CACHE_CAPACITY}
              - name: ENABLE_OKD_SUPPORT
                value: ${ENABLE_OKD_SUPPORT}
            volumeMounts:
              - name: route53-creds
                mountPath: "/etc/.aws"
                readOnly: true
              - name: workdir-volume
                mountPath: ${WORK_DIR}
        volumes:
          - name: workdir-volume
            emptyDir: {}
          - name: route53-creds
            secret:
              secretName: route53-creds
              optional: true
          - name: envoy-config
            configMap:
              name: ${ENVOY_CONFIGMAP_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: assisted-service
    name: assisted-service
  spec:
    ports:
      - name: assisted-svc
        port: 8090
        protocol: TCP
        targetPort: ${{SVC_TARGET_PORT}}
    selector:
      app: assisted-service
- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: assisted-service
    name: assisted-service
  spec:
    minAvailable: 2
    selector:
      matchLabels:
        app: assisted-service
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: assisted-service-envoy-config
  data:
    main.yaml: |
      admin:
        access_log:
        - name: envoy.access_loggers.file
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: /dev/null
        address:
          socket_address: { address: 0.0.0.0, port_value: 9000 }

      static_resources:
        listeners:
        - name: ingress
          address:
            socket_address: { address: 0.0.0.0, port_value: 8900 }
          filter_chains:
          - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                access_log:
                - name: envoy.access_loggers.file
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    log_format:
                      json_format:
                        authority: "%REQ(:AUTHORITY)%"
                        bytes_rx: "%BYTES_RECEIVED%"
                        bytes_tx: "%BYTES_SENT%"
                        duration: "%DURATION%"
                        method: "%REQ(:METHOD)%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                        protocol: "%PROTOCOL%"
                        response_code: "%RESPONSE_CODE%"
                        response_flags: "%RESPONSE_FLAGS%"
                        timestamp: "%START_TIME%"
                        user_agent: "%REQ(USER-AGENT)%"
                        upstream_duration: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                        x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                        x_request_id: "%REQ(X-REQUEST-ID)%"
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                  - name: local_service
                    domains: ["*"]
                    routes:
                    - match:
                        prefix: "/"
                        query_parameters:
                        - name: "logs_type"
                          string_match:
                            exact: "node-boot"
                      direct_response:
                        status: 400
                        body:
                          inline_string: "bad request"
                    - match: { prefix: "/" }
                      route:
                        cluster: assisted_service
                        timeout: ${ENVOY_TIMEOUT}
                http_filters:
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        clusters:
        - name: assisted_service
          connect_timeout: 1s
          type: STATIC
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: assisted_service
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8090
